{"ast":null,"code":"// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory(require(\"react\"));else if (typeof define === 'function' && define.amd) define([\"react\"], factory);else if (typeof exports === 'object') exports[\"ReactVisForce\"] = factory(require(\"react\"));else root[\"ReactVisForce\"] = factory(root[\"React\"]);\n})(this, function (__WEBPACK_EXTERNAL_MODULE_2__) {\n  return (\n    /******/\n    function (modules) {\n      // webpackBootstrap\n\n      /******/\n      // The module cache\n\n      /******/\n      var installedModules = {};\n      /******/\n\n      /******/\n      // The require function\n\n      /******/\n\n      function __webpack_require__(moduleId) {\n        /******/\n\n        /******/\n        // Check if module is in cache\n\n        /******/\n        if (installedModules[moduleId])\n          /******/\n          return installedModules[moduleId].exports;\n        /******/\n\n        /******/\n        // Create a new module (and put it into the cache)\n\n        /******/\n\n        var module = installedModules[moduleId] = {\n          /******/\n          exports: {},\n\n          /******/\n          id: moduleId,\n\n          /******/\n          loaded: false\n          /******/\n\n        };\n        /******/\n\n        /******/\n        // Execute the module function\n\n        /******/\n\n        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n        /******/\n\n        /******/\n        // Flag the module as loaded\n\n        /******/\n\n        module.loaded = true;\n        /******/\n\n        /******/\n        // Return the exports of the module\n\n        /******/\n\n        return module.exports;\n        /******/\n      }\n      /******/\n\n      /******/\n\n      /******/\n      // expose the modules object (__webpack_modules__)\n\n      /******/\n\n\n      __webpack_require__.m = modules;\n      /******/\n\n      /******/\n      // expose the module cache\n\n      /******/\n\n      __webpack_require__.c = installedModules;\n      /******/\n\n      /******/\n      // __webpack_public_path__\n\n      /******/\n\n      __webpack_require__.p = \"/react-vis-force/\";\n      /******/\n\n      /******/\n      // Load entry module and return exports\n\n      /******/\n\n      return __webpack_require__(0);\n      /******/\n    }(\n    /************************************************************************/\n\n    /******/\n    [\n    /* 0 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      __webpack_require__(9);\n\n      module.exports = __webpack_require__(15);\n      /***/\n    },\n    /* 1 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      /**\n       * Copyright 2013-present, Facebook, Inc.\n       * All rights reserved.\n       *\n       * This source code is licensed under the BSD-style license found in the\n       * LICENSE file in the root directory of this source tree. An additional grant\n       * of patent rights can be found in the PATENTS file in the same directory.\n       */\n      if (false) {\n        var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol.for && Symbol.for('react.element') || 0xeac7;\n\n        var isValidElement = function isValidElement(object) {\n          return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n        }; // By explicitly using `prop-types` you are opting into new development behavior.\n        // http://fb.me/prop-types-in-prod\n\n\n        var throwOnDirectAccess = true;\n        module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n      } else {\n        // By explicitly using `prop-types` you are opting into new production behavior.\n        // http://fb.me/prop-types-in-prod\n        module.exports = __webpack_require__(32)();\n      }\n      /***/\n\n    },\n    /* 2 */\n\n    /***/\n    function (module, exports) {\n      module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n      /***/\n    },\n    /* 3 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n        return typeof obj;\n      } : function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n\n      exports.asStrengthFn = asStrengthFn;\n      exports.nodeId = nodeId;\n      exports.linkId = linkId;\n      exports.runSimulation = runSimulation;\n      exports.createSimulation = createSimulation;\n      exports.updateSimulation = updateSimulation;\n\n      var _d3Force = __webpack_require__(22);\n\n      var _setsEqual = __webpack_require__(19);\n\n      var _setsEqual2 = _interopRequireDefault(_setsEqual);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      function _toConsumableArray(arr) {\n        if (Array.isArray(arr)) {\n          for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n          }\n\n          return arr2;\n        } else {\n          return Array.from(arr);\n        }\n      }\n\n      function _defineProperty(obj, key, value) {\n        if (key in obj) {\n          Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n          });\n        } else {\n          obj[key] = value;\n        }\n\n        return obj;\n      }\n\n      var ALPHA_FACTORS = ['alpha', 'alphaDecay', 'alphaMin', 'alphaTarget', 'velocityDecay']; // ---- PRIVATE METHODS ----\n\n      /**\n       * return a mapped list of objects where only the attrNames provided\n       * remain on the objects in the collection.\n       * @param {array} list - array of objects\n       * @param {...array} attrNames - keys, spread over the rest of the arguments\n       * @return {array} mapped list of new objects with only the attrNames on them\n       */\n\n      function pick(list) {\n        for (var _len = arguments.length, attrNames = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          attrNames[_key - 1] = arguments[_key];\n        }\n\n        return list.map(function (item) {\n          return attrNames.reduce(function (obj, attrName) {\n            return Object.assign(obj, _defineProperty({}, attrName, item[attrName]));\n          }, {});\n        });\n      }\n      /**\n       * take a function or a value to return as a strength and set it\n       * @param {mixed} target\n       * @return {function} a strength function\n       */\n\n\n      function asStrengthFn(target) {\n        switch (typeof target === 'undefined' ? 'undefined' : _typeof(target)) {\n          case 'function':\n            return target;\n\n          default:\n            return function () {\n              return target;\n            };\n        }\n      }\n\n      function applyAlphaFactors(simulation, options) {\n        ALPHA_FACTORS.forEach(function (alphaFactorName) {\n          if ({}.hasOwnProperty.call(options, alphaFactorName)) {\n            simulation[alphaFactorName](options[alphaFactorName]);\n          }\n        });\n        return simulation;\n      }\n\n      function applyCenterForce(simulation, _ref) {\n        var height = _ref.height,\n            width = _ref.width; // setup a new center force if it doesn't exist.\n\n        if (!simulation.force('center')) {\n          simulation.force('center', (0, _d3Force.forceCenter)());\n        } // set the center force to the center of the graph. only update\n        // the value if it is not the same as the previous value.\n\n\n        var centerX = width ? width / 2 : 0;\n\n        if (width > 0 && simulation.force('center').x() !== centerX) {\n          simulation.shouldRun = true;\n          simulation.force('center').x(centerX);\n        }\n\n        var centerY = height ? height / 2 : 0;\n\n        if (height > 0 && simulation.force('center').y() !== centerY) {\n          simulation.shouldRun = true;\n          simulation.force('center').y(centerY);\n        }\n\n        return simulation;\n      }\n\n      function applyManyBodyChargeForce(simulation, _ref2) {\n        var _ref2$strength = _ref2.strength,\n            strength = _ref2$strength === undefined ? {} : _ref2$strength;\n\n        if (!simulation.force('charge')) {\n          simulation.force('charge', (0, _d3Force.forceManyBody)());\n        }\n\n        if (strength.charge !== simulation.strength.charge) {\n          simulation.strength.charge = strength.charge;\n          simulation.shouldRun = true;\n          simulation.force('charge').strength(asStrengthFn(strength.charge));\n        }\n      }\n\n      function applyCollisionForce(simulation, _ref3) {\n        var _ref3$radiusMargin = _ref3.radiusMargin,\n            radiusMargin = _ref3$radiusMargin === undefined ? 3 : _ref3$radiusMargin,\n            _ref3$strength = _ref3.strength,\n            strength = _ref3$strength === undefined ? {} : _ref3$strength;\n\n        if (!simulation.force('collide')) {\n          simulation.force('collide', (0, _d3Force.forceCollide)());\n        }\n\n        if (simulation.radiusMargin !== radiusMargin) {\n          simulation.radiusMargin = radiusMargin;\n          simulation.shouldRun = true;\n          simulation.force('collide').radius(function (_ref4) {\n            var radius = _ref4.radius;\n            return radius + radiusMargin;\n          });\n        }\n\n        if (strength.collide !== simulation.strength.collide) {\n          simulation.strength.collide = strength.collide;\n          simulation.shouldRun = true;\n          simulation.force('collide').strength(asStrengthFn(strength.collide)());\n        }\n      }\n\n      function applyLinkForce(simulation, _ref5) {\n        var _ref5$data = _ref5.data,\n            nodes = _ref5$data.nodes,\n            links = _ref5$data.links,\n            _ref5$linkAttrs = _ref5.linkAttrs,\n            linkAttrs = _ref5$linkAttrs === undefined ? [] : _ref5$linkAttrs,\n            _ref5$nodeAttrs = _ref5.nodeAttrs,\n            nodeAttrs = _ref5$nodeAttrs === undefined ? [] : _ref5$nodeAttrs; // setup the link force if it isn't already set up\n\n        if (!simulation.force('link')) {\n          simulation.force('link', (0, _d3Force.forceLink)().id(nodeId));\n        } // set the nodes and links for this simulation. provide\n        // new instances to avoid mutating the underlying values.\n        // only update if there are changes.\n\n\n        var prevNodesSet = new Set(simulation.nodes().map(nodeId));\n        var newNodesSet = new Set(nodes.map(nodeId));\n\n        if (!(0, _setsEqual2.default)(prevNodesSet, newNodesSet)) {\n          simulation.shouldRun = true;\n          simulation.nodes(pick.apply(undefined, [nodes, 'id', 'radius', 'fx', 'fy'].concat(_toConsumableArray(nodeAttrs))));\n        }\n\n        var prevLinksSet = new Set(simulation.force('link').links().map(linkId));\n        var newLinksSet = new Set(links.map(linkId));\n\n        if (!(0, _setsEqual2.default)(prevLinksSet, newLinksSet)) {\n          simulation.shouldRun = true;\n          simulation.force('link').links(pick.apply(undefined, [links, 'source', 'target', 'value'].concat(_toConsumableArray(linkAttrs))));\n        }\n      }\n\n      function applyAxisForce(simulation, _ref6) {\n        var _ref6$strength = _ref6.strength,\n            strength = _ref6$strength === undefined ? {} : _ref6$strength;\n\n        if (!simulation.force('x')) {\n          simulation.force('x', (0, _d3Force.forceX)());\n        }\n\n        if (!simulation.force('y')) {\n          simulation.force('y', (0, _d3Force.forceY)());\n        }\n\n        if (strength.x !== simulation.strength.x) {\n          simulation.strength.x = strength.x;\n          simulation.shouldRun = true;\n          simulation.force('x').strength(asStrengthFn(strength.x));\n        }\n\n        if (strength.y !== simulation.strength.y) {\n          simulation.strength.y = strength.y;\n          simulation.shouldRun = true;\n          simulation.force('y').strength(asStrengthFn(strength.y));\n        }\n      } // ---- PUBLIC METHODS ----\n\n      /**\n       * given a force-directed graph node, return its id.\n       * @param {object} node\n       * @returns {string} id\n       */\n\n\n      function nodeId(node) {\n        return node.id;\n      }\n      /**\n       * given a force-directed graph link, return its id.\n       * @param {object} link\n       * @returns {string} id\n       */\n\n\n      function linkId(link) {\n        return (link.source.id || link.source) + '=>' + (link.target.id || link.target);\n      }\n      /**\n       * run the simulation and stop it after the appropriate number of steps.\n       * @param {object} simulation - a d3-force simulation ready to be run\n       * @param {number} steps - the number of times to call tick\n       * @returns {object} the run simulation\n       */\n\n\n      function runSimulation(simulation) {\n        simulation.restart(); // run the simulation to fruition and stop it.\n\n        while (simulation.alpha() > simulation.alphaMin()) {\n          simulation.tick();\n        }\n\n        simulation.stop();\n        return simulation;\n      }\n      /**\n       * given the options, update a simulation\n       * @param {object} options\n       * @returns {object} d3-force simulation\n       */\n\n\n      function createSimulation(options) {\n        // update center force\n        var simulation = (0, _d3Force.forceSimulation)();\n        simulation.strength = {};\n        return updateSimulation(simulation, options);\n      }\n      /**\n       * given the options, update a simulation.\n       * @param {object} simulation - a d3-force simulation\n       * @param {object} options\n       * @param {number} options.height\n       * @param {number} options.width\n       * @param {object} options.data\n       * @param {array} options.data.nodes\n       * @param {array} options.data.links\n       * @param {object} [options.strength]\n       * @param {function|number} [options.strength.charge]\n       * @param {function|number} [options.strength.collide]\n       * @param {function|number} [options.strength.x]\n       * @param {function|number} [options.strength.y]\n       * @param {boolean} [options.animate]\n       * @param {number} [options.alpha]\n       * @param {number} [options.alphaDecay]\n       * @param {number} [options.alphaMin]\n       * @param {number} [options.alphaTarget]\n       * @param {number} [options.velocityDecay]\n       * @param {number} [options.radiusMargin]\n       * @returns {object} d3-force simulation\n       */\n\n\n      function updateSimulation(simulation, options) {\n        applyAlphaFactors(simulation, options);\n        applyCenterForce(simulation, options);\n        applyManyBodyChargeForce(simulation, options);\n        applyCollisionForce(simulation, options);\n        applyLinkForce(simulation, options);\n        applyAxisForce(simulation, options);\n\n        if (!options.animate && simulation.shouldRun) {\n          runSimulation(simulation);\n        }\n\n        simulation.shouldRun = null;\n        return simulation;\n      }\n      /***/\n\n    },\n    /* 4 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _extends = Object.assign || function (target) {\n        for (var i = 1; i < arguments.length; i++) {\n          var source = arguments[i];\n\n          for (var key in source) {\n            if (Object.prototype.hasOwnProperty.call(source, key)) {\n              target[key] = source[key];\n            }\n          }\n        }\n\n        return target;\n      };\n\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      exports.isNode = isNode;\n      exports.isLink = isLink;\n\n      var _react = __webpack_require__(2);\n\n      var _react2 = _interopRequireDefault(_react);\n\n      var _propTypes = __webpack_require__(1);\n\n      var _propTypes2 = _interopRequireDefault(_propTypes);\n\n      var _lodash = __webpack_require__(28);\n\n      var _lodash2 = _interopRequireDefault(_lodash);\n\n      __webpack_require__(25);\n\n      var _d3Force = __webpack_require__(3);\n\n      var forceUtils = _interopRequireWildcard(_d3Force);\n\n      var _raf = __webpack_require__(18);\n\n      var rafUtils = _interopRequireWildcard(_raf);\n\n      var _ZoomableSVGGroup = __webpack_require__(14);\n\n      var _ZoomableSVGGroup2 = _interopRequireDefault(_ZoomableSVGGroup);\n\n      var _simulation = __webpack_require__(17);\n\n      var _simulation2 = _interopRequireDefault(_simulation);\n\n      function _interopRequireWildcard(obj) {\n        if (obj && obj.__esModule) {\n          return obj;\n        } else {\n          var newObj = {};\n\n          if (obj != null) {\n            for (var key in obj) {\n              if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n            }\n          }\n\n          newObj.default = obj;\n          return newObj;\n        }\n      }\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      function _objectWithoutProperties(obj, keys) {\n        var target = {};\n\n        for (var i in obj) {\n          if (keys.indexOf(i) >= 0) continue;\n          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n          target[i] = obj[i];\n        }\n\n        return target;\n      }\n\n      function _defineProperty(obj, key, value) {\n        if (key in obj) {\n          Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n          });\n        } else {\n          obj[key] = value;\n        }\n\n        return obj;\n      }\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n\n      function _possibleConstructorReturn(self, call) {\n        if (!self) {\n          throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n        }\n\n        return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n      }\n\n      function _inherits(subClass, superClass) {\n        if (typeof superClass !== \"function\" && superClass !== null) {\n          throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n        }\n\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\n          constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n          }\n        });\n        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n      }\n\n      function isNode(child) {\n        return child.props && child.props.node;\n      }\n\n      function isLink(child) {\n        return child.props && child.props.link;\n      }\n\n      var zoomPropTypes = _propTypes2.default.shape({\n        zoomSpeed: _propTypes2.default.number,\n        minScale: _propTypes2.default.number,\n        maxScale: _propTypes2.default.number,\n        panLimit: _propTypes2.default.number,\n        onZoom: _propTypes2.default.func,\n        onPan: _propTypes2.default.func\n      });\n\n      var ForceGraph = function (_PureComponent) {\n        _inherits(ForceGraph, _PureComponent);\n\n        _createClass(ForceGraph, null, [{\n          key: 'getDataFromChildren',\n          value: function getDataFromChildren(children) {\n            var data = {\n              nodes: [],\n              links: []\n            };\n\n            _react.Children.forEach(children, function (child) {\n              if (isNode(child)) {\n                data.nodes.push(child.props.node);\n              } else if (isLink(child)) {\n                data.links.push(child.props.link);\n              }\n            });\n\n            return data;\n          }\n          /**\n           * return a map of nodeIds to node positions.\n           * @param {object} simulation - d3-force simulation\n           * @return {object} map of nodeIds to positions\n           */\n\n        }, {\n          key: 'getNodePositions',\n          value: function getNodePositions(simulation) {\n            return simulation.nodes().reduce(function (obj, node) {\n              return Object.assign(obj, _defineProperty({}, forceUtils.nodeId(node), {\n                cx: node.fx || node.x,\n                cy: node.fy || node.y\n              }));\n            }, {});\n          }\n          /**\n           * return a map of nodeIds to node positions.\n           * @param {object} simulation - d3-force simulation\n           * @return {object} map of linkIds to positions\n           */\n\n        }, {\n          key: 'getLinkPositions',\n          value: function getLinkPositions(simulation) {\n            return simulation.force('link').links().reduce(function (obj, link) {\n              return Object.assign(obj, _defineProperty({}, forceUtils.linkId(link), {\n                x1: link.source.x,\n                y1: link.source.y,\n                x2: link.target.x,\n                y2: link.target.y\n              }));\n            }, {});\n          }\n        }, {\n          key: 'propTypes',\n          get: function get() {\n            return {\n              children: _propTypes2.default.any,\n              className: _propTypes2.default.string,\n              // zoom and pan\n              zoom: _propTypes2.default.bool,\n              zoomOptions: zoomPropTypes,\n              // create custom simulations\n              createSimulation: _propTypes2.default.func,\n              updateSimulation: _propTypes2.default.func,\n              simulationOptions: _simulation2.default,\n              // adjust label display\n              labelAttr: _propTypes2.default.string,\n              labelOffset: _propTypes2.default.objectOf(_propTypes2.default.func),\n              showLabels: _propTypes2.default.bool\n            };\n          }\n        }, {\n          key: 'defaultProps',\n          get: function get() {\n            return {\n              createSimulation: forceUtils.createSimulation,\n              updateSimulation: forceUtils.updateSimulation,\n              zoom: false,\n              labelAttr: 'id',\n              simulationOptions: _simulation.DEFAULT_SIMULATION_PROPS,\n              labelOffset: {\n                x: function x(_ref) {\n                  var _ref$radius = _ref.radius,\n                      radius = _ref$radius === undefined ? 5 : _ref$radius;\n                  return radius / 2;\n                },\n                y: function y(_ref2) {\n                  var _ref2$radius = _ref2.radius,\n                      radius = _ref2$radius === undefined ? 5 : _ref2$radius;\n                  return -radius / 4;\n                }\n              },\n              showLabels: false,\n              zoomOptions: {}\n            };\n          }\n        }]);\n\n        function ForceGraph(props) {\n          _classCallCheck(this, ForceGraph);\n\n          var _this = _possibleConstructorReturn(this, (ForceGraph.__proto__ || Object.getPrototypeOf(ForceGraph)).call(this, props));\n\n          var createSimulation = props.createSimulation,\n              simulationOptions = props.simulationOptions;\n\n          var data = _this.getDataFromChildren();\n\n          _this.simulation = createSimulation(_extends({}, _simulation.DEFAULT_SIMULATION_PROPS, simulationOptions, {\n            data: data\n          }));\n          _this.state = {\n            linkPositions: {},\n            nodePositions: {},\n            scale: 1\n          };\n\n          _this.bindSimulationTick();\n\n          return _this;\n        }\n\n        _createClass(ForceGraph, [{\n          key: 'componentDidMount',\n          value: function componentDidMount() {\n            this.updateSimulation();\n          }\n        }, {\n          key: 'componentWillReceiveProps',\n          value: function componentWillReceiveProps(nextProps) {\n            this.lastUpdated = new Date();\n            this.updateSimulation(nextProps);\n          }\n        }, {\n          key: 'componentWillUnmount',\n          value: function componentWillUnmount() {\n            this.unbindSimulationTick();\n          }\n        }, {\n          key: 'onSimulationTick',\n          value: function onSimulationTick() {\n            this.frame = rafUtils.requestAnimationFrame(this.updatePositions.bind(this));\n          }\n        }, {\n          key: 'onZoom',\n          value: function onZoom(event, scale) {\n            var _props$zoomOptions$on = this.props.zoomOptions.onZoom,\n                _onZoom = _props$zoomOptions$on === undefined ? function () {} : _props$zoomOptions$on;\n\n            for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n              args[_key - 2] = arguments[_key];\n            }\n\n            _onZoom.apply(undefined, [event, scale].concat(args));\n\n            this.setState({\n              scale: scale\n            });\n          }\n        }, {\n          key: 'onPan',\n          value: function onPan() {\n            var _props$zoomOptions$on2 = this.props.zoomOptions.onPan,\n                _onPan = _props$zoomOptions$on2 === undefined ? function () {} : _props$zoomOptions$on2;\n\n            _onPan.apply(undefined, arguments);\n          }\n        }, {\n          key: 'getDataFromChildren',\n          value: function getDataFromChildren() {\n            var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n            var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n            if (!force && this.cachedData && new Date() > this.lastUpdated) {\n              return this.cachedData;\n            }\n\n            var data = ForceGraph.getDataFromChildren(props.children);\n            Object.assign(this, {\n              cachedData: data,\n              lastUpdated: new Date()\n            });\n            return data;\n          }\n        }, {\n          key: 'bindSimulationTick',\n          value: function bindSimulationTick() {\n            this.simulation.on('tick', this.updateSimulation.bind(this));\n          }\n        }, {\n          key: 'unbindSimulationTick',\n          value: function unbindSimulationTick() {\n            this.simulation.on('tick', null);\n            this.frame = this.frame && rafUtils.cancelAnimationFrame(this.frame);\n          }\n        }, {\n          key: 'updateSimulation',\n          value: function updateSimulation() {\n            var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n            var simulation = this.simulation;\n            var updateSimulation = props.updateSimulation,\n                simulationOptions = props.simulationOptions;\n            this.simulation = updateSimulation(simulation, _extends({}, _simulation.DEFAULT_SIMULATION_PROPS, simulationOptions, {\n              data: this.getDataFromChildren(props, true)\n            }));\n            this.onSimulationTick();\n          }\n        }, {\n          key: 'updatePositions',\n          value: function updatePositions() {\n            this.setState({\n              linkPositions: ForceGraph.getLinkPositions(this.simulation),\n              nodePositions: ForceGraph.getNodePositions(this.simulation)\n            });\n          }\n        }, {\n          key: 'scale',\n          value: function scale(number) {\n            return typeof number === 'number' ? number / this.state.scale : number;\n          }\n        }, {\n          key: 'render',\n          value: function render() {\n            var _this2 = this;\n\n            var _props = this.props,\n                children = _props.children,\n                className = _props.className,\n                labelAttr = _props.labelAttr,\n                labelOffset = _props.labelOffset,\n                showLabels = _props.showLabels,\n                simulationOptions = _props.simulationOptions,\n                zoomOptions = _props.zoomOptions,\n                zoom = _props.zoom;\n            var _state = this.state,\n                linkPositions = _state.linkPositions,\n                nodePositions = _state.nodePositions;\n            var _simulationOptions$he = simulationOptions.height,\n                height = _simulationOptions$he === undefined ? _simulation.DEFAULT_SIMULATION_PROPS.height : _simulationOptions$he,\n                _simulationOptions$wi = simulationOptions.width,\n                width = _simulationOptions$wi === undefined ? _simulation.DEFAULT_SIMULATION_PROPS.width : _simulationOptions$wi;\n            var nodeElements = [];\n            var labelElements = [];\n            var linkElements = [];\n            var zoomableChildren = [];\n            var staticChildren = [];\n            var maxPanWidth = (0, _lodash2.default)(nodePositions, function (maxWidth, _ref3) {\n              var cx = _ref3.cx;\n              return maxWidth > Math.abs(cx) ? maxWidth : Math.abs(cx);\n            }, 0);\n            var maxPanHeight = (0, _lodash2.default)(nodePositions, function (maxHeight, _ref4) {\n              var cy = _ref4.cy;\n              return maxHeight > Math.abs(cy) ? maxHeight : Math.abs(cy);\n            }, 0); // build up the real children to render by iterating through the provided children\n\n            _react.Children.forEach(children, function (child, idx) {\n              if (isNode(child)) {\n                var _child$props = child.props,\n                    node = _child$props.node,\n                    showLabel = _child$props.showLabel,\n                    labelClass = _child$props.labelClass,\n                    _child$props$labelSty = _child$props.labelStyle,\n                    labelStyle = _child$props$labelSty === undefined ? {} : _child$props$labelSty,\n                    strokeWidth = _child$props.strokeWidth;\n                var nodePosition = nodePositions[forceUtils.nodeId(node)];\n                nodeElements.push((0, _react.cloneElement)(child, _extends({}, nodePosition, {\n                  scale: _this2.state.scale,\n                  strokeWidth: _this2.scale(strokeWidth)\n                })));\n\n                if ((showLabels || showLabel) && nodePosition) {\n                  var fontSize = labelStyle.fontSize,\n                      spreadableLabelStyle = _objectWithoutProperties(labelStyle, ['fontSize']);\n\n                  labelElements.push(_react2.default.createElement('text', {\n                    className: 'rv-force__label ' + labelClass,\n                    key: forceUtils.nodeId(node) + '-label',\n                    x: nodePosition.cx + labelOffset.x(node),\n                    y: nodePosition.cy + labelOffset.y(node),\n                    fontSize: _this2.scale(fontSize),\n                    style: spreadableLabelStyle\n                  }, node[labelAttr]));\n                }\n              } else if (isLink(child)) {\n                var link = child.props.link;\n                var _strokeWidth = link.strokeWidth;\n                var linkPosition = linkPositions[forceUtils.linkId(link)];\n                linkElements.push((0, _react.cloneElement)(child, _extends({}, linkPosition, {\n                  strokeWidth: _this2.scale(_strokeWidth)\n                })));\n              } else {\n                var zoomable = child.props.zoomable;\n\n                if (zoom && zoomable) {\n                  zoomableChildren.push((0, _react.cloneElement)(child, {\n                    key: child.key || 'zoomable-' + idx\n                  }));\n                } else {\n                  staticChildren.push((0, _react.cloneElement)(child, {\n                    key: child.key || 'static-' + idx\n                  }));\n                }\n              }\n            });\n\n            return _react2.default.createElement('svg', {\n              className: 'rv-force__svg ' + className,\n              width: width,\n              height: height\n            }, _react2.default.createElement('g', {\n              className: 'rv-force__static-elements'\n            }, staticChildren), _react2.default.createElement(_ZoomableSVGGroup2.default, _extends({\n              disabled: !zoom,\n              height: maxPanHeight,\n              width: maxPanWidth\n            }, zoomOptions, {\n              onZoom: function onZoom() {\n                return _this2.onZoom.apply(_this2, arguments);\n              },\n              onPan: function onPan() {\n                return _this2.onPan.apply(_this2, arguments);\n              }\n            }), _react2.default.createElement('g', {\n              className: 'rv-force__zoomable-elements'\n            }, zoomableChildren), _react2.default.createElement('g', {\n              className: 'rv-force__links'\n            }, linkElements), _react2.default.createElement('g', {\n              className: 'rv-force__nodes'\n            }, nodeElements), _react2.default.createElement('g', {\n              className: 'rv-force__labels'\n            }, labelElements)));\n          }\n        }]);\n\n        return ForceGraph;\n      }(_react.PureComponent);\n\n      exports.default = ForceGraph;\n      /***/\n    },\n    /* 5 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _extends = Object.assign || function (target) {\n        for (var i = 1; i < arguments.length; i++) {\n          var source = arguments[i];\n\n          for (var key in source) {\n            if (Object.prototype.hasOwnProperty.call(source, key)) {\n              target[key] = source[key];\n            }\n          }\n        }\n\n        return target;\n      };\n\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      var _react = __webpack_require__(2);\n\n      var _react2 = _interopRequireDefault(_react);\n\n      var _propTypes = __webpack_require__(1);\n\n      var _propTypes2 = _interopRequireDefault(_propTypes);\n\n      var _link = __webpack_require__(6);\n\n      var _link2 = _interopRequireDefault(_link);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      function _objectWithoutProperties(obj, keys) {\n        var target = {};\n\n        for (var i in obj) {\n          if (keys.indexOf(i) >= 0) continue;\n          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n          target[i] = obj[i];\n        }\n\n        return target;\n      }\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n\n      function _possibleConstructorReturn(self, call) {\n        if (!self) {\n          throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n        }\n\n        return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n      }\n\n      function _inherits(subClass, superClass) {\n        if (typeof superClass !== \"function\" && superClass !== null) {\n          throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n        }\n\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\n          constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n          }\n        });\n        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n      }\n\n      var ForceGraphLink = function (_PureComponent) {\n        _inherits(ForceGraphLink, _PureComponent);\n\n        function ForceGraphLink() {\n          _classCallCheck(this, ForceGraphLink);\n\n          return _possibleConstructorReturn(this, (ForceGraphLink.__proto__ || Object.getPrototypeOf(ForceGraphLink)).apply(this, arguments));\n        }\n\n        _createClass(ForceGraphLink, [{\n          key: 'render',\n          value: function render() {\n            var _props = this.props,\n                link = _props.link,\n                strokeWidth = _props.strokeWidth,\n                className = _props.className,\n                edgeOffset = _props.edgeOffset,\n                spreadable = _objectWithoutProperties(_props, ['link', 'strokeWidth', 'className', 'edgeOffset']);\n\n            if (typeof edgeOffset === 'number') {\n              var x1 = spreadable.x1,\n                  x2 = spreadable.x2,\n                  y1 = spreadable.y1,\n                  y2 = spreadable.y2;\n              var xLen = x1 + x2;\n              var yLen = y1 + y2;\n              var length = Math.sqrt(Math.pow(xLen, 2) + Math.pow(yLen, 2));\n              var offsetFactor = edgeOffset / length;\n              var xOffset = offsetFactor * xLen;\n              var yOffset = offsetFactor * yLen;\n\n              if (x1 > x2) {\n                spreadable.x1 -= xOffset;\n                spreadable.x2 += xOffset;\n              } else if (x1 < x2) {\n                spreadable.x1 += xOffset;\n                spreadable.x2 -= xOffset;\n              }\n\n              if (y1 > y2) {\n                spreadable.y1 -= yOffset;\n                spreadable.y2 += yOffset;\n              } else if (y1 < y2) {\n                spreadable.y1 += yOffset;\n                spreadable.y2 -= yOffset;\n              }\n            }\n\n            return _react2.default.createElement('line', _extends({\n              className: 'rv-force__link ' + className,\n              strokeWidth: strokeWidth || Math.sqrt(link.value)\n            }, spreadable));\n          }\n        }], [{\n          key: 'propTypes',\n          get: function get() {\n            return {\n              link: _link2.default.isRequired,\n              edgeOffset: _propTypes2.default.number,\n              strokeWidth: _propTypes2.default.number,\n              className: _propTypes2.default.string\n            };\n          }\n        }, {\n          key: 'defaultProps',\n          get: function get() {\n            return {\n              className: '',\n              opacity: 0.6,\n              stroke: '#999',\n              edgeOffset: 0\n            };\n          }\n        }]);\n\n        return ForceGraphLink;\n      }(_react.PureComponent);\n\n      exports.default = ForceGraphLink;\n      /***/\n    },\n    /* 6 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _propTypes = __webpack_require__(1);\n\n      var _propTypes2 = _interopRequireDefault(_propTypes);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      exports.default = _propTypes2.default.shape({\n        source: _propTypes2.default.string.isRequired,\n        target: _propTypes2.default.string.isRequired,\n        value: _propTypes2.default.number\n      });\n      /***/\n    },\n    /* 7 */\n\n    /***/\n    function (module, exports) {\n      /* WEBPACK VAR INJECTION */\n      (function (global) {\n        var win;\n\n        if (typeof window !== \"undefined\") {\n          win = window;\n        } else if (typeof global !== \"undefined\") {\n          win = global;\n        } else if (typeof self !== \"undefined\") {\n          win = self;\n        } else {\n          win = {};\n        }\n\n        module.exports = win;\n        /* WEBPACK VAR INJECTION */\n      }).call(exports, function () {\n        return this;\n      }());\n      /***/\n    },\n    /* 8 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      var asap = __webpack_require__(10);\n\n      function noop() {} // States:\n      //\n      // 0 - pending\n      // 1 - fulfilled with _value\n      // 2 - rejected with _value\n      // 3 - adopted the state of another promise, _value\n      //\n      // once the state is no longer pending (0) it is immutable\n      // All `_` prefixed properties will be reduced to `_{random number}`\n      // at build time to obfuscate them and discourage their use.\n      // We don't use symbols or Object.defineProperty to fully hide them\n      // because the performance isn't good enough.\n      // to avoid using try/catch inside critical functions, we\n      // extract them to here.\n\n\n      var LAST_ERROR = null;\n      var IS_ERROR = {};\n\n      function getThen(obj) {\n        try {\n          return obj.then;\n        } catch (ex) {\n          LAST_ERROR = ex;\n          return IS_ERROR;\n        }\n      }\n\n      function tryCallOne(fn, a) {\n        try {\n          return fn(a);\n        } catch (ex) {\n          LAST_ERROR = ex;\n          return IS_ERROR;\n        }\n      }\n\n      function tryCallTwo(fn, a, b) {\n        try {\n          fn(a, b);\n        } catch (ex) {\n          LAST_ERROR = ex;\n          return IS_ERROR;\n        }\n      }\n\n      module.exports = Promise;\n\n      function Promise(fn) {\n        if (typeof this !== 'object') {\n          throw new TypeError('Promises must be constructed via new');\n        }\n\n        if (typeof fn !== 'function') {\n          throw new TypeError('not a function');\n        }\n\n        this._45 = 0;\n        this._81 = 0;\n        this._65 = null;\n        this._54 = null;\n        if (fn === noop) return;\n        doResolve(fn, this);\n      }\n\n      Promise._10 = null;\n      Promise._97 = null;\n      Promise._61 = noop;\n\n      Promise.prototype.then = function (onFulfilled, onRejected) {\n        if (this.constructor !== Promise) {\n          return safeThen(this, onFulfilled, onRejected);\n        }\n\n        var res = new Promise(noop);\n        handle(this, new Handler(onFulfilled, onRejected, res));\n        return res;\n      };\n\n      function safeThen(self, onFulfilled, onRejected) {\n        return new self.constructor(function (resolve, reject) {\n          var res = new Promise(noop);\n          res.then(resolve, reject);\n          handle(self, new Handler(onFulfilled, onRejected, res));\n        });\n      }\n\n      ;\n\n      function handle(self, deferred) {\n        while (self._81 === 3) {\n          self = self._65;\n        }\n\n        if (Promise._10) {\n          Promise._10(self);\n        }\n\n        if (self._81 === 0) {\n          if (self._45 === 0) {\n            self._45 = 1;\n            self._54 = deferred;\n            return;\n          }\n\n          if (self._45 === 1) {\n            self._45 = 2;\n            self._54 = [self._54, deferred];\n            return;\n          }\n\n          self._54.push(deferred);\n\n          return;\n        }\n\n        handleResolved(self, deferred);\n      }\n\n      function handleResolved(self, deferred) {\n        asap(function () {\n          var cb = self._81 === 1 ? deferred.onFulfilled : deferred.onRejected;\n\n          if (cb === null) {\n            if (self._81 === 1) {\n              resolve(deferred.promise, self._65);\n            } else {\n              reject(deferred.promise, self._65);\n            }\n\n            return;\n          }\n\n          var ret = tryCallOne(cb, self._65);\n\n          if (ret === IS_ERROR) {\n            reject(deferred.promise, LAST_ERROR);\n          } else {\n            resolve(deferred.promise, ret);\n          }\n        });\n      }\n\n      function resolve(self, newValue) {\n        // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n        if (newValue === self) {\n          return reject(self, new TypeError('A promise cannot be resolved with itself.'));\n        }\n\n        if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {\n          var then = getThen(newValue);\n\n          if (then === IS_ERROR) {\n            return reject(self, LAST_ERROR);\n          }\n\n          if (then === self.then && newValue instanceof Promise) {\n            self._81 = 3;\n            self._65 = newValue;\n            finale(self);\n            return;\n          } else if (typeof then === 'function') {\n            doResolve(then.bind(newValue), self);\n            return;\n          }\n        }\n\n        self._81 = 1;\n        self._65 = newValue;\n        finale(self);\n      }\n\n      function reject(self, newValue) {\n        self._81 = 2;\n        self._65 = newValue;\n\n        if (Promise._97) {\n          Promise._97(self, newValue);\n        }\n\n        finale(self);\n      }\n\n      function finale(self) {\n        if (self._45 === 1) {\n          handle(self, self._54);\n          self._54 = null;\n        }\n\n        if (self._45 === 2) {\n          for (var i = 0; i < self._54.length; i++) {\n            handle(self, self._54[i]);\n          }\n\n          self._54 = null;\n        }\n      }\n\n      function Handler(onFulfilled, onRejected, promise) {\n        this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n        this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n        this.promise = promise;\n      }\n      /**\n       * Take a potentially misbehaving resolver function and make sure\n       * onFulfilled and onRejected are only called once.\n       *\n       * Makes no guarantees about asynchrony.\n       */\n\n\n      function doResolve(fn, promise) {\n        var done = false;\n        var res = tryCallTwo(fn, function (value) {\n          if (done) return;\n          done = true;\n          resolve(promise, value);\n        }, function (reason) {\n          if (done) return;\n          done = true;\n          reject(promise, reason);\n        });\n\n        if (!done && res === IS_ERROR) {\n          done = true;\n          reject(promise, LAST_ERROR);\n        }\n      }\n      /***/\n\n    },\n    /* 9 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      /* istanbul ignore next */\n      (function () {\n        /* istanbul ignore if */\n        if (typeof Promise === 'undefined') {\n          // Rejection tracking prevents a common issue where React gets into an\n          // inconsistent state due to an error, but it gets swallowed by a Promise,\n          // and the user has no idea what causes React's erratic future behavior.\n          __webpack_require__(31).enable();\n\n          window.Promise = __webpack_require__(30);\n        } // fetch() polyfill for making API calls.\n\n\n        __webpack_require__(35); // Object.assign() is commonly used with React.\n        // It will use the native implementation if it's present and isn't buggy.\n\n\n        Object.assign = __webpack_require__(29);\n      })();\n      /***/\n\n    },\n    /* 10 */\n\n    /***/\n    function (module, exports) {\n      /* WEBPACK VAR INJECTION */\n      (function (global) {\n        \"use strict\"; // Use the fastest means possible to execute a task in its own turn, with\n        // priority over other events including IO, animation, reflow, and redraw\n        // events in browsers.\n        //\n        // An exception thrown by a task will permanently interrupt the processing of\n        // subsequent tasks. The higher level `asap` function ensures that if an\n        // exception is thrown by a task, that the task queue will continue flushing as\n        // soon as possible, but if you use `rawAsap` directly, you are responsible to\n        // either ensure that no exceptions are thrown from your task, or to manually\n        // call `rawAsap.requestFlush` if an exception is thrown.\n\n        module.exports = rawAsap;\n\n        function rawAsap(task) {\n          if (!queue.length) {\n            requestFlush();\n            flushing = true;\n          } // Equivalent to push, but avoids a function call.\n\n\n          queue[queue.length] = task;\n        }\n\n        var queue = []; // Once a flush has been requested, no further calls to `requestFlush` are\n        // necessary until the next `flush` completes.\n\n        var flushing = false; // `requestFlush` is an implementation-specific method that attempts to kick\n        // off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n        // the event queue before yielding to the browser's own event loop.\n\n        var requestFlush; // The position of the next task to execute in the task queue. This is\n        // preserved between calls to `flush` so that it can be resumed if\n        // a task throws an exception.\n\n        var index = 0; // If a task schedules additional tasks recursively, the task queue can grow\n        // unbounded. To prevent memory exhaustion, the task queue will periodically\n        // truncate already-completed tasks.\n\n        var capacity = 1024; // The flush function processes all tasks that have been scheduled with\n        // `rawAsap` unless and until one of those tasks throws an exception.\n        // If a task throws an exception, `flush` ensures that its state will remain\n        // consistent and will resume where it left off when called again.\n        // However, `flush` does not make any arrangements to be called again if an\n        // exception is thrown.\n\n        function flush() {\n          while (index < queue.length) {\n            var currentIndex = index; // Advance the index before calling the task. This ensures that we will\n            // begin flushing on the next task the task throws an error.\n\n            index = index + 1;\n            queue[currentIndex].call(); // Prevent leaking memory for long chains of recursive calls to `asap`.\n            // If we call `asap` within tasks scheduled by `asap`, the queue will\n            // grow, but to avoid an O(n) walk for every task we execute, we don't\n            // shift tasks off the queue after they have been executed.\n            // Instead, we periodically shift 1024 tasks off the queue.\n\n            if (index > capacity) {\n              // Manually shift all values starting at the index back to the\n              // beginning of the queue.\n              for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n              }\n\n              queue.length -= index;\n              index = 0;\n            }\n          }\n\n          queue.length = 0;\n          index = 0;\n          flushing = false;\n        } // `requestFlush` is implemented using a strategy based on data collected from\n        // every available SauceLabs Selenium web driver worker at time of writing.\n        // https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n        // Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n        // have WebKitMutationObserver but not un-prefixed MutationObserver.\n        // Must use `global` or `self` instead of `window` to work in both frames and web\n        // workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n        /* globals self */\n\n\n        var scope = typeof global !== \"undefined\" ? global : self;\n        var BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver; // MutationObservers are desirable because they have high priority and work\n        // reliably everywhere they are implemented.\n        // They are implemented in all modern browsers.\n        //\n        // - Android 4-4.3\n        // - Chrome 26-34\n        // - Firefox 14-29\n        // - Internet Explorer 11\n        // - iPad Safari 6-7.1\n        // - iPhone Safari 7-7.1\n        // - Safari 6-7\n\n        if (typeof BrowserMutationObserver === \"function\") {\n          requestFlush = makeRequestCallFromMutationObserver(flush); // MessageChannels are desirable because they give direct access to the HTML\n          // task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n          // 11-12, and in web workers in many engines.\n          // Although message channels yield to any queued rendering and IO tasks, they\n          // would be better than imposing the 4ms delay of timers.\n          // However, they do not work reliably in Internet Explorer or Safari.\n          // Internet Explorer 10 is the only browser that has setImmediate but does\n          // not have MutationObservers.\n          // Although setImmediate yields to the browser's renderer, it would be\n          // preferrable to falling back to setTimeout since it does not have\n          // the minimum 4ms penalty.\n          // Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n          // Desktop to a lesser extent) that renders both setImmediate and\n          // MessageChannel useless for the purposes of ASAP.\n          // https://github.com/kriskowal/q/issues/396\n          // Timers are implemented universally.\n          // We fall back to timers in workers in most engines, and in foreground\n          // contexts in the following browsers.\n          // However, note that even this simple case requires nuances to operate in a\n          // broad spectrum of browsers.\n          //\n          // - Firefox 3-13\n          // - Internet Explorer 6-9\n          // - iPad Safari 4.3\n          // - Lynx 2.8.7\n        } else {\n          requestFlush = makeRequestCallFromTimer(flush);\n        } // `requestFlush` requests that the high priority event queue be flushed as\n        // soon as possible.\n        // This is useful to prevent an error thrown in a task from stalling the event\n        // queue if the exception handled by Node.js’s\n        // `process.on(\"uncaughtException\")` or by a domain.\n\n\n        rawAsap.requestFlush = requestFlush; // To request a high priority event, we induce a mutation observer by toggling\n        // the text of a text node between \"1\" and \"-1\".\n\n        function makeRequestCallFromMutationObserver(callback) {\n          var toggle = 1;\n          var observer = new BrowserMutationObserver(callback);\n          var node = document.createTextNode(\"\");\n          observer.observe(node, {\n            characterData: true\n          });\n          return function requestCall() {\n            toggle = -toggle;\n            node.data = toggle;\n          };\n        } // The message channel technique was discovered by Malte Ubl and was the\n        // original foundation for this library.\n        // http://www.nonblocking.io/2011/06/windownexttick.html\n        // Safari 6.0.5 (at least) intermittently fails to create message ports on a\n        // page's first load. Thankfully, this version of Safari supports\n        // MutationObservers, so we don't need to fall back in that case.\n        // function makeRequestCallFromMessageChannel(callback) {\n        //     var channel = new MessageChannel();\n        //     channel.port1.onmessage = callback;\n        //     return function requestCall() {\n        //         channel.port2.postMessage(0);\n        //     };\n        // }\n        // For reasons explained above, we are also unable to use `setImmediate`\n        // under any circumstances.\n        // Even if we were, there is another bug in Internet Explorer 10.\n        // It is not sufficient to assign `setImmediate` to `requestFlush` because\n        // `setImmediate` must be called *by name* and therefore must be wrapped in a\n        // closure.\n        // Never forget.\n        // function makeRequestCallFromSetImmediate(callback) {\n        //     return function requestCall() {\n        //         setImmediate(callback);\n        //     };\n        // }\n        // Safari 6.0 has a problem where timers will get lost while the user is\n        // scrolling. This problem does not impact ASAP because Safari 6.0 supports\n        // mutation observers, so that implementation is used instead.\n        // However, if we ever elect to use timers in Safari, the prevalent work-around\n        // is to add a scroll event listener that calls for a flush.\n        // `setTimeout` does not call the passed callback if the delay is less than\n        // approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n        // even then.\n\n\n        function makeRequestCallFromTimer(callback) {\n          return function requestCall() {\n            // We dispatch a timeout with a specified delay of 0 for engines that\n            // can reliably accommodate that request. This will usually be snapped\n            // to a 4 milisecond delay, but once we're flushing, there's no delay\n            // between events.\n            var timeoutHandle = setTimeout(handleTimer, 0); // However, since this timer gets frequently dropped in Firefox\n            // workers, we enlist an interval handle that will try to fire\n            // an event 20 times per second until it succeeds.\n\n            var intervalHandle = setInterval(handleTimer, 50);\n\n            function handleTimer() {\n              // Whichever timer succeeds will cancel both timers and\n              // execute the callback.\n              clearTimeout(timeoutHandle);\n              clearInterval(intervalHandle);\n              callback();\n            }\n          };\n        } // This is for `asap.js` only.\n        // Its name will be periodically randomized to break any code that depends on\n        // its existence.\n\n\n        rawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer; // ASAP was originally a nextTick shim included in Q. This was factored out\n        // into this ASAP package. It was later adapted to RSVP which made further\n        // amendments. These decisions, particularly to marginalize MessageChannel and\n        // to capture the MutationObserver implementation in a closure, were integrated\n        // back into ASAP proper.\n        // https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n        /* WEBPACK VAR INJECTION */\n      }).call(exports, function () {\n        return this;\n      }());\n      /***/\n    },\n    /* 11 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _extends = Object.assign || function (target) {\n        for (var i = 1; i < arguments.length; i++) {\n          var source = arguments[i];\n\n          for (var key in source) {\n            if (Object.prototype.hasOwnProperty.call(source, key)) {\n              target[key] = source[key];\n            }\n          }\n        }\n\n        return target;\n      };\n\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      var _react = __webpack_require__(2);\n\n      var _react2 = _interopRequireDefault(_react);\n\n      var _propTypes = __webpack_require__(1);\n\n      var _propTypes2 = _interopRequireDefault(_propTypes);\n\n      var _link = __webpack_require__(6);\n\n      var _link2 = _interopRequireDefault(_link);\n\n      var _d3Force = __webpack_require__(3);\n\n      var _ForceGraphLink = __webpack_require__(5);\n\n      var _ForceGraphLink2 = _interopRequireDefault(_ForceGraphLink);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      function _objectWithoutProperties(obj, keys) {\n        var target = {};\n\n        for (var i in obj) {\n          if (keys.indexOf(i) >= 0) continue;\n          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n          target[i] = obj[i];\n        }\n\n        return target;\n      }\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n\n      function _possibleConstructorReturn(self, call) {\n        if (!self) {\n          throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n        }\n\n        return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n      }\n\n      function _inherits(subClass, superClass) {\n        if (typeof superClass !== \"function\" && superClass !== null) {\n          throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n        }\n\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\n          constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n          }\n        });\n        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n      }\n\n      var ForceGraphArrowLink = function (_PureComponent) {\n        _inherits(ForceGraphArrowLink, _PureComponent);\n\n        function ForceGraphArrowLink() {\n          _classCallCheck(this, ForceGraphArrowLink);\n\n          return _possibleConstructorReturn(this, (ForceGraphArrowLink.__proto__ || Object.getPrototypeOf(ForceGraphArrowLink)).apply(this, arguments));\n        }\n\n        _createClass(ForceGraphArrowLink, [{\n          key: 'render',\n          value: function render() {\n            var _props = this.props,\n                link = _props.link,\n                targetRadius = _props.targetRadius,\n                spreadable = _objectWithoutProperties(_props, ['link', 'targetRadius']);\n\n            var id = 'arrow-' + (0, _d3Force.linkId)(link);\n            return _react2.default.createElement('g', null, _react2.default.createElement('defs', null, _react2.default.createElement('marker', {\n              id: id,\n              markerWidth: targetRadius * 3 + 1,\n              markerHeight: targetRadius * 3 + 1,\n              refX: targetRadius * 3 + 1,\n              refY: targetRadius,\n              orient: 'auto',\n              markerUnits: 'strokeWidth'\n            }, targetRadius > 0 && _react2.default.createElement('path', {\n              d: 'M0,0 L0,' + targetRadius * 2 + ' L' + targetRadius * 3 + ',' + targetRadius + ' z',\n              fill: spreadable.stroke || spreadable.color\n            }))), _react2.default.createElement(_ForceGraphLink2.default, _extends({}, this.props, {\n              edgeOffset: targetRadius,\n              markerEnd: 'url(#' + id + ')'\n            })));\n          }\n        }], [{\n          key: 'propTypes',\n          get: function get() {\n            return {\n              link: _link2.default.isRequired,\n              targetRadius: _propTypes2.default.number\n            };\n          }\n        }, {\n          key: 'defaultProps',\n          get: function get() {\n            return {\n              className: '',\n              opacity: 0.6,\n              stroke: '#999',\n              targetRadius: 2,\n              strokeWidth: 1\n            };\n          }\n        }]);\n\n        return ForceGraphArrowLink;\n      }(_react.PureComponent);\n\n      exports.default = ForceGraphArrowLink;\n      /***/\n    },\n    /* 12 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _extends = Object.assign || function (target) {\n        for (var i = 1; i < arguments.length; i++) {\n          var source = arguments[i];\n\n          for (var key in source) {\n            if (Object.prototype.hasOwnProperty.call(source, key)) {\n              target[key] = source[key];\n            }\n          }\n        }\n\n        return target;\n      };\n\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      var _react = __webpack_require__(2);\n\n      var _react2 = _interopRequireDefault(_react);\n\n      var _propTypes = __webpack_require__(1);\n\n      var _propTypes2 = _interopRequireDefault(_propTypes);\n\n      var _node = __webpack_require__(16);\n\n      var _node2 = _interopRequireDefault(_node);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      function _objectWithoutProperties(obj, keys) {\n        var target = {};\n\n        for (var i in obj) {\n          if (keys.indexOf(i) >= 0) continue;\n          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n          target[i] = obj[i];\n        }\n\n        return target;\n      }\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n\n      function _possibleConstructorReturn(self, call) {\n        if (!self) {\n          throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n        }\n\n        return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n      }\n\n      function _inherits(subClass, superClass) {\n        if (typeof superClass !== \"function\" && superClass !== null) {\n          throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n        }\n\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\n          constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n          }\n        });\n        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n      }\n\n      var ForceGraphNode = function (_PureComponent) {\n        _inherits(ForceGraphNode, _PureComponent);\n\n        function ForceGraphNode() {\n          _classCallCheck(this, ForceGraphNode);\n\n          return _possibleConstructorReturn(this, (ForceGraphNode.__proto__ || Object.getPrototypeOf(ForceGraphNode)).apply(this, arguments));\n        }\n\n        _createClass(ForceGraphNode, [{\n          key: 'render',\n          value: function render() {\n            var _props = this.props,\n                node = _props.node,\n                className = _props.className,\n                r = _props.r,\n                labelStyle = _props.labelStyle,\n                labelClass = _props.labelClass,\n                showLabel = _props.showLabel,\n                spreadable = _objectWithoutProperties(_props, ['node', 'className', 'r', 'labelStyle', 'labelClass', 'showLabel']);\n\n            var _node$radius = node.radius,\n                radius = _node$radius === undefined ? 5 : _node$radius;\n            return _react2.default.createElement('circle', _extends({\n              className: 'rv-force__node ' + className,\n              r: r || radius\n            }, spreadable));\n          }\n        }], [{\n          key: 'propTypes',\n          get: function get() {\n            return {\n              node: _node2.default.isRequired,\n              cx: _propTypes2.default.number,\n              cy: _propTypes2.default.number,\n              r: _propTypes2.default.number,\n              className: _propTypes2.default.string,\n              // these props only have an impact on the parent.\n              labelStyle: _propTypes2.default.object,\n              labelClass: _propTypes2.default.string,\n              showLabel: _propTypes2.default.bool\n            };\n          }\n        }, {\n          key: 'defaultProps',\n          get: function get() {\n            return {\n              className: '',\n              fill: '#333',\n              opacity: 1,\n              stroke: '#FFF',\n              strokeWidth: 1.5\n            };\n          }\n        }]);\n\n        return ForceGraphNode;\n      }(_react.PureComponent);\n\n      exports.default = ForceGraphNode;\n      /***/\n    },\n    /* 13 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _extends = Object.assign || function (target) {\n        for (var i = 1; i < arguments.length; i++) {\n          var source = arguments[i];\n\n          for (var key in source) {\n            if (Object.prototype.hasOwnProperty.call(source, key)) {\n              target[key] = source[key];\n            }\n          }\n        }\n\n        return target;\n      };\n\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      var _react = __webpack_require__(2);\n\n      var _react2 = _interopRequireDefault(_react);\n\n      var _propTypes = __webpack_require__(1);\n\n      var _propTypes2 = _interopRequireDefault(_propTypes);\n\n      var _global = __webpack_require__(7);\n\n      var _ForceGraph = __webpack_require__(4);\n\n      var _ForceGraph2 = _interopRequireDefault(_ForceGraph);\n\n      var _d3Force = __webpack_require__(3);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      function _objectWithoutProperties(obj, keys) {\n        var target = {};\n\n        for (var i in obj) {\n          if (keys.indexOf(i) >= 0) continue;\n          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n          target[i] = obj[i];\n        }\n\n        return target;\n      }\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n\n      function _possibleConstructorReturn(self, call) {\n        if (!self) {\n          throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n        }\n\n        return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n      }\n\n      function _inherits(subClass, superClass) {\n        if (typeof superClass !== \"function\" && superClass !== null) {\n          throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n        }\n\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\n          constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n          }\n        });\n        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n      }\n\n      var isTouch = _global.window && 'ontouchstart' in _global.window;\n\n      var selectedNodeShape = _propTypes2.default.shape({\n        id: _propTypes2.default.string\n      });\n\n      var InteractiveForceGraph = function (_PureComponent) {\n        _inherits(InteractiveForceGraph, _PureComponent);\n\n        _createClass(InteractiveForceGraph, null, [{\n          key: 'propTypes',\n          get: function get() {\n            return Object.assign({\n              selectedNode: selectedNodeShape,\n              defaultSelectedNode: selectedNodeShape,\n              highlightDependencies: _propTypes2.default.bool,\n              opacityFactor: _propTypes2.default.number,\n              onSelectNode: _propTypes2.default.func,\n              onDeselectNode: _propTypes2.default.func\n            }, _ForceGraph2.default.propTypes);\n          }\n        }, {\n          key: 'defaultProps',\n          get: function get() {\n            return {\n              className: '',\n              defaultSelectedNode: null,\n              opacityFactor: 4,\n              onSelectNode: function onSelectNode() {},\n              onDeselectNode: function onDeselectNode() {}\n            };\n          }\n        }]);\n\n        function InteractiveForceGraph(props) {\n          _classCallCheck(this, InteractiveForceGraph);\n\n          var _this = _possibleConstructorReturn(this, (InteractiveForceGraph.__proto__ || Object.getPrototypeOf(InteractiveForceGraph)).call(this, props));\n\n          _this.state = {\n            hoveredNode: null,\n            selectedNode: props.selectedNode || props.defaultSelectedNode\n          };\n          return _this;\n        }\n\n        _createClass(InteractiveForceGraph, [{\n          key: 'componentWillReceiveProps',\n          value: function componentWillReceiveProps(nextProps) {\n            if (Object.prototype.hasOwnProperty.call(nextProps, 'selectedNode')) {\n              this.setState({\n                selectedNode: nextProps.selectedNode\n              });\n            }\n          }\n        }, {\n          key: 'onHoverNode',\n          value: function onHoverNode(event, hoveredNode) {\n            if (!isTouch) {\n              this.setState({\n                hoveredNode: hoveredNode\n              });\n            }\n          }\n        }, {\n          key: 'onBlurNode',\n          value: function onBlurNode() {\n            this.setState({\n              hoveredNode: null\n            });\n          }\n        }, {\n          key: 'onClickNode',\n          value: function onClickNode(event, selectedNode) {\n            var _props = this.props,\n                onDeselectNode = _props.onDeselectNode,\n                onSelectNode = _props.onSelectNode;\n            var previousNode = this.state.selectedNode; // if the user clicked the same node that was already\n            // selected, deselect it.\n\n            if (previousNode && (0, _d3Force.nodeId)(previousNode) === (0, _d3Force.nodeId)(selectedNode)) {\n              this.setState({\n                selectedNode: null\n              });\n              onDeselectNode(event, selectedNode);\n            } else {\n              this.setState({\n                selectedNode: selectedNode\n              });\n              onSelectNode(event, selectedNode);\n            }\n          }\n        }, {\n          key: 'render',\n          value: function render() {\n            var _this2 = this;\n\n            var _props2 = this.props,\n                highlightDependencies = _props2.highlightDependencies,\n                opacityFactor = _props2.opacityFactor,\n                children = _props2.children,\n                className = _props2.className,\n                propsSelectedNode = _props2.selectedNode,\n                spreadableProps = _objectWithoutProperties(_props2, ['highlightDependencies', 'opacityFactor', 'children', 'className', 'selectedNode']);\n\n            var _state = this.state,\n                hoveredNode = _state.hoveredNode,\n                stateSelectedNode = _state.selectedNode;\n\n            var _ForceGraph$getDataFr = _ForceGraph2.default.getDataFromChildren(children),\n                links = _ForceGraph$getDataFr.links;\n\n            var selectedNode = propsSelectedNode || stateSelectedNode;\n\n            var applyOpacity = function applyOpacity() {\n              var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n              return opacity / opacityFactor;\n            };\n\n            var createEventHandler = function createEventHandler(name, node, fn) {\n              return function (event) {\n                _this2[name](event, node);\n\n                if (fn) {\n                  fn(event);\n                }\n              };\n            };\n\n            var areNodesRelatives = function areNodesRelatives(node1, node2) {\n              return node1 && node2 && links.findIndex(function (link) {\n                return link.value > 0 && (link.source === (0, _d3Force.nodeId)(node1) && link.target === (0, _d3Force.nodeId)(node2) || link.source === (0, _d3Force.nodeId)(node2) && link.target === (0, _d3Force.nodeId)(node1));\n              }) > -1;\n            };\n\n            var isNodeHighlighted = function isNodeHighlighted(focusedNode, node) {\n              return focusedNode && ((0, _d3Force.nodeId)(focusedNode) === (0, _d3Force.nodeId)(node) || selectedNode && (0, _d3Force.nodeId)(selectedNode) === (0, _d3Force.nodeId)(node) || highlightDependencies && areNodesRelatives(node, selectedNode || focusedNode));\n            };\n\n            var isLinkHighlighted = function isLinkHighlighted(focusedNode, link) {\n              return focusedNode && highlightDependencies && link.value > 0 && ((0, _d3Force.nodeId)(focusedNode) === link.source || (0, _d3Force.nodeId)(focusedNode) === link.target);\n            };\n\n            var fontSizeForNode = function fontSizeForNode(node) {\n              return selectedNode && (0, _d3Force.nodeId)(node) === (0, _d3Force.nodeId)(selectedNode) ? 14 : 10;\n            };\n\n            var fontWeightForNode = function fontWeightForNode(node) {\n              return selectedNode && (0, _d3Force.nodeId)(node) === (0, _d3Force.nodeId)(selectedNode) ? 700 : null;\n            };\n\n            var showLabelForNode = function showLabelForNode(node) {\n              return isNodeHighlighted(selectedNode, node) || isNodeHighlighted(hoveredNode, node);\n            };\n\n            var opacityForNode = function opacityForNode(node) {\n              var origOpacity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n              if (highlightDependencies && selectedNode && !isNodeHighlighted(selectedNode, node) && !isNodeHighlighted(hoveredNode, node)) {\n                return applyOpacity(origOpacity / 4);\n              } else if (selectedNode && !isNodeHighlighted(selectedNode, node) && !isNodeHighlighted(hoveredNode, node) || hoveredNode && !isNodeHighlighted(hoveredNode, node)) {\n                return applyOpacity(origOpacity);\n              }\n\n              return origOpacity;\n            };\n\n            var opacityForLink = function opacityForLink(link) {\n              var origOpacity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n              if (highlightDependencies ? !selectedNode && hoveredNode && !isLinkHighlighted(hoveredNode, link) || selectedNode && !isLinkHighlighted(selectedNode, link) : hoveredNode || selectedNode) {\n                return applyOpacity(origOpacity / 4);\n              }\n\n              if (hoveredNode && !isLinkHighlighted(hoveredNode, link) && selectedNode && !isLinkHighlighted(selectedNode, link)) {\n                return applyOpacity(origOpacity);\n              }\n\n              return origOpacity;\n            };\n\n            return _react2.default.createElement(_ForceGraph2.default, _extends({\n              className: 'rv-force__interactive ' + className\n            }, spreadableProps), _react.Children.map(children, function (child) {\n              if ((0, _ForceGraph.isNode)(child)) {\n                var _child$props = child.props,\n                    node = _child$props.node,\n                    labelStyle = _child$props.labelStyle,\n                    _child$props$fontSize = _child$props.fontSize,\n                    fontSize = _child$props$fontSize === undefined ? fontSizeForNode(node) : _child$props$fontSize,\n                    _child$props$fontWeig = _child$props.fontWeight,\n                    fontWeight = _child$props$fontWeig === undefined ? fontWeightForNode(node) : _child$props$fontWeig,\n                    _child$props$showLabe = _child$props.showLabel,\n                    showLabel = _child$props$showLabe === undefined ? showLabelForNode(node) : _child$props$showLabe,\n                    onMouseEnter = _child$props.onMouseEnter,\n                    onMouseLeave = _child$props.onMouseLeave,\n                    onClick = _child$props.onClick;\n                var opacity = child.props.opacity;\n                opacity = opacityForNode(node, opacity);\n                return (0, _react.cloneElement)(child, {\n                  showLabel: showLabel,\n                  opacity: opacity,\n                  labelStyle: _extends({\n                    fontSize: fontSize,\n                    fontWeight: fontWeight,\n                    opacity: opacity\n                  }, labelStyle),\n                  onMouseEnter: createEventHandler('onHoverNode', node, onMouseEnter),\n                  onMouseLeave: createEventHandler('onBlurNode', node, onMouseLeave),\n                  onClick: createEventHandler('onClickNode', node, onClick)\n                });\n              } else if ((0, _ForceGraph.isLink)(child)) {\n                var link = child.props.link;\n                var _opacity = child.props.opacity;\n                _opacity = opacityForLink(link, _opacity);\n                return (0, _react.cloneElement)(child, {\n                  opacity: _opacity\n                });\n              }\n\n              return child;\n            }));\n          }\n        }]);\n\n        return InteractiveForceGraph;\n      }(_react.PureComponent);\n\n      exports.default = InteractiveForceGraph;\n      /***/\n    },\n    /* 14 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.ZOOMABLE_SVG_GROUP_EVENT_NAMES = undefined;\n\n      var _extends = Object.assign || function (target) {\n        for (var i = 1; i < arguments.length; i++) {\n          var source = arguments[i];\n\n          for (var key in source) {\n            if (Object.prototype.hasOwnProperty.call(source, key)) {\n              target[key] = source[key];\n            }\n          }\n        }\n\n        return target;\n      };\n\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      var _react = __webpack_require__(2);\n\n      var _react2 = _interopRequireDefault(_react);\n\n      var _propTypes = __webpack_require__(1);\n\n      var _propTypes2 = _interopRequireDefault(_propTypes);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      function _objectWithoutProperties(obj, keys) {\n        var target = {};\n\n        for (var i in obj) {\n          if (keys.indexOf(i) >= 0) continue;\n          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n          target[i] = obj[i];\n        }\n\n        return target;\n      }\n\n      function _defineProperty(obj, key, value) {\n        if (key in obj) {\n          Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n          });\n        } else {\n          obj[key] = value;\n        }\n\n        return obj;\n      }\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n\n      function _possibleConstructorReturn(self, call) {\n        if (!self) {\n          throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n        }\n\n        return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n      }\n\n      function _inherits(subClass, superClass) {\n        if (typeof superClass !== \"function\" && superClass !== null) {\n          throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n        }\n\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\n          constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n          }\n        });\n        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n      }\n\n      var ZOOMABLE_SVG_GROUP_EVENT_NAMES = exports.ZOOMABLE_SVG_GROUP_EVENT_NAMES = ['onMouseDown', 'onMouseMove', 'onMouseUp', 'onTouchCancel', 'onTouchEnd', 'onTouchMove', 'onTouchStart', 'onWheel'];\n      /**\n       * This component draws upon the patterns in https://github.com/anvaka/panzoom\n       * and applies them to a simple React component that can wrap SVG children.\n       */\n\n      var ZoomableSVGGroup = function (_PureComponent) {\n        _inherits(ZoomableSVGGroup, _PureComponent);\n\n        _createClass(ZoomableSVGGroup, null, [{\n          key: 'isValidMatrix',\n\n          /**\n           * given a matrix, return a boolean to indicate if it's valid for\n           * use as a transform.\n           * @param {array} matrix\n           * @return {boolean} is a valid matrix\n           */\n          value: function isValidMatrix(matrix) {\n            return matrix.length === 6 && matrix.findIndex(function (item) {\n              return typeof item !== 'number';\n            }) === -1;\n          } // based on the method of the same name from panzoom\n          // https://github.com/anvaka/panzoom/blob/master/index.js/#L201-L204\n\n          /* eslint-disable no-mixed-operators */\n\n        }, {\n          key: 'getPinchZoomLength',\n          value: function getPinchZoomLength(finger1, finger2) {\n            return (finger1.clientX - finger2.clientX) * (finger1.clientX - finger2.clientX) + (finger1.clientY - finger2.clientY) * (finger1.clientY - finger2.clientY);\n          }\n          /* eslint-enable no-mixed-operators */\n\n        }, {\n          key: 'getTouchClientValues',\n          value: function getTouchClientValues(event) {\n            if (event.touches.length >= 2) {\n              return {\n                clientX: (event.touches[0].clientX + event.touches[1].clientX) / 2,\n                clientY: (event.touches[0].clientY + event.touches[1].clientY) / 2\n              };\n            }\n\n            return event.touches[0];\n          }\n        }, {\n          key: 'propTypes',\n          get: function get() {\n            return _extends({\n              width: _propTypes2.default.number.isRequired,\n              height: _propTypes2.default.number.isRequired,\n              disabled: _propTypes2.default.bool,\n              zoomSpeed: _propTypes2.default.number,\n              minScale: _propTypes2.default.number,\n              maxScale: _propTypes2.default.number,\n              panLimit: _propTypes2.default.number,\n              onZoom: _propTypes2.default.func,\n              onPan: _propTypes2.default.func\n            }, ZOOMABLE_SVG_GROUP_EVENT_NAMES.reduce(function (obj, eventName) {\n              return _extends({}, obj, _defineProperty({}, eventName, _propTypes2.default.func));\n            }, {}));\n          }\n        }, {\n          key: 'defaultProps',\n          get: function get() {\n            return _extends({\n              disabled: false,\n              // scale up or down at 6.5% of the previous size\n              zoomSpeed: 0.065,\n              // only pan to 75% of the width or height\n              panLimit: 0.75,\n              // no limit to scale\n              minScale: 0,\n              maxScale: Infinity,\n              onZoom: function onZoom() {},\n              onPan: function onPan() {}\n            }, ZOOMABLE_SVG_GROUP_EVENT_NAMES.reduce(function (obj, eventName) {\n              return _extends({}, obj, _defineProperty({}, eventName, function () {}));\n            }, {}));\n          }\n        }]);\n\n        function ZoomableSVGGroup(props) {\n          _classCallCheck(this, ZoomableSVGGroup);\n\n          var _this = _possibleConstructorReturn(this, (ZoomableSVGGroup.__proto__ || Object.getPrototypeOf(ZoomableSVGGroup)).call(this, props));\n\n          _this.state = {\n            matrix: [1, 0, 0, 1, 0, 0],\n            scale: 1\n          };\n          return _this;\n        }\n\n        _createClass(ZoomableSVGGroup, [{\n          key: 'componentDidMount',\n          value: function componentDidMount() {\n            this.setInitialMatrix();\n          }\n        }, {\n          key: 'onMouseDown',\n          value: function onMouseDown(event) {\n            if (this.state.touching) {\n              event.stopPropagation();\n              return null;\n            } // ignore non-left buttons.\n\n\n            if (event.button !== 0) {\n              return null;\n            }\n\n            return this.setState({\n              dragging: true,\n              dragX: event.clientX,\n              dragY: event.clientY\n            });\n          }\n        }, {\n          key: 'onMouseMove',\n          value: function onMouseMove(event) {\n            if (this.state.touching) {\n              event.stopPropagation();\n              return null;\n            }\n\n            if (!this.state.dragging) {\n              return event;\n            }\n\n            return this.panBy(event.clientX, event.clientY);\n          }\n        }, {\n          key: 'onMouseUp',\n          value: function onMouseUp(event) {\n            if (this.state.touching) {\n              event.stopPropagation();\n              return null;\n            }\n\n            return this.setState({\n              dragging: false,\n              dragX: null,\n              dragY: null\n            });\n          }\n        }, {\n          key: 'onTouchCancel',\n          value: function onTouchCancel() {\n            this.setState({\n              touching: false,\n              dragging: false,\n              pinchLength: null,\n              dragX: null,\n              dragY: null\n            });\n          }\n        }, {\n          key: 'onTouchEnd',\n          value: function onTouchEnd() {\n            this.onTouchCancel();\n          }\n        }, {\n          key: 'onTouchMove',\n          value: function onTouchMove(event) {\n            event.preventDefault();\n\n            if (event.touches.length >= 2) {\n              var finger1 = event.touches[0];\n              var finger2 = event.touches[1];\n              var pinchLength = ZoomableSVGGroup.getPinchZoomLength(finger1, finger2);\n              var prevPinchLength = this.state.pinchLength;\n              var delta = 0;\n\n              if (pinchLength < prevPinchLength) {\n                delta = 1;\n              } else if (pinchLength > prevPinchLength) {\n                delta = -1;\n              } // use the midpoint between the fingers as the zoom origin\n\n\n              var _ZoomableSVGGroup$get = ZoomableSVGGroup.getTouchClientValues(event),\n                  clientX = _ZoomableSVGGroup$get.clientX,\n                  clientY = _ZoomableSVGGroup$get.clientY;\n\n              var scaleMultiplier = this.getScaleMultiplier(delta);\n              this.zoomTo(clientX, clientY, scaleMultiplier, event);\n              this.setState({\n                pinchLength: pinchLength\n              });\n            } else {\n              this.panBy(event.touches[0].clientX, event.touches[0].clientY);\n            }\n          }\n        }, {\n          key: 'onTouchStart',\n          value: function onTouchStart(event) {\n            var _ZoomableSVGGroup$get2 = ZoomableSVGGroup.getTouchClientValues(event),\n                dragX = _ZoomableSVGGroup$get2.clientX,\n                dragY = _ZoomableSVGGroup$get2.clientY;\n\n            this.setState({\n              touching: true,\n              pinchLength: 0,\n              dragX: dragX,\n              dragY: dragY\n            });\n          }\n        }, {\n          key: 'onWheel',\n          value: function onWheel(event) {\n            var clientX = event.clientX,\n                clientY = event.clientY,\n                deltaY = event.deltaY;\n            var scaleMultiplier = this.getScaleMultiplier(deltaY);\n\n            if (scaleMultiplier !== 1) {\n              event.preventDefault();\n              this.zoomTo(clientX, clientY, scaleMultiplier, event);\n            }\n          }\n        }, {\n          key: 'setInitialMatrix',\n          value: function setInitialMatrix() {\n            var parentSvg = this.el.ownerSVGElement;\n            var transform = parentSvg.createSVGTransform();\n            this.setState({\n              scale: 1,\n              matrix: [transform.matrix.a, transform.matrix.b, transform.matrix.c, transform.matrix.d, transform.matrix.e, transform.matrix.f]\n            });\n          } // based on the method of the same name from panzoom\n          // https://github.com/anvaka/panzoom/blob/master/index.js\n\n        }, {\n          key: 'getScaleMultiplier',\n          value: function getScaleMultiplier(delta) {\n            var zoomSpeed = this.props.zoomSpeed;\n\n            if (delta > 0) {\n              return 1 - zoomSpeed;\n            } else if (delta < 0) {\n              return 1 + zoomSpeed;\n            }\n\n            return 1;\n          } // based on the zoomTo method from the panzoom project\n          // https://github.com/anvaka/panzoom/blob/master/lib/zoomTo.js\n\n        }, {\n          key: 'zoomTo',\n          value: function zoomTo(clientX, clientY, scaleMultiplier, event) {\n            var _this2 = this;\n\n            var prevMatrix = this.state.matrix;\n            var prevScale = this.state.scale;\n            var scale = prevScale * scaleMultiplier;\n            var clientMatrix = this.el.ownerSVGElement.getScreenCTM();\n            var x = clientX * clientMatrix.a - clientMatrix.e;\n            var y = clientY * clientMatrix.d - clientMatrix.f; // guardrails for scale max and min\n\n            if (scale > this.props.maxScale || scale < this.props.minScale) {\n              return;\n            }\n\n            this.setState({\n              scale: scale,\n              matrix: [scale, prevMatrix[1], prevMatrix[2], scale, x - scaleMultiplier * (x - prevMatrix[4]), y - scaleMultiplier * (y - prevMatrix[5])]\n            }, function () {\n              return _this2.props.onZoom(event, scale);\n            });\n          }\n        }, {\n          key: 'panBy',\n          value: function panBy(clientX, clientY, event) {\n            var _this3 = this;\n\n            var _props = this.props,\n                width = _props.width,\n                height = _props.height,\n                panLimit = _props.panLimit;\n            var _state = this.state,\n                prevMatrix = _state.matrix,\n                prevDragX = _state.dragX,\n                prevDragY = _state.dragY,\n                scale = _state.scale;\n            var dx = clientX - prevDragX;\n            var dy = clientY - prevDragY;\n            var newX = prevMatrix[4] + dx;\n            var newY = prevMatrix[5] + dy; // check that we aren't passing the panLimit\n            // TODO this feels a little janky in practice\n            // This doesn't work well for data that exceeds the canvas size. The limit\n            // here assumes the data fits in side of the canvas at scale >= 1. Ideally,\n            // the pan limit would hault at (width|height / 2) + border node position.\n            // It is probably better to have unlimited panning than to prematurely block\n            // panning and hide data.\n\n            if (Math.abs(newX / scale) > width * panLimit || Math.abs(newY / scale) > height * panLimit) {\n              return;\n            }\n\n            this.setState({\n              dragX: clientX,\n              dragY: clientY,\n              matrix: [prevMatrix[0], prevMatrix[1], prevMatrix[2], prevMatrix[3], newX, newY]\n            }, function () {\n              return _this3.props.onPan(event, newX, newY);\n            });\n          }\n        }, {\n          key: 'render',\n          value: function render() {\n            var _this4 = this;\n\n            var _props2 = this.props,\n                width = _props2.width,\n                height = _props2.height,\n                children = _props2.children,\n                disabled = _props2.disabled,\n                _props2$style = _props2.style,\n                style = _props2$style === undefined ? {} : _props2$style,\n                _props2$transform = _props2.transform,\n                transform = _props2$transform === undefined ? '' : _props2$transform,\n                canvasHeight = _props2.canvasHeight,\n                canvasWidth = _props2.canvasWidth,\n                minScale = _props2.minScale,\n                maxScale = _props2.maxScale,\n                panLimit = _props2.panLimit,\n                onZoom = _props2.onZoom,\n                onPan = _props2.onPan,\n                zoomSpeed = _props2.zoomSpeed,\n                passthrough = _objectWithoutProperties(_props2, ['width', 'height', 'children', 'disabled', 'style', 'transform', 'canvasHeight', 'canvasWidth', 'minScale', 'maxScale', 'panLimit', 'onZoom', 'onPan', 'zoomSpeed']);\n\n            var _state2 = this.state,\n                matrix = _state2.matrix,\n                scale = _state2.scale;\n\n            var eventHandler = function eventHandler(eventName) {\n              return function () {\n                var _props3;\n\n                _this4[eventName].apply(_this4, arguments);\n\n                (_props3 = _this4.props)[eventName].apply(_props3, arguments);\n              };\n            };\n\n            var zoomProps = {\n              transform: transform\n            };\n\n            if (!disabled && ZoomableSVGGroup.isValidMatrix(matrix)) {\n              Object.assign(zoomProps, _extends({}, ZOOMABLE_SVG_GROUP_EVENT_NAMES.reduce(function (obj, eventName) {\n                return _extends({}, obj, _defineProperty({}, eventName, eventHandler(eventName)));\n              }, {}), {\n                style: Object.assign({}, style, {\n                  transformOrigin: '0 0 0',\n                  cursor: 'default',\n                  pointerEvents: 'all'\n                }),\n                transform: 'matrix(' + matrix.join(' ') + ') ' + transform\n              }));\n            }\n\n            return _react2.default.createElement('g', _extends({\n              ref:\n              /* istanbul ignore next */\n              function ref(c) {\n                _this4.el = c;\n              }\n            }, passthrough, zoomProps), _react2.default.createElement('rect', {\n              x: -1 * matrix[4],\n              y: -1 * matrix[5],\n              transform: 'scale(' + 1 / scale + ')',\n              fillOpacity: 0,\n              height: height,\n              width: width\n            }), children);\n          }\n        }]);\n\n        return ZoomableSVGGroup;\n      }(_react.PureComponent);\n\n      exports.default = ZoomableSVGGroup;\n      /***/\n    },\n    /* 15 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _d3Force = __webpack_require__(3);\n\n      Object.defineProperty(exports, 'createSimulation', {\n        enumerable: true,\n        get: function get() {\n          return _d3Force.createSimulation;\n        }\n      });\n      Object.defineProperty(exports, 'updateSimulation', {\n        enumerable: true,\n        get: function get() {\n          return _d3Force.updateSimulation;\n        }\n      });\n\n      var _ForceGraph = __webpack_require__(4);\n\n      Object.defineProperty(exports, 'ForceGraph', {\n        enumerable: true,\n        get: function get() {\n          return _interopRequireDefault(_ForceGraph).default;\n        }\n      });\n\n      var _ForceGraphLink = __webpack_require__(5);\n\n      Object.defineProperty(exports, 'ForceGraphLink', {\n        enumerable: true,\n        get: function get() {\n          return _interopRequireDefault(_ForceGraphLink).default;\n        }\n      });\n\n      var _ForceGraphArrowLink = __webpack_require__(11);\n\n      Object.defineProperty(exports, 'ForceGraphArrowLink', {\n        enumerable: true,\n        get: function get() {\n          return _interopRequireDefault(_ForceGraphArrowLink).default;\n        }\n      });\n\n      var _ForceGraphNode = __webpack_require__(12);\n\n      Object.defineProperty(exports, 'ForceGraphNode', {\n        enumerable: true,\n        get: function get() {\n          return _interopRequireDefault(_ForceGraphNode).default;\n        }\n      });\n\n      var _InteractiveForceGraph = __webpack_require__(13);\n\n      Object.defineProperty(exports, 'InteractiveForceGraph', {\n        enumerable: true,\n        get: function get() {\n          return _interopRequireDefault(_InteractiveForceGraph).default;\n        }\n      });\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n      /***/\n\n    },\n    /* 16 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _propTypes = __webpack_require__(1);\n\n      var _propTypes2 = _interopRequireDefault(_propTypes);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      exports.default = _propTypes2.default.shape({\n        id: _propTypes2.default.string.isRequired,\n        radius: _propTypes2.default.number\n      });\n      /***/\n    },\n    /* 17 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.DEFAULT_SIMULATION_PROPS = undefined;\n\n      var _propTypes = __webpack_require__(1);\n\n      var _propTypes2 = _interopRequireDefault(_propTypes);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      var DEFAULT_SIMULATION_PROPS = exports.DEFAULT_SIMULATION_PROPS = {\n        animate: false,\n        width: 900,\n        height: 600,\n        strength: {}\n      }; // Copyright (c) 2017 Uber Technologies, Inc.\n      //\n      // Permission is hereby granted, free of charge, to any person obtaining a copy\n      // of this software and associated documentation files (the \"Software\"), to deal\n      // in the Software without restriction, including without limitation the rights\n      // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n      // copies of the Software, and to permit persons to whom the Software is\n      // furnished to do so, subject to the following conditions:\n      //\n      // The above copyright notice and this permission notice shall be included in\n      // all copies or substantial portions of the Software.\n      //\n      // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n      // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n      // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n      // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n      // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n      // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n      // THE SOFTWARE.\n\n      exports.default = _propTypes2.default.shape({\n        data: _propTypes2.default.object,\n        animate: _propTypes2.default.bool,\n        alpha: _propTypes2.default.number,\n        alphaDecay: _propTypes2.default.number,\n        alphaMin: _propTypes2.default.number,\n        alphaTarget: _propTypes2.default.number,\n        velocityDecay: _propTypes2.default.number,\n        radiusMargin: _propTypes2.default.number,\n        linkAttrs: _propTypes2.default.array,\n        nodeAttrs: _propTypes2.default.array,\n        // strengths\n        strength: _propTypes2.default.objectOf(_propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.number]))\n      });\n      /***/\n    },\n    /* 18 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.cancelAnimationFrame = exports.requestAnimationFrame = undefined;\n\n      var _global = __webpack_require__(7);\n\n      var requestAnimationFrame = exports.requestAnimationFrame = function requestAnimationFrame(fn) {\n        for (var _len = arguments.length, rest = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          rest[_key - 1] = arguments[_key];\n        }\n\n        if (_global.window && {}.hasOwnProperty.call(_global.window, 'cancelAnimationFrame')) {\n          _global.window.requestAnimationFrame.apply(_global.window, [fn].concat(rest));\n        } else {\n          fn.apply(undefined, rest);\n        }\n      };\n\n      var cancelAnimationFrame = exports.cancelAnimationFrame = function cancelAnimationFrame() {\n        if (_global.window && {}.hasOwnProperty.call(_global.window, 'cancelAnimationFrame')) {\n          _global.window.cancelAnimationFrame.apply(_global.window, arguments);\n        }\n      };\n      /***/\n\n    },\n    /* 19 */\n\n    /***/\n    function (module, exports) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.default = setsEqual; // Copyright (c) 2017 Uber Technologies, Inc.\n      //\n      // Permission is hereby granted, free of charge, to any person obtaining a copy\n      // of this software and associated documentation files (the \"Software\"), to deal\n      // in the Software without restriction, including without limitation the rights\n      // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n      // copies of the Software, and to permit persons to whom the Software is\n      // furnished to do so, subject to the following conditions:\n      //\n      // The above copyright notice and this permission notice shall be included in\n      // all copies or substantial portions of the Software.\n      //\n      // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n      // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n      // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n      // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n      // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n      // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n      // THE SOFTWARE.\n\n      /**\n       * check ES2015 Sets for equality.\n       * http://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality\n       * @param {Set} setA\n       * @param {Set} setB\n       * @returns {boolean} are the sets equal\n       */\n\n      function setsEqual(setA, setB) {\n        if (setA.size !== setB.size) {\n          return false;\n        }\n\n        var acc = true;\n        setA.forEach(function (a) {\n          acc = acc && setB.has(a);\n        });\n        return acc;\n      }\n      /***/\n\n    },\n    /* 20 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      // https://d3js.org/d3-collection/ Version 1.0.3. Copyright 2017 Mike Bostock.\n      (function (global, factory) {\n        true ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : factory(global.d3 = global.d3 || {});\n      })(this, function (exports) {\n        'use strict';\n\n        var prefix = \"$\";\n\n        function Map() {}\n\n        Map.prototype = map.prototype = {\n          constructor: Map,\n          has: function has(key) {\n            return prefix + key in this;\n          },\n          get: function get(key) {\n            return this[prefix + key];\n          },\n          set: function set(key, value) {\n            this[prefix + key] = value;\n            return this;\n          },\n          remove: function remove(key) {\n            var property = prefix + key;\n            return property in this && delete this[property];\n          },\n          clear: function clear() {\n            for (var property in this) {\n              if (property[0] === prefix) delete this[property];\n            }\n          },\n          keys: function keys() {\n            var keys = [];\n\n            for (var property in this) {\n              if (property[0] === prefix) keys.push(property.slice(1));\n            }\n\n            return keys;\n          },\n          values: function values() {\n            var values = [];\n\n            for (var property in this) {\n              if (property[0] === prefix) values.push(this[property]);\n            }\n\n            return values;\n          },\n          entries: function entries() {\n            var entries = [];\n\n            for (var property in this) {\n              if (property[0] === prefix) entries.push({\n                key: property.slice(1),\n                value: this[property]\n              });\n            }\n\n            return entries;\n          },\n          size: function size() {\n            var size = 0;\n\n            for (var property in this) {\n              if (property[0] === prefix) ++size;\n            }\n\n            return size;\n          },\n          empty: function empty() {\n            for (var property in this) {\n              if (property[0] === prefix) return false;\n            }\n\n            return true;\n          },\n          each: function each(f) {\n            for (var property in this) {\n              if (property[0] === prefix) f(this[property], property.slice(1), this);\n            }\n          }\n        };\n\n        function map(object, f) {\n          var map = new Map(); // Copy constructor.\n\n          if (object instanceof Map) object.each(function (value, key) {\n            map.set(key, value);\n          }); // Index array by numeric index or specified key function.\n          else if (Array.isArray(object)) {\n              var i = -1,\n                  n = object.length,\n                  o;\n              if (f == null) while (++i < n) {\n                map.set(i, object[i]);\n              } else while (++i < n) {\n                map.set(f(o = object[i], i, object), o);\n              }\n            } // Convert object to map.\n            else if (object) for (var key in object) {\n                map.set(key, object[key]);\n              }\n          return map;\n        }\n\n        var nest = function nest() {\n          var keys = [],\n              _sortKeys = [],\n              _sortValues,\n              _rollup,\n              nest;\n\n          function apply(array, depth, createResult, setResult) {\n            if (depth >= keys.length) return _rollup != null ? _rollup(array) : _sortValues != null ? array.sort(_sortValues) : array;\n            var i = -1,\n                n = array.length,\n                key = keys[depth++],\n                keyValue,\n                value,\n                valuesByKey = map(),\n                values,\n                result = createResult();\n\n            while (++i < n) {\n              if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n                values.push(value);\n              } else {\n                valuesByKey.set(keyValue, [value]);\n              }\n            }\n\n            valuesByKey.each(function (values, key) {\n              setResult(result, key, apply(values, depth, createResult, setResult));\n            });\n            return result;\n          }\n\n          function _entries(map$$1, depth) {\n            if (++depth > keys.length) return map$$1;\n            var array,\n                sortKey = _sortKeys[depth - 1];\n            if (_rollup != null && depth >= keys.length) array = map$$1.entries();else array = [], map$$1.each(function (v, k) {\n              array.push({\n                key: k,\n                values: _entries(v, depth)\n              });\n            });\n            return sortKey != null ? array.sort(function (a, b) {\n              return sortKey(a.key, b.key);\n            }) : array;\n          }\n\n          return nest = {\n            object: function object(array) {\n              return apply(array, 0, createObject, setObject);\n            },\n            map: function map(array) {\n              return apply(array, 0, createMap, setMap);\n            },\n            entries: function entries(array) {\n              return _entries(apply(array, 0, createMap, setMap), 0);\n            },\n            key: function key(d) {\n              keys.push(d);\n              return nest;\n            },\n            sortKeys: function sortKeys(order) {\n              _sortKeys[keys.length - 1] = order;\n              return nest;\n            },\n            sortValues: function sortValues(order) {\n              _sortValues = order;\n              return nest;\n            },\n            rollup: function rollup(f) {\n              _rollup = f;\n              return nest;\n            }\n          };\n        };\n\n        function createObject() {\n          return {};\n        }\n\n        function setObject(object, key, value) {\n          object[key] = value;\n        }\n\n        function createMap() {\n          return map();\n        }\n\n        function setMap(map$$1, key, value) {\n          map$$1.set(key, value);\n        }\n\n        function Set() {}\n\n        var proto = map.prototype;\n        Set.prototype = set.prototype = {\n          constructor: Set,\n          has: proto.has,\n          add: function add(value) {\n            value += \"\";\n            this[prefix + value] = value;\n            return this;\n          },\n          remove: proto.remove,\n          clear: proto.clear,\n          values: proto.keys,\n          size: proto.size,\n          empty: proto.empty,\n          each: proto.each\n        };\n\n        function set(object, f) {\n          var set = new Set(); // Copy constructor.\n\n          if (object instanceof Set) object.each(function (value) {\n            set.add(value);\n          }); // Otherwise, assume it’s an array.\n          else if (object) {\n              var i = -1,\n                  n = object.length;\n              if (f == null) while (++i < n) {\n                set.add(object[i]);\n              } else while (++i < n) {\n                set.add(f(object[i], i, object));\n              }\n            }\n          return set;\n        }\n\n        var keys = function keys(map) {\n          var keys = [];\n\n          for (var key in map) {\n            keys.push(key);\n          }\n\n          return keys;\n        };\n\n        var values = function values(map) {\n          var values = [];\n\n          for (var key in map) {\n            values.push(map[key]);\n          }\n\n          return values;\n        };\n\n        var entries = function entries(map) {\n          var entries = [];\n\n          for (var key in map) {\n            entries.push({\n              key: key,\n              value: map[key]\n            });\n          }\n\n          return entries;\n        };\n\n        exports.nest = nest;\n        exports.set = set;\n        exports.map = map;\n        exports.keys = keys;\n        exports.values = values;\n        exports.entries = entries;\n        Object.defineProperty(exports, '__esModule', {\n          value: true\n        });\n      });\n      /***/\n\n    },\n    /* 21 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      // https://d3js.org/d3-dispatch/ Version 1.0.3. Copyright 2017 Mike Bostock.\n      (function (global, factory) {\n        true ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : factory(global.d3 = global.d3 || {});\n      })(this, function (exports) {\n        'use strict';\n\n        var noop = {\n          value: function value() {}\n        };\n\n        function dispatch() {\n          for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n            if (!(t = arguments[i] + \"\") || t in _) throw new Error(\"illegal type: \" + t);\n            _[t] = [];\n          }\n\n          return new Dispatch(_);\n        }\n\n        function Dispatch(_) {\n          this._ = _;\n        }\n\n        function parseTypenames(typenames, types) {\n          return typenames.trim().split(/^|\\s+/).map(function (t) {\n            var name = \"\",\n                i = t.indexOf(\".\");\n            if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n            if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n            return {\n              type: t,\n              name: name\n            };\n          });\n        }\n\n        Dispatch.prototype = dispatch.prototype = {\n          constructor: Dispatch,\n          on: function on(typename, callback) {\n            var _ = this._,\n                T = parseTypenames(typename + \"\", _),\n                t,\n                i = -1,\n                n = T.length; // If no callback was specified, return the callback of the given type and name.\n\n            if (arguments.length < 2) {\n              while (++i < n) {\n                if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n              }\n\n              return;\n            } // If a type was specified, set the callback for the given type and name.\n            // Otherwise, if a null callback was specified, remove callbacks of the given name.\n\n\n            if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\n            while (++i < n) {\n              if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);else if (callback == null) for (t in _) {\n                _[t] = set(_[t], typename.name, null);\n              }\n            }\n\n            return this;\n          },\n          copy: function copy() {\n            var copy = {},\n                _ = this._;\n\n            for (var t in _) {\n              copy[t] = _[t].slice();\n            }\n\n            return new Dispatch(copy);\n          },\n          call: function call(type, that) {\n            if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) {\n              args[i] = arguments[i + 2];\n            }\n            if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\n            for (t = this._[type], i = 0, n = t.length; i < n; ++i) {\n              t[i].value.apply(that, args);\n            }\n          },\n          apply: function apply(type, that, args) {\n            if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\n            for (var t = this._[type], i = 0, n = t.length; i < n; ++i) {\n              t[i].value.apply(that, args);\n            }\n          }\n        };\n\n        function get(type, name) {\n          for (var i = 0, n = type.length, c; i < n; ++i) {\n            if ((c = type[i]).name === name) {\n              return c.value;\n            }\n          }\n        }\n\n        function set(type, name, callback) {\n          for (var i = 0, n = type.length; i < n; ++i) {\n            if (type[i].name === name) {\n              type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n              break;\n            }\n          }\n\n          if (callback != null) type.push({\n            name: name,\n            value: callback\n          });\n          return type;\n        }\n\n        exports.dispatch = dispatch;\n        Object.defineProperty(exports, '__esModule', {\n          value: true\n        });\n      });\n      /***/\n\n    },\n    /* 22 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      // https://d3js.org/d3-force/ Version 1.0.6. Copyright 2017 Mike Bostock.\n      (function (global, factory) {\n        true ? factory(exports, __webpack_require__(23), __webpack_require__(20), __webpack_require__(21), __webpack_require__(24)) : typeof define === 'function' && define.amd ? define(['exports', 'd3-quadtree', 'd3-collection', 'd3-dispatch', 'd3-timer'], factory) : factory(global.d3 = global.d3 || {}, global.d3, global.d3, global.d3, global.d3);\n      })(this, function (exports, d3Quadtree, d3Collection, d3Dispatch, d3Timer) {\n        'use strict';\n\n        var center = function center(x, y) {\n          var nodes;\n          if (x == null) x = 0;\n          if (y == null) y = 0;\n\n          function force() {\n            var i,\n                n = nodes.length,\n                node,\n                sx = 0,\n                sy = 0;\n\n            for (i = 0; i < n; ++i) {\n              node = nodes[i], sx += node.x, sy += node.y;\n            }\n\n            for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n              node = nodes[i], node.x -= sx, node.y -= sy;\n            }\n          }\n\n          force.initialize = function (_) {\n            nodes = _;\n          };\n\n          force.x = function (_) {\n            return arguments.length ? (x = +_, force) : x;\n          };\n\n          force.y = function (_) {\n            return arguments.length ? (y = +_, force) : y;\n          };\n\n          return force;\n        };\n\n        var constant = function constant(x) {\n          return function () {\n            return x;\n          };\n        };\n\n        var jiggle = function jiggle() {\n          return (Math.random() - 0.5) * 1e-6;\n        };\n\n        function x(d) {\n          return d.x + d.vx;\n        }\n\n        function y(d) {\n          return d.y + d.vy;\n        }\n\n        var collide = function collide(radius) {\n          var nodes,\n              radii,\n              strength = 1,\n              iterations = 1;\n          if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n          function force() {\n            var i,\n                n = nodes.length,\n                tree,\n                node,\n                xi,\n                yi,\n                ri,\n                ri2;\n\n            for (var k = 0; k < iterations; ++k) {\n              tree = d3Quadtree.quadtree(nodes, x, y).visitAfter(prepare);\n\n              for (i = 0; i < n; ++i) {\n                node = nodes[i];\n                ri = radii[node.index], ri2 = ri * ri;\n                xi = node.x + node.vx;\n                yi = node.y + node.vy;\n                tree.visit(apply);\n              }\n            }\n\n            function apply(quad, x0, y0, x1, y1) {\n              var data = quad.data,\n                  rj = quad.r,\n                  r = ri + rj;\n\n              if (data) {\n                if (data.index > node.index) {\n                  var x = xi - data.x - data.vx,\n                      y = yi - data.y - data.vy,\n                      l = x * x + y * y;\n\n                  if (l < r * r) {\n                    if (x === 0) x = jiggle(), l += x * x;\n                    if (y === 0) y = jiggle(), l += y * y;\n                    l = (r - (l = Math.sqrt(l))) / l * strength;\n                    node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n                    node.vy += (y *= l) * r;\n                    data.vx -= x * (r = 1 - r);\n                    data.vy -= y * r;\n                  }\n                }\n\n                return;\n              }\n\n              return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n            }\n          }\n\n          function prepare(quad) {\n            if (quad.data) return quad.r = radii[quad.data.index];\n\n            for (var i = quad.r = 0; i < 4; ++i) {\n              if (quad[i] && quad[i].r > quad.r) {\n                quad.r = quad[i].r;\n              }\n            }\n          }\n\n          function initialize() {\n            if (!nodes) return;\n            var i,\n                n = nodes.length,\n                node;\n            radii = new Array(n);\n\n            for (i = 0; i < n; ++i) {\n              node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n            }\n          }\n\n          force.initialize = function (_) {\n            nodes = _;\n            initialize();\n          };\n\n          force.iterations = function (_) {\n            return arguments.length ? (iterations = +_, force) : iterations;\n          };\n\n          force.strength = function (_) {\n            return arguments.length ? (strength = +_, force) : strength;\n          };\n\n          force.radius = function (_) {\n            return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n          };\n\n          return force;\n        };\n\n        function index(d) {\n          return d.index;\n        }\n\n        function find(nodeById, nodeId) {\n          var node = nodeById.get(nodeId);\n          if (!node) throw new Error(\"missing: \" + nodeId);\n          return node;\n        }\n\n        var link = function link(links) {\n          var id = index,\n              strength = defaultStrength,\n              strengths,\n              distance = constant(30),\n              distances,\n              nodes,\n              count,\n              bias,\n              iterations = 1;\n          if (links == null) links = [];\n\n          function defaultStrength(link) {\n            return 1 / Math.min(count[link.source.index], count[link.target.index]);\n          }\n\n          function force(alpha) {\n            for (var k = 0, n = links.length; k < iterations; ++k) {\n              for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n                link = links[i], source = link.source, target = link.target;\n                x = target.x + target.vx - source.x - source.vx || jiggle();\n                y = target.y + target.vy - source.y - source.vy || jiggle();\n                l = Math.sqrt(x * x + y * y);\n                l = (l - distances[i]) / l * alpha * strengths[i];\n                x *= l, y *= l;\n                target.vx -= x * (b = bias[i]);\n                target.vy -= y * b;\n                source.vx += x * (b = 1 - b);\n                source.vy += y * b;\n              }\n            }\n          }\n\n          function initialize() {\n            if (!nodes) return;\n            var i,\n                n = nodes.length,\n                m = links.length,\n                nodeById = d3Collection.map(nodes, id),\n                link;\n\n            for (i = 0, count = new Array(n); i < m; ++i) {\n              link = links[i], link.index = i;\n              if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n              if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n              count[link.source.index] = (count[link.source.index] || 0) + 1;\n              count[link.target.index] = (count[link.target.index] || 0) + 1;\n            }\n\n            for (i = 0, bias = new Array(m); i < m; ++i) {\n              link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n            }\n\n            strengths = new Array(m), initializeStrength();\n            distances = new Array(m), initializeDistance();\n          }\n\n          function initializeStrength() {\n            if (!nodes) return;\n\n            for (var i = 0, n = links.length; i < n; ++i) {\n              strengths[i] = +strength(links[i], i, links);\n            }\n          }\n\n          function initializeDistance() {\n            if (!nodes) return;\n\n            for (var i = 0, n = links.length; i < n; ++i) {\n              distances[i] = +distance(links[i], i, links);\n            }\n          }\n\n          force.initialize = function (_) {\n            nodes = _;\n            initialize();\n          };\n\n          force.links = function (_) {\n            return arguments.length ? (links = _, initialize(), force) : links;\n          };\n\n          force.id = function (_) {\n            return arguments.length ? (id = _, force) : id;\n          };\n\n          force.iterations = function (_) {\n            return arguments.length ? (iterations = +_, force) : iterations;\n          };\n\n          force.strength = function (_) {\n            return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n          };\n\n          force.distance = function (_) {\n            return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n          };\n\n          return force;\n        };\n\n        function x$1(d) {\n          return d.x;\n        }\n\n        function y$1(d) {\n          return d.y;\n        }\n\n        var initialRadius = 10;\n        var initialAngle = Math.PI * (3 - Math.sqrt(5));\n\n        var simulation = function simulation(_nodes) {\n          var simulation,\n              _alpha = 1,\n              _alphaMin = 0.001,\n              _alphaDecay = 1 - Math.pow(_alphaMin, 1 / 300),\n              _alphaTarget = 0,\n              _velocityDecay = 0.6,\n              forces = d3Collection.map(),\n              stepper = d3Timer.timer(step),\n              event = d3Dispatch.dispatch(\"tick\", \"end\");\n\n          if (_nodes == null) _nodes = [];\n\n          function step() {\n            tick();\n            event.call(\"tick\", simulation);\n\n            if (_alpha < _alphaMin) {\n              stepper.stop();\n              event.call(\"end\", simulation);\n            }\n          }\n\n          function tick() {\n            var i,\n                n = _nodes.length,\n                node;\n            _alpha += (_alphaTarget - _alpha) * _alphaDecay;\n            forces.each(function (force) {\n              force(_alpha);\n            });\n\n            for (i = 0; i < n; ++i) {\n              node = _nodes[i];\n              if (node.fx == null) node.x += node.vx *= _velocityDecay;else node.x = node.fx, node.vx = 0;\n              if (node.fy == null) node.y += node.vy *= _velocityDecay;else node.y = node.fy, node.vy = 0;\n            }\n          }\n\n          function initializeNodes() {\n            for (var i = 0, n = _nodes.length, node; i < n; ++i) {\n              node = _nodes[i], node.index = i;\n\n              if (isNaN(node.x) || isNaN(node.y)) {\n                var radius = initialRadius * Math.sqrt(i),\n                    angle = i * initialAngle;\n                node.x = radius * Math.cos(angle);\n                node.y = radius * Math.sin(angle);\n              }\n\n              if (isNaN(node.vx) || isNaN(node.vy)) {\n                node.vx = node.vy = 0;\n              }\n            }\n          }\n\n          function initializeForce(force) {\n            if (force.initialize) force.initialize(_nodes);\n            return force;\n          }\n\n          initializeNodes();\n          return simulation = {\n            tick: tick,\n            restart: function restart() {\n              return stepper.restart(step), simulation;\n            },\n            stop: function stop() {\n              return stepper.stop(), simulation;\n            },\n            nodes: function nodes(_) {\n              return arguments.length ? (_nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : _nodes;\n            },\n            alpha: function alpha(_) {\n              return arguments.length ? (_alpha = +_, simulation) : _alpha;\n            },\n            alphaMin: function alphaMin(_) {\n              return arguments.length ? (_alphaMin = +_, simulation) : _alphaMin;\n            },\n            alphaDecay: function alphaDecay(_) {\n              return arguments.length ? (_alphaDecay = +_, simulation) : +_alphaDecay;\n            },\n            alphaTarget: function alphaTarget(_) {\n              return arguments.length ? (_alphaTarget = +_, simulation) : _alphaTarget;\n            },\n            velocityDecay: function velocityDecay(_) {\n              return arguments.length ? (_velocityDecay = 1 - _, simulation) : 1 - _velocityDecay;\n            },\n            force: function force(name, _) {\n              return arguments.length > 1 ? (_ == null ? forces.remove(name) : forces.set(name, initializeForce(_)), simulation) : forces.get(name);\n            },\n            find: function find(x, y, radius) {\n              var i = 0,\n                  n = _nodes.length,\n                  dx,\n                  dy,\n                  d2,\n                  node,\n                  closest;\n              if (radius == null) radius = Infinity;else radius *= radius;\n\n              for (i = 0; i < n; ++i) {\n                node = _nodes[i];\n                dx = x - node.x;\n                dy = y - node.y;\n                d2 = dx * dx + dy * dy;\n                if (d2 < radius) closest = node, radius = d2;\n              }\n\n              return closest;\n            },\n            on: function on(name, _) {\n              return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n            }\n          };\n        };\n\n        var manyBody = function manyBody() {\n          var nodes,\n              node,\n              alpha,\n              strength = constant(-30),\n              strengths,\n              distanceMin2 = 1,\n              distanceMax2 = Infinity,\n              theta2 = 0.81;\n\n          function force(_) {\n            var i,\n                n = nodes.length,\n                tree = d3Quadtree.quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n\n            for (alpha = _, i = 0; i < n; ++i) {\n              node = nodes[i], tree.visit(apply);\n            }\n          }\n\n          function initialize() {\n            if (!nodes) return;\n            var i,\n                n = nodes.length,\n                node;\n            strengths = new Array(n);\n\n            for (i = 0; i < n; ++i) {\n              node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n            }\n          }\n\n          function accumulate(quad) {\n            var strength = 0,\n                q,\n                c,\n                x$$1,\n                y$$1,\n                i; // For internal nodes, accumulate forces from child quadrants.\n\n            if (quad.length) {\n              for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n                if ((q = quad[i]) && (c = q.value)) {\n                  strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n                }\n              }\n\n              quad.x = x$$1 / strength;\n              quad.y = y$$1 / strength;\n            } // For leaf nodes, accumulate forces from coincident quadrants.\n            else {\n                q = quad;\n                q.x = q.data.x;\n                q.y = q.data.y;\n\n                do {\n                  strength += strengths[q.data.index];\n                } while (q = q.next);\n              }\n\n            quad.value = strength;\n          }\n\n          function apply(quad, x1, _, x2) {\n            if (!quad.value) return true;\n            var x$$1 = quad.x - node.x,\n                y$$1 = quad.y - node.y,\n                w = x2 - x1,\n                l = x$$1 * x$$1 + y$$1 * y$$1; // Apply the Barnes-Hut approximation if possible.\n            // Limit forces for very close nodes; randomize direction if coincident.\n\n            if (w * w / theta2 < l) {\n              if (l < distanceMax2) {\n                if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n                if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n                if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n                node.vx += x$$1 * quad.value * alpha / l;\n                node.vy += y$$1 * quad.value * alpha / l;\n              }\n\n              return true;\n            } // Otherwise, process points directly.\n            else if (quad.length || l >= distanceMax2) return; // Limit forces for very close nodes; randomize direction if coincident.\n\n\n            if (quad.data !== node || quad.next) {\n              if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n              if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n              if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n            }\n\n            do {\n              if (quad.data !== node) {\n                w = strengths[quad.data.index] * alpha / l;\n                node.vx += x$$1 * w;\n                node.vy += y$$1 * w;\n              }\n            } while (quad = quad.next);\n          }\n\n          force.initialize = function (_) {\n            nodes = _;\n            initialize();\n          };\n\n          force.strength = function (_) {\n            return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n          };\n\n          force.distanceMin = function (_) {\n            return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n          };\n\n          force.distanceMax = function (_) {\n            return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n          };\n\n          force.theta = function (_) {\n            return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n          };\n\n          return force;\n        };\n\n        var x$2 = function x$2(x) {\n          var strength = constant(0.1),\n              nodes,\n              strengths,\n              xz;\n          if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n          function force(alpha) {\n            for (var i = 0, n = nodes.length, node; i < n; ++i) {\n              node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n            }\n          }\n\n          function initialize() {\n            if (!nodes) return;\n            var i,\n                n = nodes.length;\n            strengths = new Array(n);\n            xz = new Array(n);\n\n            for (i = 0; i < n; ++i) {\n              strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n            }\n          }\n\n          force.initialize = function (_) {\n            nodes = _;\n            initialize();\n          };\n\n          force.strength = function (_) {\n            return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n          };\n\n          force.x = function (_) {\n            return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n          };\n\n          return force;\n        };\n\n        var y$2 = function y$2(y) {\n          var strength = constant(0.1),\n              nodes,\n              strengths,\n              yz;\n          if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n          function force(alpha) {\n            for (var i = 0, n = nodes.length, node; i < n; ++i) {\n              node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n            }\n          }\n\n          function initialize() {\n            if (!nodes) return;\n            var i,\n                n = nodes.length;\n            strengths = new Array(n);\n            yz = new Array(n);\n\n            for (i = 0; i < n; ++i) {\n              strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n            }\n          }\n\n          force.initialize = function (_) {\n            nodes = _;\n            initialize();\n          };\n\n          force.strength = function (_) {\n            return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n          };\n\n          force.y = function (_) {\n            return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n          };\n\n          return force;\n        };\n\n        exports.forceCenter = center;\n        exports.forceCollide = collide;\n        exports.forceLink = link;\n        exports.forceManyBody = manyBody;\n        exports.forceSimulation = simulation;\n        exports.forceX = x$2;\n        exports.forceY = y$2;\n        Object.defineProperty(exports, '__esModule', {\n          value: true\n        });\n      });\n      /***/\n\n    },\n    /* 23 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      // https://d3js.org/d3-quadtree/ Version 1.0.3. Copyright 2017 Mike Bostock.\n      (function (global, factory) {\n        true ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : factory(global.d3 = global.d3 || {});\n      })(this, function (exports) {\n        'use strict';\n\n        var tree_add = function tree_add(d) {\n          var x = +this._x.call(null, d),\n              y = +this._y.call(null, d);\n          return add(this.cover(x, y), x, y, d);\n        };\n\n        function add(tree, x, y, d) {\n          if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n          var parent,\n              node = tree._root,\n              leaf = {\n            data: d\n          },\n              x0 = tree._x0,\n              y0 = tree._y0,\n              x1 = tree._x1,\n              y1 = tree._y1,\n              xm,\n              ym,\n              xp,\n              yp,\n              right,\n              bottom,\n              i,\n              j; // If the tree is empty, initialize the root as a leaf.\n\n          if (!node) return tree._root = leaf, tree; // Find the existing leaf for the new point, or add it.\n\n          while (node.length) {\n            if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;\n            if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;\n            if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n          } // Is the new point is exactly coincident with the existing point?\n\n\n          xp = +tree._x.call(null, node.data);\n          yp = +tree._y.call(null, node.data);\n          if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree; // Otherwise, split the leaf node until the old and new point are separated.\n\n          do {\n            parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n            if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;\n            if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;\n          } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | xp >= xm));\n\n          return parent[j] = node, parent[i] = leaf, tree;\n        }\n\n        function addAll(data) {\n          var d,\n              i,\n              n = data.length,\n              x,\n              y,\n              xz = new Array(n),\n              yz = new Array(n),\n              x0 = Infinity,\n              y0 = Infinity,\n              x1 = -Infinity,\n              y1 = -Infinity; // Compute the points and their extent.\n\n          for (i = 0; i < n; ++i) {\n            if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n            xz[i] = x;\n            yz[i] = y;\n            if (x < x0) x0 = x;\n            if (x > x1) x1 = x;\n            if (y < y0) y0 = y;\n            if (y > y1) y1 = y;\n          } // If there were no (valid) points, inherit the existing extent.\n\n\n          if (x1 < x0) x0 = this._x0, x1 = this._x1;\n          if (y1 < y0) y0 = this._y0, y1 = this._y1; // Expand the tree to cover the new points.\n\n          this.cover(x0, y0).cover(x1, y1); // Add the new points.\n\n          for (i = 0; i < n; ++i) {\n            add(this, xz[i], yz[i], data[i]);\n          }\n\n          return this;\n        }\n\n        var tree_cover = function tree_cover(x, y) {\n          if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n          var x0 = this._x0,\n              y0 = this._y0,\n              x1 = this._x1,\n              y1 = this._y1; // If the quadtree has no extent, initialize them.\n          // Integer extent are necessary so that if we later double the extent,\n          // the existing quadrant boundaries don’t change due to floating point error!\n\n          if (isNaN(x0)) {\n            x1 = (x0 = Math.floor(x)) + 1;\n            y1 = (y0 = Math.floor(y)) + 1;\n          } // Otherwise, double repeatedly to cover.\n          else if (x0 > x || x > x1 || y0 > y || y > y1) {\n              var z = x1 - x0,\n                  node = this._root,\n                  parent,\n                  i;\n\n              switch (i = (y < (y0 + y1) / 2) << 1 | x < (x0 + x1) / 2) {\n                case 0:\n                  {\n                    do {\n                      parent = new Array(4), parent[i] = node, node = parent;\n                    } while ((z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1));\n\n                    break;\n                  }\n\n                case 1:\n                  {\n                    do {\n                      parent = new Array(4), parent[i] = node, node = parent;\n                    } while ((z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1));\n\n                    break;\n                  }\n\n                case 2:\n                  {\n                    do {\n                      parent = new Array(4), parent[i] = node, node = parent;\n                    } while ((z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y));\n\n                    break;\n                  }\n\n                case 3:\n                  {\n                    do {\n                      parent = new Array(4), parent[i] = node, node = parent;\n                    } while ((z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y));\n\n                    break;\n                  }\n              }\n\n              if (this._root && this._root.length) this._root = node;\n            } // If the quadtree covers the point already, just return.\n            else return this;\n\n          this._x0 = x0;\n          this._y0 = y0;\n          this._x1 = x1;\n          this._y1 = y1;\n          return this;\n        };\n\n        var tree_data = function tree_data() {\n          var data = [];\n          this.visit(function (node) {\n            if (!node.length) do {\n              data.push(node.data);\n            } while (node = node.next);\n          });\n          return data;\n        };\n\n        var tree_extent = function tree_extent(_) {\n          return arguments.length ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1]) : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n        };\n\n        var Quad = function Quad(node, x0, y0, x1, y1) {\n          this.node = node;\n          this.x0 = x0;\n          this.y0 = y0;\n          this.x1 = x1;\n          this.y1 = y1;\n        };\n\n        var tree_find = function tree_find(x, y, radius) {\n          var data,\n              x0 = this._x0,\n              y0 = this._y0,\n              x1,\n              y1,\n              x2,\n              y2,\n              x3 = this._x1,\n              y3 = this._y1,\n              quads = [],\n              node = this._root,\n              q,\n              i;\n          if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n          if (radius == null) radius = Infinity;else {\n            x0 = x - radius, y0 = y - radius;\n            x3 = x + radius, y3 = y + radius;\n            radius *= radius;\n          }\n\n          while (q = quads.pop()) {\n            // Stop searching if this quadrant can’t contain a closer node.\n            if (!(node = q.node) || (x1 = q.x0) > x3 || (y1 = q.y0) > y3 || (x2 = q.x1) < x0 || (y2 = q.y1) < y0) continue; // Bisect the current quadrant.\n\n            if (node.length) {\n              var xm = (x1 + x2) / 2,\n                  ym = (y1 + y2) / 2;\n              quads.push(new Quad(node[3], xm, ym, x2, y2), new Quad(node[2], x1, ym, xm, y2), new Quad(node[1], xm, y1, x2, ym), new Quad(node[0], x1, y1, xm, ym)); // Visit the closest quadrant first.\n\n              if (i = (y >= ym) << 1 | x >= xm) {\n                q = quads[quads.length - 1];\n                quads[quads.length - 1] = quads[quads.length - 1 - i];\n                quads[quads.length - 1 - i] = q;\n              }\n            } // Visit this point. (Visiting coincident points isn’t necessary!)\n            else {\n                var dx = x - +this._x.call(null, node.data),\n                    dy = y - +this._y.call(null, node.data),\n                    d2 = dx * dx + dy * dy;\n\n                if (d2 < radius) {\n                  var d = Math.sqrt(radius = d2);\n                  x0 = x - d, y0 = y - d;\n                  x3 = x + d, y3 = y + d;\n                  data = node.data;\n                }\n              }\n          }\n\n          return data;\n        };\n\n        var tree_remove = function tree_remove(d) {\n          if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n          var parent,\n              node = this._root,\n              retainer,\n              previous,\n              next,\n              x0 = this._x0,\n              y0 = this._y0,\n              x1 = this._x1,\n              y1 = this._y1,\n              x,\n              y,\n              xm,\n              ym,\n              right,\n              bottom,\n              i,\n              j; // If the tree is empty, initialize the root as a leaf.\n\n          if (!node) return this; // Find the leaf node for the point.\n          // While descending, also retain the deepest parent with a non-removed sibling.\n\n          if (node.length) while (true) {\n            if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;\n            if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;\n            if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n            if (!node.length) break;\n            if (parent[i + 1 & 3] || parent[i + 2 & 3] || parent[i + 3 & 3]) retainer = parent, j = i;\n          } // Find the point to remove.\n\n          while (node.data !== d) {\n            if (!(previous = node, node = node.next)) return this;\n          }\n\n          if (next = node.next) delete node.next; // If there are multiple coincident points, remove just the point.\n\n          if (previous) return next ? previous.next = next : delete previous.next, this; // If this is the root point, remove it.\n\n          if (!parent) return this._root = next, this; // Remove this leaf.\n\n          next ? parent[i] = next : delete parent[i]; // If the parent now contains exactly one leaf, collapse superfluous parents.\n\n          if ((node = parent[0] || parent[1] || parent[2] || parent[3]) && node === (parent[3] || parent[2] || parent[1] || parent[0]) && !node.length) {\n            if (retainer) retainer[j] = node;else this._root = node;\n          }\n\n          return this;\n        };\n\n        function removeAll(data) {\n          for (var i = 0, n = data.length; i < n; ++i) {\n            this.remove(data[i]);\n          }\n\n          return this;\n        }\n\n        var tree_root = function tree_root() {\n          return this._root;\n        };\n\n        var tree_size = function tree_size() {\n          var size = 0;\n          this.visit(function (node) {\n            if (!node.length) do {\n              ++size;\n            } while (node = node.next);\n          });\n          return size;\n        };\n\n        var tree_visit = function tree_visit(callback) {\n          var quads = [],\n              q,\n              node = this._root,\n              child,\n              x0,\n              y0,\n              x1,\n              y1;\n          if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n\n          while (q = quads.pop()) {\n            if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n              var xm = (x0 + x1) / 2,\n                  ym = (y0 + y1) / 2;\n              if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n              if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n              if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n              if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n            }\n          }\n\n          return this;\n        };\n\n        var tree_visitAfter = function tree_visitAfter(callback) {\n          var quads = [],\n              next = [],\n              q;\n          if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n\n          while (q = quads.pop()) {\n            var node = q.node;\n\n            if (node.length) {\n              var child,\n                  x0 = q.x0,\n                  y0 = q.y0,\n                  x1 = q.x1,\n                  y1 = q.y1,\n                  xm = (x0 + x1) / 2,\n                  ym = (y0 + y1) / 2;\n              if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n              if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n              if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n              if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n            }\n\n            next.push(q);\n          }\n\n          while (q = next.pop()) {\n            callback(q.node, q.x0, q.y0, q.x1, q.y1);\n          }\n\n          return this;\n        };\n\n        function defaultX(d) {\n          return d[0];\n        }\n\n        var tree_x = function tree_x(_) {\n          return arguments.length ? (this._x = _, this) : this._x;\n        };\n\n        function defaultY(d) {\n          return d[1];\n        }\n\n        var tree_y = function tree_y(_) {\n          return arguments.length ? (this._y = _, this) : this._y;\n        };\n\n        function quadtree(nodes, x, y) {\n          var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n          return nodes == null ? tree : tree.addAll(nodes);\n        }\n\n        function Quadtree(x, y, x0, y0, x1, y1) {\n          this._x = x;\n          this._y = y;\n          this._x0 = x0;\n          this._y0 = y0;\n          this._x1 = x1;\n          this._y1 = y1;\n          this._root = undefined;\n        }\n\n        function leaf_copy(leaf) {\n          var copy = {\n            data: leaf.data\n          },\n              next = copy;\n\n          while (leaf = leaf.next) {\n            next = next.next = {\n              data: leaf.data\n            };\n          }\n\n          return copy;\n        }\n\n        var treeProto = quadtree.prototype = Quadtree.prototype;\n\n        treeProto.copy = function () {\n          var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n              node = this._root,\n              nodes,\n              child;\n          if (!node) return copy;\n          if (!node.length) return copy._root = leaf_copy(node), copy;\n          nodes = [{\n            source: node,\n            target: copy._root = new Array(4)\n          }];\n\n          while (node = nodes.pop()) {\n            for (var i = 0; i < 4; ++i) {\n              if (child = node.source[i]) {\n                if (child.length) nodes.push({\n                  source: child,\n                  target: node.target[i] = new Array(4)\n                });else node.target[i] = leaf_copy(child);\n              }\n            }\n          }\n\n          return copy;\n        };\n\n        treeProto.add = tree_add;\n        treeProto.addAll = addAll;\n        treeProto.cover = tree_cover;\n        treeProto.data = tree_data;\n        treeProto.extent = tree_extent;\n        treeProto.find = tree_find;\n        treeProto.remove = tree_remove;\n        treeProto.removeAll = removeAll;\n        treeProto.root = tree_root;\n        treeProto.size = tree_size;\n        treeProto.visit = tree_visit;\n        treeProto.visitAfter = tree_visitAfter;\n        treeProto.x = tree_x;\n        treeProto.y = tree_y;\n        exports.quadtree = quadtree;\n        Object.defineProperty(exports, '__esModule', {\n          value: true\n        });\n      });\n      /***/\n\n    },\n    /* 24 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      // https://d3js.org/d3-timer/ Version 1.0.5. Copyright 2017 Mike Bostock.\n      (function (global, factory) {\n        true ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : factory(global.d3 = global.d3 || {});\n      })(this, function (exports) {\n        'use strict';\n\n        var frame = 0;\n        var timeout = 0;\n        var interval = 0;\n        var pokeDelay = 1000;\n        var taskHead;\n        var taskTail;\n        var clockLast = 0;\n        var clockNow = 0;\n        var clockSkew = 0;\n        var clock = typeof performance === \"object\" && performance.now ? performance : Date;\n        var setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function (f) {\n          setTimeout(f, 17);\n        };\n\n        function now() {\n          return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n        }\n\n        function clearNow() {\n          clockNow = 0;\n        }\n\n        function Timer() {\n          this._call = this._time = this._next = null;\n        }\n\n        Timer.prototype = timer.prototype = {\n          constructor: Timer,\n          restart: function restart(callback, delay, time) {\n            if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n            time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n\n            if (!this._next && taskTail !== this) {\n              if (taskTail) taskTail._next = this;else taskHead = this;\n              taskTail = this;\n            }\n\n            this._call = callback;\n            this._time = time;\n            sleep();\n          },\n          stop: function stop() {\n            if (this._call) {\n              this._call = null;\n              this._time = Infinity;\n              sleep();\n            }\n          }\n        };\n\n        function timer(callback, delay, time) {\n          var t = new Timer();\n          t.restart(callback, delay, time);\n          return t;\n        }\n\n        function timerFlush() {\n          now(); // Get the current time, if not already set.\n\n          ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n\n          var t = taskHead,\n              e;\n\n          while (t) {\n            if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n            t = t._next;\n          }\n\n          --frame;\n        }\n\n        function wake() {\n          clockNow = (clockLast = clock.now()) + clockSkew;\n          frame = timeout = 0;\n\n          try {\n            timerFlush();\n          } finally {\n            frame = 0;\n            nap();\n            clockNow = 0;\n          }\n        }\n\n        function poke() {\n          var now = clock.now(),\n              delay = now - clockLast;\n          if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n        }\n\n        function nap() {\n          var t0,\n              t1 = taskHead,\n              t2,\n              time = Infinity;\n\n          while (t1) {\n            if (t1._call) {\n              if (time > t1._time) time = t1._time;\n              t0 = t1, t1 = t1._next;\n            } else {\n              t2 = t1._next, t1._next = null;\n              t1 = t0 ? t0._next = t2 : taskHead = t2;\n            }\n          }\n\n          taskTail = t0;\n          sleep(time);\n        }\n\n        function sleep(time) {\n          if (frame) return; // Soonest alarm already set, or will be.\n\n          if (timeout) timeout = clearTimeout(timeout);\n          var delay = time - clockNow;\n\n          if (delay > 24) {\n            if (time < Infinity) timeout = setTimeout(wake, delay);\n            if (interval) interval = clearInterval(interval);\n          } else {\n            if (!interval) clockLast = clockNow, interval = setInterval(poke, pokeDelay);\n            frame = 1, setFrame(wake);\n          }\n        }\n\n        var timeout$1 = function timeout$1(callback, delay, time) {\n          var t = new Timer();\n          delay = delay == null ? 0 : +delay;\n          t.restart(function (elapsed) {\n            t.stop();\n            callback(elapsed + delay);\n          }, delay, time);\n          return t;\n        };\n\n        var interval$1 = function interval$1(callback, delay, time) {\n          var t = new Timer(),\n              total = delay;\n          if (delay == null) return t.restart(callback, delay, time), t;\n          delay = +delay, time = time == null ? now() : +time;\n          t.restart(function tick(elapsed) {\n            elapsed += total;\n            t.restart(tick, total += delay, time);\n            callback(elapsed);\n          }, delay, time);\n          return t;\n        };\n\n        exports.now = now;\n        exports.timer = timer;\n        exports.timerFlush = timerFlush;\n        exports.timeout = timeout$1;\n        exports.interval = interval$1;\n        Object.defineProperty(exports, '__esModule', {\n          value: true\n        });\n      });\n      /***/\n\n    },\n    /* 25 */\n\n    /***/\n    function (module, exports) {// removed by extract-text-webpack-plugin\n\n      /***/\n    },\n    /* 26 */\n\n    /***/\n    function (module, exports) {\n      \"use strict\";\n      /**\n       * Copyright (c) 2013-present, Facebook, Inc.\n       * All rights reserved.\n       *\n       * This source code is licensed under the BSD-style license found in the\n       * LICENSE file in the root directory of this source tree. An additional grant\n       * of patent rights can be found in the PATENTS file in the same directory.\n       *\n       * \n       */\n\n      function makeEmptyFunction(arg) {\n        return function () {\n          return arg;\n        };\n      }\n      /**\n       * This function accepts and discards inputs; it has no side effects. This is\n       * primarily useful idiomatically for overridable function endpoints which\n       * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n       */\n\n\n      var emptyFunction = function emptyFunction() {};\n\n      emptyFunction.thatReturns = makeEmptyFunction;\n      emptyFunction.thatReturnsFalse = makeEmptyFunction(false);\n      emptyFunction.thatReturnsTrue = makeEmptyFunction(true);\n      emptyFunction.thatReturnsNull = makeEmptyFunction(null);\n\n      emptyFunction.thatReturnsThis = function () {\n        return this;\n      };\n\n      emptyFunction.thatReturnsArgument = function (arg) {\n        return arg;\n      };\n\n      module.exports = emptyFunction;\n      /***/\n    },\n    /* 27 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      /**\n       * Copyright (c) 2013-present, Facebook, Inc.\n       * All rights reserved.\n       *\n       * This source code is licensed under the BSD-style license found in the\n       * LICENSE file in the root directory of this source tree. An additional grant\n       * of patent rights can be found in the PATENTS file in the same directory.\n       *\n       */\n      'use strict';\n      /**\n       * Use invariant() to assert state which your program assumes to be true.\n       *\n       * Provide sprintf-style format (only %s is supported) and arguments\n       * to provide information about what broke and what you were\n       * expecting.\n       *\n       * The invariant message will be stripped in production, but the invariant\n       * will remain to ensure logic does not differ in production.\n       */\n\n      var validateFormat = function validateFormat(format) {};\n\n      if (false) {\n        validateFormat = function validateFormat(format) {\n          if (format === undefined) {\n            throw new Error('invariant requires an error message argument');\n          }\n        };\n      }\n\n      function invariant(condition, format, a, b, c, d, e, f) {\n        validateFormat(format);\n\n        if (!condition) {\n          var error;\n\n          if (format === undefined) {\n            error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n          } else {\n            var args = [a, b, c, d, e, f];\n            var argIndex = 0;\n            error = new Error(format.replace(/%s/g, function () {\n              return args[argIndex++];\n            }));\n            error.name = 'Invariant Violation';\n          }\n\n          error.framesToPop = 1; // we don't care about invariant's own frame\n\n          throw error;\n        }\n      }\n\n      module.exports = invariant;\n      /***/\n    },\n    /* 28 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      /* WEBPACK VAR INJECTION */\n      (function (global, module) {\n        /**\n        * lodash (Custom Build) <https://lodash.com/>\n        * Build: `lodash modularize exports=\"npm\" -o ./`\n        * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n        * Released under MIT license <https://lodash.com/license>\n        * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n        * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n        */\n\n        /** Used as the size to enable large array optimizations. */\n        var LARGE_ARRAY_SIZE = 200;\n        /** Used as the `TypeError` message for \"Functions\" methods. */\n\n        var FUNC_ERROR_TEXT = 'Expected a function';\n        /** Used to stand-in for `undefined` hash values. */\n\n        var HASH_UNDEFINED = '__lodash_hash_undefined__';\n        /** Used to compose bitmasks for comparison styles. */\n\n        var UNORDERED_COMPARE_FLAG = 1,\n            PARTIAL_COMPARE_FLAG = 2;\n        /** Used as references for various `Number` constants. */\n\n        var INFINITY = 1 / 0,\n            MAX_SAFE_INTEGER = 9007199254740991;\n        /** `Object#toString` result references. */\n\n        var argsTag = '[object Arguments]',\n            arrayTag = '[object Array]',\n            boolTag = '[object Boolean]',\n            dateTag = '[object Date]',\n            errorTag = '[object Error]',\n            funcTag = '[object Function]',\n            genTag = '[object GeneratorFunction]',\n            mapTag = '[object Map]',\n            numberTag = '[object Number]',\n            objectTag = '[object Object]',\n            promiseTag = '[object Promise]',\n            regexpTag = '[object RegExp]',\n            setTag = '[object Set]',\n            stringTag = '[object String]',\n            symbolTag = '[object Symbol]',\n            weakMapTag = '[object WeakMap]';\n        var arrayBufferTag = '[object ArrayBuffer]',\n            dataViewTag = '[object DataView]',\n            float32Tag = '[object Float32Array]',\n            float64Tag = '[object Float64Array]',\n            int8Tag = '[object Int8Array]',\n            int16Tag = '[object Int16Array]',\n            int32Tag = '[object Int32Array]',\n            uint8Tag = '[object Uint8Array]',\n            uint8ClampedTag = '[object Uint8ClampedArray]',\n            uint16Tag = '[object Uint16Array]',\n            uint32Tag = '[object Uint32Array]';\n        /** Used to match property names within property paths. */\n\n        var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n            reIsPlainProp = /^\\w*$/,\n            reLeadingDot = /^\\./,\n            rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n        /**\n         * Used to match `RegExp`\n         * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n         */\n\n        var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n        /** Used to match backslashes in property paths. */\n\n        var reEscapeChar = /\\\\(\\\\)?/g;\n        /** Used to detect host constructors (Safari). */\n\n        var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n        /** Used to detect unsigned integer values. */\n\n        var reIsUint = /^(?:0|[1-9]\\d*)$/;\n        /** Used to identify `toStringTag` values of typed arrays. */\n\n        var typedArrayTags = {};\n        typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;\n        typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n        /** Detect free variable `global` from Node.js. */\n\n        var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n        /** Detect free variable `self`. */\n\n        var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n        /** Used as a reference to the global object. */\n\n        var root = freeGlobal || freeSelf || Function('return this')();\n        /** Detect free variable `exports`. */\n\n        var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n        /** Detect free variable `module`. */\n\n        var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n        /** Detect the popular CommonJS extension `module.exports`. */\n\n        var moduleExports = freeModule && freeModule.exports === freeExports;\n        /** Detect free variable `process` from Node.js. */\n\n        var freeProcess = moduleExports && freeGlobal.process;\n        /** Used to access faster Node.js helpers. */\n\n        var nodeUtil = function () {\n          try {\n            return freeProcess && freeProcess.binding('util');\n          } catch (e) {}\n        }();\n        /* Node.js helper references. */\n\n\n        var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n        /**\n         * A specialized version of `_.reduce` for arrays without support for\n         * iteratee shorthands.\n         *\n         * @private\n         * @param {Array} [array] The array to iterate over.\n         * @param {Function} iteratee The function invoked per iteration.\n         * @param {*} [accumulator] The initial value.\n         * @param {boolean} [initAccum] Specify using the first element of `array` as\n         *  the initial value.\n         * @returns {*} Returns the accumulated value.\n         */\n\n        function arrayReduce(array, iteratee, accumulator, initAccum) {\n          var index = -1,\n              length = array ? array.length : 0;\n\n          if (initAccum && length) {\n            accumulator = array[++index];\n          }\n\n          while (++index < length) {\n            accumulator = iteratee(accumulator, array[index], index, array);\n          }\n\n          return accumulator;\n        }\n        /**\n         * A specialized version of `_.some` for arrays without support for iteratee\n         * shorthands.\n         *\n         * @private\n         * @param {Array} [array] The array to iterate over.\n         * @param {Function} predicate The function invoked per iteration.\n         * @returns {boolean} Returns `true` if any element passes the predicate check,\n         *  else `false`.\n         */\n\n\n        function arraySome(array, predicate) {\n          var index = -1,\n              length = array ? array.length : 0;\n\n          while (++index < length) {\n            if (predicate(array[index], index, array)) {\n              return true;\n            }\n          }\n\n          return false;\n        }\n        /**\n         * The base implementation of `_.property` without support for deep paths.\n         *\n         * @private\n         * @param {string} key The key of the property to get.\n         * @returns {Function} Returns the new accessor function.\n         */\n\n\n        function baseProperty(key) {\n          return function (object) {\n            return object == null ? undefined : object[key];\n          };\n        }\n        /**\n         * The base implementation of `_.reduce` and `_.reduceRight`, without support\n         * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n         *\n         * @private\n         * @param {Array|Object} collection The collection to iterate over.\n         * @param {Function} iteratee The function invoked per iteration.\n         * @param {*} accumulator The initial value.\n         * @param {boolean} initAccum Specify using the first or last element of\n         *  `collection` as the initial value.\n         * @param {Function} eachFunc The function to iterate over `collection`.\n         * @returns {*} Returns the accumulated value.\n         */\n\n\n        function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n          eachFunc(collection, function (value, index, collection) {\n            accumulator = initAccum ? (initAccum = false, value) : iteratee(accumulator, value, index, collection);\n          });\n          return accumulator;\n        }\n        /**\n         * The base implementation of `_.times` without support for iteratee shorthands\n         * or max array length checks.\n         *\n         * @private\n         * @param {number} n The number of times to invoke `iteratee`.\n         * @param {Function} iteratee The function invoked per iteration.\n         * @returns {Array} Returns the array of results.\n         */\n\n\n        function baseTimes(n, iteratee) {\n          var index = -1,\n              result = Array(n);\n\n          while (++index < n) {\n            result[index] = iteratee(index);\n          }\n\n          return result;\n        }\n        /**\n         * The base implementation of `_.unary` without support for storing metadata.\n         *\n         * @private\n         * @param {Function} func The function to cap arguments for.\n         * @returns {Function} Returns the new capped function.\n         */\n\n\n        function baseUnary(func) {\n          return function (value) {\n            return func(value);\n          };\n        }\n        /**\n         * Gets the value at `key` of `object`.\n         *\n         * @private\n         * @param {Object} [object] The object to query.\n         * @param {string} key The key of the property to get.\n         * @returns {*} Returns the property value.\n         */\n\n\n        function getValue(object, key) {\n          return object == null ? undefined : object[key];\n        }\n        /**\n         * Checks if `value` is a host object in IE < 9.\n         *\n         * @private\n         * @param {*} value The value to check.\n         * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n         */\n\n\n        function isHostObject(value) {\n          // Many host objects are `Object` objects that can coerce to strings\n          // despite having improperly defined `toString` methods.\n          var result = false;\n\n          if (value != null && typeof value.toString != 'function') {\n            try {\n              result = !!(value + '');\n            } catch (e) {}\n          }\n\n          return result;\n        }\n        /**\n         * Converts `map` to its key-value pairs.\n         *\n         * @private\n         * @param {Object} map The map to convert.\n         * @returns {Array} Returns the key-value pairs.\n         */\n\n\n        function mapToArray(map) {\n          var index = -1,\n              result = Array(map.size);\n          map.forEach(function (value, key) {\n            result[++index] = [key, value];\n          });\n          return result;\n        }\n        /**\n         * Creates a unary function that invokes `func` with its argument transformed.\n         *\n         * @private\n         * @param {Function} func The function to wrap.\n         * @param {Function} transform The argument transform.\n         * @returns {Function} Returns the new function.\n         */\n\n\n        function overArg(func, transform) {\n          return function (arg) {\n            return func(transform(arg));\n          };\n        }\n        /**\n         * Converts `set` to an array of its values.\n         *\n         * @private\n         * @param {Object} set The set to convert.\n         * @returns {Array} Returns the values.\n         */\n\n\n        function setToArray(set) {\n          var index = -1,\n              result = Array(set.size);\n          set.forEach(function (value) {\n            result[++index] = value;\n          });\n          return result;\n        }\n        /** Used for built-in method references. */\n\n\n        var arrayProto = Array.prototype,\n            funcProto = Function.prototype,\n            objectProto = Object.prototype;\n        /** Used to detect overreaching core-js shims. */\n\n        var coreJsData = root['__core-js_shared__'];\n        /** Used to detect methods masquerading as native. */\n\n        var maskSrcKey = function () {\n          var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n          return uid ? 'Symbol(src)_1.' + uid : '';\n        }();\n        /** Used to resolve the decompiled source of functions. */\n\n\n        var funcToString = funcProto.toString;\n        /** Used to check objects for own properties. */\n\n        var hasOwnProperty = objectProto.hasOwnProperty;\n        /**\n         * Used to resolve the\n         * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n         * of values.\n         */\n\n        var objectToString = objectProto.toString;\n        /** Used to detect if a method is native. */\n\n        var reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n        /** Built-in value references. */\n\n        var Symbol = root.Symbol,\n            Uint8Array = root.Uint8Array,\n            propertyIsEnumerable = objectProto.propertyIsEnumerable,\n            splice = arrayProto.splice;\n        /* Built-in method references for those with the same name as other `lodash` methods. */\n\n        var nativeKeys = overArg(Object.keys, Object);\n        /* Built-in method references that are verified to be native. */\n\n        var DataView = getNative(root, 'DataView'),\n            Map = getNative(root, 'Map'),\n            Promise = getNative(root, 'Promise'),\n            Set = getNative(root, 'Set'),\n            WeakMap = getNative(root, 'WeakMap'),\n            nativeCreate = getNative(Object, 'create');\n        /** Used to detect maps, sets, and weakmaps. */\n\n        var dataViewCtorString = toSource(DataView),\n            mapCtorString = toSource(Map),\n            promiseCtorString = toSource(Promise),\n            setCtorString = toSource(Set),\n            weakMapCtorString = toSource(WeakMap);\n        /** Used to convert symbols to primitives and strings. */\n\n        var symbolProto = Symbol ? Symbol.prototype : undefined,\n            symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n            symbolToString = symbolProto ? symbolProto.toString : undefined;\n        /**\n         * Creates a hash object.\n         *\n         * @private\n         * @constructor\n         * @param {Array} [entries] The key-value pairs to cache.\n         */\n\n        function Hash(entries) {\n          var index = -1,\n              length = entries ? entries.length : 0;\n          this.clear();\n\n          while (++index < length) {\n            var entry = entries[index];\n            this.set(entry[0], entry[1]);\n          }\n        }\n        /**\n         * Removes all key-value entries from the hash.\n         *\n         * @private\n         * @name clear\n         * @memberOf Hash\n         */\n\n\n        function hashClear() {\n          this.__data__ = nativeCreate ? nativeCreate(null) : {};\n        }\n        /**\n         * Removes `key` and its value from the hash.\n         *\n         * @private\n         * @name delete\n         * @memberOf Hash\n         * @param {Object} hash The hash to modify.\n         * @param {string} key The key of the value to remove.\n         * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n         */\n\n\n        function hashDelete(key) {\n          return this.has(key) && delete this.__data__[key];\n        }\n        /**\n         * Gets the hash value for `key`.\n         *\n         * @private\n         * @name get\n         * @memberOf Hash\n         * @param {string} key The key of the value to get.\n         * @returns {*} Returns the entry value.\n         */\n\n\n        function hashGet(key) {\n          var data = this.__data__;\n\n          if (nativeCreate) {\n            var result = data[key];\n            return result === HASH_UNDEFINED ? undefined : result;\n          }\n\n          return hasOwnProperty.call(data, key) ? data[key] : undefined;\n        }\n        /**\n         * Checks if a hash value for `key` exists.\n         *\n         * @private\n         * @name has\n         * @memberOf Hash\n         * @param {string} key The key of the entry to check.\n         * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n         */\n\n\n        function hashHas(key) {\n          var data = this.__data__;\n          return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n        }\n        /**\n         * Sets the hash `key` to `value`.\n         *\n         * @private\n         * @name set\n         * @memberOf Hash\n         * @param {string} key The key of the value to set.\n         * @param {*} value The value to set.\n         * @returns {Object} Returns the hash instance.\n         */\n\n\n        function hashSet(key, value) {\n          var data = this.__data__;\n          data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;\n          return this;\n        } // Add methods to `Hash`.\n\n\n        Hash.prototype.clear = hashClear;\n        Hash.prototype['delete'] = hashDelete;\n        Hash.prototype.get = hashGet;\n        Hash.prototype.has = hashHas;\n        Hash.prototype.set = hashSet;\n        /**\n         * Creates an list cache object.\n         *\n         * @private\n         * @constructor\n         * @param {Array} [entries] The key-value pairs to cache.\n         */\n\n        function ListCache(entries) {\n          var index = -1,\n              length = entries ? entries.length : 0;\n          this.clear();\n\n          while (++index < length) {\n            var entry = entries[index];\n            this.set(entry[0], entry[1]);\n          }\n        }\n        /**\n         * Removes all key-value entries from the list cache.\n         *\n         * @private\n         * @name clear\n         * @memberOf ListCache\n         */\n\n\n        function listCacheClear() {\n          this.__data__ = [];\n        }\n        /**\n         * Removes `key` and its value from the list cache.\n         *\n         * @private\n         * @name delete\n         * @memberOf ListCache\n         * @param {string} key The key of the value to remove.\n         * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n         */\n\n\n        function listCacheDelete(key) {\n          var data = this.__data__,\n              index = assocIndexOf(data, key);\n\n          if (index < 0) {\n            return false;\n          }\n\n          var lastIndex = data.length - 1;\n\n          if (index == lastIndex) {\n            data.pop();\n          } else {\n            splice.call(data, index, 1);\n          }\n\n          return true;\n        }\n        /**\n         * Gets the list cache value for `key`.\n         *\n         * @private\n         * @name get\n         * @memberOf ListCache\n         * @param {string} key The key of the value to get.\n         * @returns {*} Returns the entry value.\n         */\n\n\n        function listCacheGet(key) {\n          var data = this.__data__,\n              index = assocIndexOf(data, key);\n          return index < 0 ? undefined : data[index][1];\n        }\n        /**\n         * Checks if a list cache value for `key` exists.\n         *\n         * @private\n         * @name has\n         * @memberOf ListCache\n         * @param {string} key The key of the entry to check.\n         * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n         */\n\n\n        function listCacheHas(key) {\n          return assocIndexOf(this.__data__, key) > -1;\n        }\n        /**\n         * Sets the list cache `key` to `value`.\n         *\n         * @private\n         * @name set\n         * @memberOf ListCache\n         * @param {string} key The key of the value to set.\n         * @param {*} value The value to set.\n         * @returns {Object} Returns the list cache instance.\n         */\n\n\n        function listCacheSet(key, value) {\n          var data = this.__data__,\n              index = assocIndexOf(data, key);\n\n          if (index < 0) {\n            data.push([key, value]);\n          } else {\n            data[index][1] = value;\n          }\n\n          return this;\n        } // Add methods to `ListCache`.\n\n\n        ListCache.prototype.clear = listCacheClear;\n        ListCache.prototype['delete'] = listCacheDelete;\n        ListCache.prototype.get = listCacheGet;\n        ListCache.prototype.has = listCacheHas;\n        ListCache.prototype.set = listCacheSet;\n        /**\n         * Creates a map cache object to store key-value pairs.\n         *\n         * @private\n         * @constructor\n         * @param {Array} [entries] The key-value pairs to cache.\n         */\n\n        function MapCache(entries) {\n          var index = -1,\n              length = entries ? entries.length : 0;\n          this.clear();\n\n          while (++index < length) {\n            var entry = entries[index];\n            this.set(entry[0], entry[1]);\n          }\n        }\n        /**\n         * Removes all key-value entries from the map.\n         *\n         * @private\n         * @name clear\n         * @memberOf MapCache\n         */\n\n\n        function mapCacheClear() {\n          this.__data__ = {\n            'hash': new Hash(),\n            'map': new (Map || ListCache)(),\n            'string': new Hash()\n          };\n        }\n        /**\n         * Removes `key` and its value from the map.\n         *\n         * @private\n         * @name delete\n         * @memberOf MapCache\n         * @param {string} key The key of the value to remove.\n         * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n         */\n\n\n        function mapCacheDelete(key) {\n          return getMapData(this, key)['delete'](key);\n        }\n        /**\n         * Gets the map value for `key`.\n         *\n         * @private\n         * @name get\n         * @memberOf MapCache\n         * @param {string} key The key of the value to get.\n         * @returns {*} Returns the entry value.\n         */\n\n\n        function mapCacheGet(key) {\n          return getMapData(this, key).get(key);\n        }\n        /**\n         * Checks if a map value for `key` exists.\n         *\n         * @private\n         * @name has\n         * @memberOf MapCache\n         * @param {string} key The key of the entry to check.\n         * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n         */\n\n\n        function mapCacheHas(key) {\n          return getMapData(this, key).has(key);\n        }\n        /**\n         * Sets the map `key` to `value`.\n         *\n         * @private\n         * @name set\n         * @memberOf MapCache\n         * @param {string} key The key of the value to set.\n         * @param {*} value The value to set.\n         * @returns {Object} Returns the map cache instance.\n         */\n\n\n        function mapCacheSet(key, value) {\n          getMapData(this, key).set(key, value);\n          return this;\n        } // Add methods to `MapCache`.\n\n\n        MapCache.prototype.clear = mapCacheClear;\n        MapCache.prototype['delete'] = mapCacheDelete;\n        MapCache.prototype.get = mapCacheGet;\n        MapCache.prototype.has = mapCacheHas;\n        MapCache.prototype.set = mapCacheSet;\n        /**\n         *\n         * Creates an array cache object to store unique values.\n         *\n         * @private\n         * @constructor\n         * @param {Array} [values] The values to cache.\n         */\n\n        function SetCache(values) {\n          var index = -1,\n              length = values ? values.length : 0;\n          this.__data__ = new MapCache();\n\n          while (++index < length) {\n            this.add(values[index]);\n          }\n        }\n        /**\n         * Adds `value` to the array cache.\n         *\n         * @private\n         * @name add\n         * @memberOf SetCache\n         * @alias push\n         * @param {*} value The value to cache.\n         * @returns {Object} Returns the cache instance.\n         */\n\n\n        function setCacheAdd(value) {\n          this.__data__.set(value, HASH_UNDEFINED);\n\n          return this;\n        }\n        /**\n         * Checks if `value` is in the array cache.\n         *\n         * @private\n         * @name has\n         * @memberOf SetCache\n         * @param {*} value The value to search for.\n         * @returns {number} Returns `true` if `value` is found, else `false`.\n         */\n\n\n        function setCacheHas(value) {\n          return this.__data__.has(value);\n        } // Add methods to `SetCache`.\n\n\n        SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n        SetCache.prototype.has = setCacheHas;\n        /**\n         * Creates a stack cache object to store key-value pairs.\n         *\n         * @private\n         * @constructor\n         * @param {Array} [entries] The key-value pairs to cache.\n         */\n\n        function Stack(entries) {\n          this.__data__ = new ListCache(entries);\n        }\n        /**\n         * Removes all key-value entries from the stack.\n         *\n         * @private\n         * @name clear\n         * @memberOf Stack\n         */\n\n\n        function stackClear() {\n          this.__data__ = new ListCache();\n        }\n        /**\n         * Removes `key` and its value from the stack.\n         *\n         * @private\n         * @name delete\n         * @memberOf Stack\n         * @param {string} key The key of the value to remove.\n         * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n         */\n\n\n        function stackDelete(key) {\n          return this.__data__['delete'](key);\n        }\n        /**\n         * Gets the stack value for `key`.\n         *\n         * @private\n         * @name get\n         * @memberOf Stack\n         * @param {string} key The key of the value to get.\n         * @returns {*} Returns the entry value.\n         */\n\n\n        function stackGet(key) {\n          return this.__data__.get(key);\n        }\n        /**\n         * Checks if a stack value for `key` exists.\n         *\n         * @private\n         * @name has\n         * @memberOf Stack\n         * @param {string} key The key of the entry to check.\n         * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n         */\n\n\n        function stackHas(key) {\n          return this.__data__.has(key);\n        }\n        /**\n         * Sets the stack `key` to `value`.\n         *\n         * @private\n         * @name set\n         * @memberOf Stack\n         * @param {string} key The key of the value to set.\n         * @param {*} value The value to set.\n         * @returns {Object} Returns the stack cache instance.\n         */\n\n\n        function stackSet(key, value) {\n          var cache = this.__data__;\n\n          if (cache instanceof ListCache) {\n            var pairs = cache.__data__;\n\n            if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {\n              pairs.push([key, value]);\n              return this;\n            }\n\n            cache = this.__data__ = new MapCache(pairs);\n          }\n\n          cache.set(key, value);\n          return this;\n        } // Add methods to `Stack`.\n\n\n        Stack.prototype.clear = stackClear;\n        Stack.prototype['delete'] = stackDelete;\n        Stack.prototype.get = stackGet;\n        Stack.prototype.has = stackHas;\n        Stack.prototype.set = stackSet;\n        /**\n         * Creates an array of the enumerable property names of the array-like `value`.\n         *\n         * @private\n         * @param {*} value The value to query.\n         * @param {boolean} inherited Specify returning inherited property names.\n         * @returns {Array} Returns the array of property names.\n         */\n\n        function arrayLikeKeys(value, inherited) {\n          // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n          // Safari 9 makes `arguments.length` enumerable in strict mode.\n          var result = isArray(value) || isArguments(value) ? baseTimes(value.length, String) : [];\n          var length = result.length,\n              skipIndexes = !!length;\n\n          for (var key in value) {\n            if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n              result.push(key);\n            }\n          }\n\n          return result;\n        }\n        /**\n         * Gets the index at which the `key` is found in `array` of key-value pairs.\n         *\n         * @private\n         * @param {Array} array The array to inspect.\n         * @param {*} key The key to search for.\n         * @returns {number} Returns the index of the matched value, else `-1`.\n         */\n\n\n        function assocIndexOf(array, key) {\n          var length = array.length;\n\n          while (length--) {\n            if (eq(array[length][0], key)) {\n              return length;\n            }\n          }\n\n          return -1;\n        }\n        /**\n         * The base implementation of `_.forEach` without support for iteratee shorthands.\n         *\n         * @private\n         * @param {Array|Object} collection The collection to iterate over.\n         * @param {Function} iteratee The function invoked per iteration.\n         * @returns {Array|Object} Returns `collection`.\n         */\n\n\n        var baseEach = createBaseEach(baseForOwn);\n        /**\n         * The base implementation of `baseForOwn` which iterates over `object`\n         * properties returned by `keysFunc` and invokes `iteratee` for each property.\n         * Iteratee functions may exit iteration early by explicitly returning `false`.\n         *\n         * @private\n         * @param {Object} object The object to iterate over.\n         * @param {Function} iteratee The function invoked per iteration.\n         * @param {Function} keysFunc The function to get the keys of `object`.\n         * @returns {Object} Returns `object`.\n         */\n\n        var baseFor = createBaseFor();\n        /**\n         * The base implementation of `_.forOwn` without support for iteratee shorthands.\n         *\n         * @private\n         * @param {Object} object The object to iterate over.\n         * @param {Function} iteratee The function invoked per iteration.\n         * @returns {Object} Returns `object`.\n         */\n\n        function baseForOwn(object, iteratee) {\n          return object && baseFor(object, iteratee, keys);\n        }\n        /**\n         * The base implementation of `_.get` without support for default values.\n         *\n         * @private\n         * @param {Object} object The object to query.\n         * @param {Array|string} path The path of the property to get.\n         * @returns {*} Returns the resolved value.\n         */\n\n\n        function baseGet(object, path) {\n          path = isKey(path, object) ? [path] : castPath(path);\n          var index = 0,\n              length = path.length;\n\n          while (object != null && index < length) {\n            object = object[toKey(path[index++])];\n          }\n\n          return index && index == length ? object : undefined;\n        }\n        /**\n         * The base implementation of `getTag`.\n         *\n         * @private\n         * @param {*} value The value to query.\n         * @returns {string} Returns the `toStringTag`.\n         */\n\n\n        function baseGetTag(value) {\n          return objectToString.call(value);\n        }\n        /**\n         * The base implementation of `_.hasIn` without support for deep paths.\n         *\n         * @private\n         * @param {Object} [object] The object to query.\n         * @param {Array|string} key The key to check.\n         * @returns {boolean} Returns `true` if `key` exists, else `false`.\n         */\n\n\n        function baseHasIn(object, key) {\n          return object != null && key in Object(object);\n        }\n        /**\n         * The base implementation of `_.isEqual` which supports partial comparisons\n         * and tracks traversed objects.\n         *\n         * @private\n         * @param {*} value The value to compare.\n         * @param {*} other The other value to compare.\n         * @param {Function} [customizer] The function to customize comparisons.\n         * @param {boolean} [bitmask] The bitmask of comparison flags.\n         *  The bitmask may be composed of the following flags:\n         *     1 - Unordered comparison\n         *     2 - Partial comparison\n         * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n         * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n         */\n\n\n        function baseIsEqual(value, other, customizer, bitmask, stack) {\n          if (value === other) {\n            return true;\n          }\n\n          if (value == null || other == null || !isObject(value) && !isObjectLike(other)) {\n            return value !== value && other !== other;\n          }\n\n          return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n        }\n        /**\n         * A specialized version of `baseIsEqual` for arrays and objects which performs\n         * deep comparisons and tracks traversed objects enabling objects with circular\n         * references to be compared.\n         *\n         * @private\n         * @param {Object} object The object to compare.\n         * @param {Object} other The other object to compare.\n         * @param {Function} equalFunc The function to determine equivalents of values.\n         * @param {Function} [customizer] The function to customize comparisons.\n         * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`\n         *  for more details.\n         * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n         * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n         */\n\n\n        function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n          var objIsArr = isArray(object),\n              othIsArr = isArray(other),\n              objTag = arrayTag,\n              othTag = arrayTag;\n\n          if (!objIsArr) {\n            objTag = getTag(object);\n            objTag = objTag == argsTag ? objectTag : objTag;\n          }\n\n          if (!othIsArr) {\n            othTag = getTag(other);\n            othTag = othTag == argsTag ? objectTag : othTag;\n          }\n\n          var objIsObj = objTag == objectTag && !isHostObject(object),\n              othIsObj = othTag == objectTag && !isHostObject(other),\n              isSameTag = objTag == othTag;\n\n          if (isSameTag && !objIsObj) {\n            stack || (stack = new Stack());\n            return objIsArr || isTypedArray(object) ? equalArrays(object, other, equalFunc, customizer, bitmask, stack) : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);\n          }\n\n          if (!(bitmask & PARTIAL_COMPARE_FLAG)) {\n            var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n                othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n            if (objIsWrapped || othIsWrapped) {\n              var objUnwrapped = objIsWrapped ? object.value() : object,\n                  othUnwrapped = othIsWrapped ? other.value() : other;\n              stack || (stack = new Stack());\n              return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);\n            }\n          }\n\n          if (!isSameTag) {\n            return false;\n          }\n\n          stack || (stack = new Stack());\n          return equalObjects(object, other, equalFunc, customizer, bitmask, stack);\n        }\n        /**\n         * The base implementation of `_.isMatch` without support for iteratee shorthands.\n         *\n         * @private\n         * @param {Object} object The object to inspect.\n         * @param {Object} source The object of property values to match.\n         * @param {Array} matchData The property names, values, and compare flags to match.\n         * @param {Function} [customizer] The function to customize comparisons.\n         * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n         */\n\n\n        function baseIsMatch(object, source, matchData, customizer) {\n          var index = matchData.length,\n              length = index,\n              noCustomizer = !customizer;\n\n          if (object == null) {\n            return !length;\n          }\n\n          object = Object(object);\n\n          while (index--) {\n            var data = matchData[index];\n\n            if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {\n              return false;\n            }\n          }\n\n          while (++index < length) {\n            data = matchData[index];\n            var key = data[0],\n                objValue = object[key],\n                srcValue = data[1];\n\n            if (noCustomizer && data[2]) {\n              if (objValue === undefined && !(key in object)) {\n                return false;\n              }\n            } else {\n              var stack = new Stack();\n\n              if (customizer) {\n                var result = customizer(objValue, srcValue, key, object, source, stack);\n              }\n\n              if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack) : result)) {\n                return false;\n              }\n            }\n          }\n\n          return true;\n        }\n        /**\n         * The base implementation of `_.isNative` without bad shim checks.\n         *\n         * @private\n         * @param {*} value The value to check.\n         * @returns {boolean} Returns `true` if `value` is a native function,\n         *  else `false`.\n         */\n\n\n        function baseIsNative(value) {\n          if (!isObject(value) || isMasked(value)) {\n            return false;\n          }\n\n          var pattern = isFunction(value) || isHostObject(value) ? reIsNative : reIsHostCtor;\n          return pattern.test(toSource(value));\n        }\n        /**\n         * The base implementation of `_.isTypedArray` without Node.js optimizations.\n         *\n         * @private\n         * @param {*} value The value to check.\n         * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n         */\n\n\n        function baseIsTypedArray(value) {\n          return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objectToString.call(value)];\n        }\n        /**\n         * The base implementation of `_.iteratee`.\n         *\n         * @private\n         * @param {*} [value=_.identity] The value to convert to an iteratee.\n         * @returns {Function} Returns the iteratee.\n         */\n\n\n        function baseIteratee(value) {\n          // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n          // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n          if (typeof value == 'function') {\n            return value;\n          }\n\n          if (value == null) {\n            return identity;\n          }\n\n          if (typeof value == 'object') {\n            return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);\n          }\n\n          return property(value);\n        }\n        /**\n         * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n         *\n         * @private\n         * @param {Object} object The object to query.\n         * @returns {Array} Returns the array of property names.\n         */\n\n\n        function baseKeys(object) {\n          if (!isPrototype(object)) {\n            return nativeKeys(object);\n          }\n\n          var result = [];\n\n          for (var key in Object(object)) {\n            if (hasOwnProperty.call(object, key) && key != 'constructor') {\n              result.push(key);\n            }\n          }\n\n          return result;\n        }\n        /**\n         * The base implementation of `_.matches` which doesn't clone `source`.\n         *\n         * @private\n         * @param {Object} source The object of property values to match.\n         * @returns {Function} Returns the new spec function.\n         */\n\n\n        function baseMatches(source) {\n          var matchData = getMatchData(source);\n\n          if (matchData.length == 1 && matchData[0][2]) {\n            return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n          }\n\n          return function (object) {\n            return object === source || baseIsMatch(object, source, matchData);\n          };\n        }\n        /**\n         * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n         *\n         * @private\n         * @param {string} path The path of the property to get.\n         * @param {*} srcValue The value to match.\n         * @returns {Function} Returns the new spec function.\n         */\n\n\n        function baseMatchesProperty(path, srcValue) {\n          if (isKey(path) && isStrictComparable(srcValue)) {\n            return matchesStrictComparable(toKey(path), srcValue);\n          }\n\n          return function (object) {\n            var objValue = get(object, path);\n            return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);\n          };\n        }\n        /**\n         * A specialized version of `baseProperty` which supports deep paths.\n         *\n         * @private\n         * @param {Array|string} path The path of the property to get.\n         * @returns {Function} Returns the new accessor function.\n         */\n\n\n        function basePropertyDeep(path) {\n          return function (object) {\n            return baseGet(object, path);\n          };\n        }\n        /**\n         * The base implementation of `_.toString` which doesn't convert nullish\n         * values to empty strings.\n         *\n         * @private\n         * @param {*} value The value to process.\n         * @returns {string} Returns the string.\n         */\n\n\n        function baseToString(value) {\n          // Exit early for strings to avoid a performance hit in some environments.\n          if (typeof value == 'string') {\n            return value;\n          }\n\n          if (isSymbol(value)) {\n            return symbolToString ? symbolToString.call(value) : '';\n          }\n\n          var result = value + '';\n          return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n        }\n        /**\n         * Casts `value` to a path array if it's not one.\n         *\n         * @private\n         * @param {*} value The value to inspect.\n         * @returns {Array} Returns the cast property path array.\n         */\n\n\n        function castPath(value) {\n          return isArray(value) ? value : stringToPath(value);\n        }\n        /**\n         * Creates a `baseEach` or `baseEachRight` function.\n         *\n         * @private\n         * @param {Function} eachFunc The function to iterate over a collection.\n         * @param {boolean} [fromRight] Specify iterating from right to left.\n         * @returns {Function} Returns the new base function.\n         */\n\n\n        function createBaseEach(eachFunc, fromRight) {\n          return function (collection, iteratee) {\n            if (collection == null) {\n              return collection;\n            }\n\n            if (!isArrayLike(collection)) {\n              return eachFunc(collection, iteratee);\n            }\n\n            var length = collection.length,\n                index = fromRight ? length : -1,\n                iterable = Object(collection);\n\n            while (fromRight ? index-- : ++index < length) {\n              if (iteratee(iterable[index], index, iterable) === false) {\n                break;\n              }\n            }\n\n            return collection;\n          };\n        }\n        /**\n         * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n         *\n         * @private\n         * @param {boolean} [fromRight] Specify iterating from right to left.\n         * @returns {Function} Returns the new base function.\n         */\n\n\n        function createBaseFor(fromRight) {\n          return function (object, iteratee, keysFunc) {\n            var index = -1,\n                iterable = Object(object),\n                props = keysFunc(object),\n                length = props.length;\n\n            while (length--) {\n              var key = props[fromRight ? length : ++index];\n\n              if (iteratee(iterable[key], key, iterable) === false) {\n                break;\n              }\n            }\n\n            return object;\n          };\n        }\n        /**\n         * A specialized version of `baseIsEqualDeep` for arrays with support for\n         * partial deep comparisons.\n         *\n         * @private\n         * @param {Array} array The array to compare.\n         * @param {Array} other The other array to compare.\n         * @param {Function} equalFunc The function to determine equivalents of values.\n         * @param {Function} customizer The function to customize comparisons.\n         * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n         *  for more details.\n         * @param {Object} stack Tracks traversed `array` and `other` objects.\n         * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n         */\n\n\n        function equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n          var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n              arrLength = array.length,\n              othLength = other.length;\n\n          if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n            return false;\n          } // Assume cyclic values are equal.\n\n\n          var stacked = stack.get(array);\n\n          if (stacked && stack.get(other)) {\n            return stacked == other;\n          }\n\n          var index = -1,\n              result = true,\n              seen = bitmask & UNORDERED_COMPARE_FLAG ? new SetCache() : undefined;\n          stack.set(array, other);\n          stack.set(other, array); // Ignore non-index properties.\n\n          while (++index < arrLength) {\n            var arrValue = array[index],\n                othValue = other[index];\n\n            if (customizer) {\n              var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);\n            }\n\n            if (compared !== undefined) {\n              if (compared) {\n                continue;\n              }\n\n              result = false;\n              break;\n            } // Recursively compare arrays (susceptible to call stack limits).\n\n\n            if (seen) {\n              if (!arraySome(other, function (othValue, othIndex) {\n                if (!seen.has(othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n                  return seen.add(othIndex);\n                }\n              })) {\n                result = false;\n                break;\n              }\n            } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n              result = false;\n              break;\n            }\n          }\n\n          stack['delete'](array);\n          stack['delete'](other);\n          return result;\n        }\n        /**\n         * A specialized version of `baseIsEqualDeep` for comparing objects of\n         * the same `toStringTag`.\n         *\n         * **Note:** This function only supports comparing values with tags of\n         * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n         *\n         * @private\n         * @param {Object} object The object to compare.\n         * @param {Object} other The other object to compare.\n         * @param {string} tag The `toStringTag` of the objects to compare.\n         * @param {Function} equalFunc The function to determine equivalents of values.\n         * @param {Function} customizer The function to customize comparisons.\n         * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n         *  for more details.\n         * @param {Object} stack Tracks traversed `object` and `other` objects.\n         * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n         */\n\n\n        function equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {\n          switch (tag) {\n            case dataViewTag:\n              if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {\n                return false;\n              }\n\n              object = object.buffer;\n              other = other.buffer;\n\n            case arrayBufferTag:\n              if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n                return false;\n              }\n\n              return true;\n\n            case boolTag:\n            case dateTag:\n            case numberTag:\n              // Coerce booleans to `1` or `0` and dates to milliseconds.\n              // Invalid dates are coerced to `NaN`.\n              return eq(+object, +other);\n\n            case errorTag:\n              return object.name == other.name && object.message == other.message;\n\n            case regexpTag:\n            case stringTag:\n              // Coerce regexes to strings and treat strings, primitives and objects,\n              // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n              // for more details.\n              return object == other + '';\n\n            case mapTag:\n              var convert = mapToArray;\n\n            case setTag:\n              var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n              convert || (convert = setToArray);\n\n              if (object.size != other.size && !isPartial) {\n                return false;\n              } // Assume cyclic values are equal.\n\n\n              var stacked = stack.get(object);\n\n              if (stacked) {\n                return stacked == other;\n              }\n\n              bitmask |= UNORDERED_COMPARE_FLAG; // Recursively compare objects (susceptible to call stack limits).\n\n              stack.set(object, other);\n              var result = equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);\n              stack['delete'](object);\n              return result;\n\n            case symbolTag:\n              if (symbolValueOf) {\n                return symbolValueOf.call(object) == symbolValueOf.call(other);\n              }\n\n          }\n\n          return false;\n        }\n        /**\n         * A specialized version of `baseIsEqualDeep` for objects with support for\n         * partial deep comparisons.\n         *\n         * @private\n         * @param {Object} object The object to compare.\n         * @param {Object} other The other object to compare.\n         * @param {Function} equalFunc The function to determine equivalents of values.\n         * @param {Function} customizer The function to customize comparisons.\n         * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n         *  for more details.\n         * @param {Object} stack Tracks traversed `object` and `other` objects.\n         * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n         */\n\n\n        function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n          var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n              objProps = keys(object),\n              objLength = objProps.length,\n              othProps = keys(other),\n              othLength = othProps.length;\n\n          if (objLength != othLength && !isPartial) {\n            return false;\n          }\n\n          var index = objLength;\n\n          while (index--) {\n            var key = objProps[index];\n\n            if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n              return false;\n            }\n          } // Assume cyclic values are equal.\n\n\n          var stacked = stack.get(object);\n\n          if (stacked && stack.get(other)) {\n            return stacked == other;\n          }\n\n          var result = true;\n          stack.set(object, other);\n          stack.set(other, object);\n          var skipCtor = isPartial;\n\n          while (++index < objLength) {\n            key = objProps[index];\n            var objValue = object[key],\n                othValue = other[key];\n\n            if (customizer) {\n              var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);\n            } // Recursively compare objects (susceptible to call stack limits).\n\n\n            if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack) : compared)) {\n              result = false;\n              break;\n            }\n\n            skipCtor || (skipCtor = key == 'constructor');\n          }\n\n          if (result && !skipCtor) {\n            var objCtor = object.constructor,\n                othCtor = other.constructor; // Non `Object` object instances with different constructors are not equal.\n\n            if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n              result = false;\n            }\n          }\n\n          stack['delete'](object);\n          stack['delete'](other);\n          return result;\n        }\n        /**\n         * Gets the data for `map`.\n         *\n         * @private\n         * @param {Object} map The map to query.\n         * @param {string} key The reference key.\n         * @returns {*} Returns the map data.\n         */\n\n\n        function getMapData(map, key) {\n          var data = map.__data__;\n          return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;\n        }\n        /**\n         * Gets the property names, values, and compare flags of `object`.\n         *\n         * @private\n         * @param {Object} object The object to query.\n         * @returns {Array} Returns the match data of `object`.\n         */\n\n\n        function getMatchData(object) {\n          var result = keys(object),\n              length = result.length;\n\n          while (length--) {\n            var key = result[length],\n                value = object[key];\n            result[length] = [key, value, isStrictComparable(value)];\n          }\n\n          return result;\n        }\n        /**\n         * Gets the native function at `key` of `object`.\n         *\n         * @private\n         * @param {Object} object The object to query.\n         * @param {string} key The key of the method to get.\n         * @returns {*} Returns the function if it's native, else `undefined`.\n         */\n\n\n        function getNative(object, key) {\n          var value = getValue(object, key);\n          return baseIsNative(value) ? value : undefined;\n        }\n        /**\n         * Gets the `toStringTag` of `value`.\n         *\n         * @private\n         * @param {*} value The value to query.\n         * @returns {string} Returns the `toStringTag`.\n         */\n\n\n        var getTag = baseGetTag; // Fallback for data views, maps, sets, and weak maps in IE 11,\n        // for data views in Edge < 14, and promises in Node.js.\n\n        if (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {\n          getTag = function getTag(value) {\n            var result = objectToString.call(value),\n                Ctor = result == objectTag ? value.constructor : undefined,\n                ctorString = Ctor ? toSource(Ctor) : undefined;\n\n            if (ctorString) {\n              switch (ctorString) {\n                case dataViewCtorString:\n                  return dataViewTag;\n\n                case mapCtorString:\n                  return mapTag;\n\n                case promiseCtorString:\n                  return promiseTag;\n\n                case setCtorString:\n                  return setTag;\n\n                case weakMapCtorString:\n                  return weakMapTag;\n              }\n            }\n\n            return result;\n          };\n        }\n        /**\n         * Checks if `path` exists on `object`.\n         *\n         * @private\n         * @param {Object} object The object to query.\n         * @param {Array|string} path The path to check.\n         * @param {Function} hasFunc The function to check properties.\n         * @returns {boolean} Returns `true` if `path` exists, else `false`.\n         */\n\n\n        function hasPath(object, path, hasFunc) {\n          path = isKey(path, object) ? [path] : castPath(path);\n          var result,\n              index = -1,\n              length = path.length;\n\n          while (++index < length) {\n            var key = toKey(path[index]);\n\n            if (!(result = object != null && hasFunc(object, key))) {\n              break;\n            }\n\n            object = object[key];\n          }\n\n          if (result) {\n            return result;\n          }\n\n          var length = object ? object.length : 0;\n          return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));\n        }\n        /**\n         * Checks if `value` is a valid array-like index.\n         *\n         * @private\n         * @param {*} value The value to check.\n         * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n         * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n         */\n\n\n        function isIndex(value, length) {\n          length = length == null ? MAX_SAFE_INTEGER : length;\n          return !!length && (typeof value == 'number' || reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n        }\n        /**\n         * Checks if `value` is a property name and not a property path.\n         *\n         * @private\n         * @param {*} value The value to check.\n         * @param {Object} [object] The object to query keys on.\n         * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n         */\n\n\n        function isKey(value, object) {\n          if (isArray(value)) {\n            return false;\n          }\n\n          var type = typeof value;\n\n          if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {\n            return true;\n          }\n\n          return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);\n        }\n        /**\n         * Checks if `value` is suitable for use as unique object key.\n         *\n         * @private\n         * @param {*} value The value to check.\n         * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n         */\n\n\n        function isKeyable(value) {\n          var type = typeof value;\n          return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;\n        }\n        /**\n         * Checks if `func` has its source masked.\n         *\n         * @private\n         * @param {Function} func The function to check.\n         * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n         */\n\n\n        function isMasked(func) {\n          return !!maskSrcKey && maskSrcKey in func;\n        }\n        /**\n         * Checks if `value` is likely a prototype object.\n         *\n         * @private\n         * @param {*} value The value to check.\n         * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n         */\n\n\n        function isPrototype(value) {\n          var Ctor = value && value.constructor,\n              proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;\n          return value === proto;\n        }\n        /**\n         * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n         *\n         * @private\n         * @param {*} value The value to check.\n         * @returns {boolean} Returns `true` if `value` if suitable for strict\n         *  equality comparisons, else `false`.\n         */\n\n\n        function isStrictComparable(value) {\n          return value === value && !isObject(value);\n        }\n        /**\n         * A specialized version of `matchesProperty` for source values suitable\n         * for strict equality comparisons, i.e. `===`.\n         *\n         * @private\n         * @param {string} key The key of the property to get.\n         * @param {*} srcValue The value to match.\n         * @returns {Function} Returns the new spec function.\n         */\n\n\n        function matchesStrictComparable(key, srcValue) {\n          return function (object) {\n            if (object == null) {\n              return false;\n            }\n\n            return object[key] === srcValue && (srcValue !== undefined || key in Object(object));\n          };\n        }\n        /**\n         * Converts `string` to a property path array.\n         *\n         * @private\n         * @param {string} string The string to convert.\n         * @returns {Array} Returns the property path array.\n         */\n\n\n        var stringToPath = memoize(function (string) {\n          string = toString(string);\n          var result = [];\n\n          if (reLeadingDot.test(string)) {\n            result.push('');\n          }\n\n          string.replace(rePropName, function (match, number, quote, string) {\n            result.push(quote ? string.replace(reEscapeChar, '$1') : number || match);\n          });\n          return result;\n        });\n        /**\n         * Converts `value` to a string key if it's not a string or symbol.\n         *\n         * @private\n         * @param {*} value The value to inspect.\n         * @returns {string|symbol} Returns the key.\n         */\n\n        function toKey(value) {\n          if (typeof value == 'string' || isSymbol(value)) {\n            return value;\n          }\n\n          var result = value + '';\n          return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n        }\n        /**\n         * Converts `func` to its source code.\n         *\n         * @private\n         * @param {Function} func The function to process.\n         * @returns {string} Returns the source code.\n         */\n\n\n        function toSource(func) {\n          if (func != null) {\n            try {\n              return funcToString.call(func);\n            } catch (e) {}\n\n            try {\n              return func + '';\n            } catch (e) {}\n          }\n\n          return '';\n        }\n        /**\n         * Reduces `collection` to a value which is the accumulated result of running\n         * each element in `collection` thru `iteratee`, where each successive\n         * invocation is supplied the return value of the previous. If `accumulator`\n         * is not given, the first element of `collection` is used as the initial\n         * value. The iteratee is invoked with four arguments:\n         * (accumulator, value, index|key, collection).\n         *\n         * Many lodash methods are guarded to work as iteratees for methods like\n         * `_.reduce`, `_.reduceRight`, and `_.transform`.\n         *\n         * The guarded methods are:\n         * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n         * and `sortBy`\n         *\n         * @static\n         * @memberOf _\n         * @since 0.1.0\n         * @category Collection\n         * @param {Array|Object} collection The collection to iterate over.\n         * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n         * @param {*} [accumulator] The initial value.\n         * @returns {*} Returns the accumulated value.\n         * @see _.reduceRight\n         * @example\n         *\n         * _.reduce([1, 2], function(sum, n) {\n         *   return sum + n;\n         * }, 0);\n         * // => 3\n         *\n         * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n         *   (result[value] || (result[value] = [])).push(key);\n         *   return result;\n         * }, {});\n         * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n         */\n\n\n        function reduce(collection, iteratee, accumulator) {\n          var func = isArray(collection) ? arrayReduce : baseReduce,\n              initAccum = arguments.length < 3;\n          return func(collection, baseIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n        }\n        /**\n         * Creates a function that memoizes the result of `func`. If `resolver` is\n         * provided, it determines the cache key for storing the result based on the\n         * arguments provided to the memoized function. By default, the first argument\n         * provided to the memoized function is used as the map cache key. The `func`\n         * is invoked with the `this` binding of the memoized function.\n         *\n         * **Note:** The cache is exposed as the `cache` property on the memoized\n         * function. Its creation may be customized by replacing the `_.memoize.Cache`\n         * constructor with one whose instances implement the\n         * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n         * method interface of `delete`, `get`, `has`, and `set`.\n         *\n         * @static\n         * @memberOf _\n         * @since 0.1.0\n         * @category Function\n         * @param {Function} func The function to have its output memoized.\n         * @param {Function} [resolver] The function to resolve the cache key.\n         * @returns {Function} Returns the new memoized function.\n         * @example\n         *\n         * var object = { 'a': 1, 'b': 2 };\n         * var other = { 'c': 3, 'd': 4 };\n         *\n         * var values = _.memoize(_.values);\n         * values(object);\n         * // => [1, 2]\n         *\n         * values(other);\n         * // => [3, 4]\n         *\n         * object.a = 2;\n         * values(object);\n         * // => [1, 2]\n         *\n         * // Modify the result cache.\n         * values.cache.set(object, ['a', 'b']);\n         * values(object);\n         * // => ['a', 'b']\n         *\n         * // Replace `_.memoize.Cache`.\n         * _.memoize.Cache = WeakMap;\n         */\n\n\n        function memoize(func, resolver) {\n          if (typeof func != 'function' || resolver && typeof resolver != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n\n          var memoized = function memoized() {\n            var args = arguments,\n                key = resolver ? resolver.apply(this, args) : args[0],\n                cache = memoized.cache;\n\n            if (cache.has(key)) {\n              return cache.get(key);\n            }\n\n            var result = func.apply(this, args);\n            memoized.cache = cache.set(key, result);\n            return result;\n          };\n\n          memoized.cache = new (memoize.Cache || MapCache)();\n          return memoized;\n        } // Assign cache to `_.memoize`.\n\n\n        memoize.Cache = MapCache;\n        /**\n         * Performs a\n         * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n         * comparison between two values to determine if they are equivalent.\n         *\n         * @static\n         * @memberOf _\n         * @since 4.0.0\n         * @category Lang\n         * @param {*} value The value to compare.\n         * @param {*} other The other value to compare.\n         * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n         * @example\n         *\n         * var object = { 'a': 1 };\n         * var other = { 'a': 1 };\n         *\n         * _.eq(object, object);\n         * // => true\n         *\n         * _.eq(object, other);\n         * // => false\n         *\n         * _.eq('a', 'a');\n         * // => true\n         *\n         * _.eq('a', Object('a'));\n         * // => false\n         *\n         * _.eq(NaN, NaN);\n         * // => true\n         */\n\n        function eq(value, other) {\n          return value === other || value !== value && other !== other;\n        }\n        /**\n         * Checks if `value` is likely an `arguments` object.\n         *\n         * @static\n         * @memberOf _\n         * @since 0.1.0\n         * @category Lang\n         * @param {*} value The value to check.\n         * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n         *  else `false`.\n         * @example\n         *\n         * _.isArguments(function() { return arguments; }());\n         * // => true\n         *\n         * _.isArguments([1, 2, 3]);\n         * // => false\n         */\n\n\n        function isArguments(value) {\n          // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n          return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') && (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n        }\n        /**\n         * Checks if `value` is classified as an `Array` object.\n         *\n         * @static\n         * @memberOf _\n         * @since 0.1.0\n         * @category Lang\n         * @param {*} value The value to check.\n         * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n         * @example\n         *\n         * _.isArray([1, 2, 3]);\n         * // => true\n         *\n         * _.isArray(document.body.children);\n         * // => false\n         *\n         * _.isArray('abc');\n         * // => false\n         *\n         * _.isArray(_.noop);\n         * // => false\n         */\n\n\n        var isArray = Array.isArray;\n        /**\n         * Checks if `value` is array-like. A value is considered array-like if it's\n         * not a function and has a `value.length` that's an integer greater than or\n         * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n         *\n         * @static\n         * @memberOf _\n         * @since 4.0.0\n         * @category Lang\n         * @param {*} value The value to check.\n         * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n         * @example\n         *\n         * _.isArrayLike([1, 2, 3]);\n         * // => true\n         *\n         * _.isArrayLike(document.body.children);\n         * // => true\n         *\n         * _.isArrayLike('abc');\n         * // => true\n         *\n         * _.isArrayLike(_.noop);\n         * // => false\n         */\n\n        function isArrayLike(value) {\n          return value != null && isLength(value.length) && !isFunction(value);\n        }\n        /**\n         * This method is like `_.isArrayLike` except that it also checks if `value`\n         * is an object.\n         *\n         * @static\n         * @memberOf _\n         * @since 4.0.0\n         * @category Lang\n         * @param {*} value The value to check.\n         * @returns {boolean} Returns `true` if `value` is an array-like object,\n         *  else `false`.\n         * @example\n         *\n         * _.isArrayLikeObject([1, 2, 3]);\n         * // => true\n         *\n         * _.isArrayLikeObject(document.body.children);\n         * // => true\n         *\n         * _.isArrayLikeObject('abc');\n         * // => false\n         *\n         * _.isArrayLikeObject(_.noop);\n         * // => false\n         */\n\n\n        function isArrayLikeObject(value) {\n          return isObjectLike(value) && isArrayLike(value);\n        }\n        /**\n         * Checks if `value` is classified as a `Function` object.\n         *\n         * @static\n         * @memberOf _\n         * @since 0.1.0\n         * @category Lang\n         * @param {*} value The value to check.\n         * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n         * @example\n         *\n         * _.isFunction(_);\n         * // => true\n         *\n         * _.isFunction(/abc/);\n         * // => false\n         */\n\n\n        function isFunction(value) {\n          // The use of `Object#toString` avoids issues with the `typeof` operator\n          // in Safari 8-9 which returns 'object' for typed array and other constructors.\n          var tag = isObject(value) ? objectToString.call(value) : '';\n          return tag == funcTag || tag == genTag;\n        }\n        /**\n         * Checks if `value` is a valid array-like length.\n         *\n         * **Note:** This method is loosely based on\n         * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n         *\n         * @static\n         * @memberOf _\n         * @since 4.0.0\n         * @category Lang\n         * @param {*} value The value to check.\n         * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n         * @example\n         *\n         * _.isLength(3);\n         * // => true\n         *\n         * _.isLength(Number.MIN_VALUE);\n         * // => false\n         *\n         * _.isLength(Infinity);\n         * // => false\n         *\n         * _.isLength('3');\n         * // => false\n         */\n\n\n        function isLength(value) {\n          return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n        }\n        /**\n         * Checks if `value` is the\n         * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n         * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n         *\n         * @static\n         * @memberOf _\n         * @since 0.1.0\n         * @category Lang\n         * @param {*} value The value to check.\n         * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n         * @example\n         *\n         * _.isObject({});\n         * // => true\n         *\n         * _.isObject([1, 2, 3]);\n         * // => true\n         *\n         * _.isObject(_.noop);\n         * // => true\n         *\n         * _.isObject(null);\n         * // => false\n         */\n\n\n        function isObject(value) {\n          var type = typeof value;\n          return !!value && (type == 'object' || type == 'function');\n        }\n        /**\n         * Checks if `value` is object-like. A value is object-like if it's not `null`\n         * and has a `typeof` result of \"object\".\n         *\n         * @static\n         * @memberOf _\n         * @since 4.0.0\n         * @category Lang\n         * @param {*} value The value to check.\n         * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n         * @example\n         *\n         * _.isObjectLike({});\n         * // => true\n         *\n         * _.isObjectLike([1, 2, 3]);\n         * // => true\n         *\n         * _.isObjectLike(_.noop);\n         * // => false\n         *\n         * _.isObjectLike(null);\n         * // => false\n         */\n\n\n        function isObjectLike(value) {\n          return !!value && typeof value == 'object';\n        }\n        /**\n         * Checks if `value` is classified as a `Symbol` primitive or object.\n         *\n         * @static\n         * @memberOf _\n         * @since 4.0.0\n         * @category Lang\n         * @param {*} value The value to check.\n         * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n         * @example\n         *\n         * _.isSymbol(Symbol.iterator);\n         * // => true\n         *\n         * _.isSymbol('abc');\n         * // => false\n         */\n\n\n        function isSymbol(value) {\n          return typeof value == 'symbol' || isObjectLike(value) && objectToString.call(value) == symbolTag;\n        }\n        /**\n         * Checks if `value` is classified as a typed array.\n         *\n         * @static\n         * @memberOf _\n         * @since 3.0.0\n         * @category Lang\n         * @param {*} value The value to check.\n         * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n         * @example\n         *\n         * _.isTypedArray(new Uint8Array);\n         * // => true\n         *\n         * _.isTypedArray([]);\n         * // => false\n         */\n\n\n        var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n        /**\n         * Converts `value` to a string. An empty string is returned for `null`\n         * and `undefined` values. The sign of `-0` is preserved.\n         *\n         * @static\n         * @memberOf _\n         * @since 4.0.0\n         * @category Lang\n         * @param {*} value The value to process.\n         * @returns {string} Returns the string.\n         * @example\n         *\n         * _.toString(null);\n         * // => ''\n         *\n         * _.toString(-0);\n         * // => '-0'\n         *\n         * _.toString([1, 2, 3]);\n         * // => '1,2,3'\n         */\n\n        function toString(value) {\n          return value == null ? '' : baseToString(value);\n        }\n        /**\n         * Gets the value at `path` of `object`. If the resolved value is\n         * `undefined`, the `defaultValue` is returned in its place.\n         *\n         * @static\n         * @memberOf _\n         * @since 3.7.0\n         * @category Object\n         * @param {Object} object The object to query.\n         * @param {Array|string} path The path of the property to get.\n         * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n         * @returns {*} Returns the resolved value.\n         * @example\n         *\n         * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n         *\n         * _.get(object, 'a[0].b.c');\n         * // => 3\n         *\n         * _.get(object, ['a', '0', 'b', 'c']);\n         * // => 3\n         *\n         * _.get(object, 'a.b.c', 'default');\n         * // => 'default'\n         */\n\n\n        function get(object, path, defaultValue) {\n          var result = object == null ? undefined : baseGet(object, path);\n          return result === undefined ? defaultValue : result;\n        }\n        /**\n         * Checks if `path` is a direct or inherited property of `object`.\n         *\n         * @static\n         * @memberOf _\n         * @since 4.0.0\n         * @category Object\n         * @param {Object} object The object to query.\n         * @param {Array|string} path The path to check.\n         * @returns {boolean} Returns `true` if `path` exists, else `false`.\n         * @example\n         *\n         * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n         *\n         * _.hasIn(object, 'a');\n         * // => true\n         *\n         * _.hasIn(object, 'a.b');\n         * // => true\n         *\n         * _.hasIn(object, ['a', 'b']);\n         * // => true\n         *\n         * _.hasIn(object, 'b');\n         * // => false\n         */\n\n\n        function hasIn(object, path) {\n          return object != null && hasPath(object, path, baseHasIn);\n        }\n        /**\n         * Creates an array of the own enumerable property names of `object`.\n         *\n         * **Note:** Non-object values are coerced to objects. See the\n         * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n         * for more details.\n         *\n         * @static\n         * @since 0.1.0\n         * @memberOf _\n         * @category Object\n         * @param {Object} object The object to query.\n         * @returns {Array} Returns the array of property names.\n         * @example\n         *\n         * function Foo() {\n         *   this.a = 1;\n         *   this.b = 2;\n         * }\n         *\n         * Foo.prototype.c = 3;\n         *\n         * _.keys(new Foo);\n         * // => ['a', 'b'] (iteration order is not guaranteed)\n         *\n         * _.keys('hi');\n         * // => ['0', '1']\n         */\n\n\n        function keys(object) {\n          return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n        }\n        /**\n         * This method returns the first argument it receives.\n         *\n         * @static\n         * @since 0.1.0\n         * @memberOf _\n         * @category Util\n         * @param {*} value Any value.\n         * @returns {*} Returns `value`.\n         * @example\n         *\n         * var object = { 'a': 1 };\n         *\n         * console.log(_.identity(object) === object);\n         * // => true\n         */\n\n\n        function identity(value) {\n          return value;\n        }\n        /**\n         * Creates a function that returns the value at `path` of a given object.\n         *\n         * @static\n         * @memberOf _\n         * @since 2.4.0\n         * @category Util\n         * @param {Array|string} path The path of the property to get.\n         * @returns {Function} Returns the new accessor function.\n         * @example\n         *\n         * var objects = [\n         *   { 'a': { 'b': 2 } },\n         *   { 'a': { 'b': 1 } }\n         * ];\n         *\n         * _.map(objects, _.property('a.b'));\n         * // => [2, 1]\n         *\n         * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n         * // => [1, 2]\n         */\n\n\n        function property(path) {\n          return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n        }\n\n        module.exports = reduce;\n        /* WEBPACK VAR INJECTION */\n      }).call(exports, function () {\n        return this;\n      }(), __webpack_require__(34)(module));\n      /***/\n    },\n    /* 29 */\n\n    /***/\n    function (module, exports) {\n      'use strict';\n      /* eslint-disable no-unused-vars */\n\n      var hasOwnProperty = Object.prototype.hasOwnProperty;\n      var propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\n      function toObject(val) {\n        if (val === null || val === undefined) {\n          throw new TypeError('Object.assign cannot be called with null or undefined');\n        }\n\n        return Object(val);\n      }\n\n      function shouldUseNative() {\n        try {\n          if (!Object.assign) {\n            return false;\n          } // Detect buggy property enumeration order in older V8 versions.\n          // https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\n\n          var test1 = new String('abc'); // eslint-disable-line\n\n          test1[5] = 'de';\n\n          if (Object.getOwnPropertyNames(test1)[0] === '5') {\n            return false;\n          } // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\n\n          var test2 = {};\n\n          for (var i = 0; i < 10; i++) {\n            test2['_' + String.fromCharCode(i)] = i;\n          }\n\n          var order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n            return test2[n];\n          });\n\n          if (order2.join('') !== '0123456789') {\n            return false;\n          } // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\n\n          var test3 = {};\n          'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n            test3[letter] = letter;\n          });\n\n          if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {\n            return false;\n          }\n\n          return true;\n        } catch (e) {\n          // We don't expect any of the above to throw, but better to be safe.\n          return false;\n        }\n      }\n\n      module.exports = shouldUseNative() ? Object.assign : function (target, source) {\n        var from;\n        var to = toObject(target);\n        var symbols;\n\n        for (var s = 1; s < arguments.length; s++) {\n          from = Object(arguments[s]);\n\n          for (var key in from) {\n            if (hasOwnProperty.call(from, key)) {\n              to[key] = from[key];\n            }\n          }\n\n          if (Object.getOwnPropertySymbols) {\n            symbols = Object.getOwnPropertySymbols(from);\n\n            for (var i = 0; i < symbols.length; i++) {\n              if (propIsEnumerable.call(from, symbols[i])) {\n                to[symbols[i]] = from[symbols[i]];\n              }\n            }\n          }\n        }\n\n        return to;\n      };\n      /***/\n    },\n    /* 30 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict'; //This file contains the ES6 extensions to the core Promises/A+ API\n\n      var Promise = __webpack_require__(8);\n\n      module.exports = Promise;\n      /* Static Functions */\n\n      var TRUE = valuePromise(true);\n      var FALSE = valuePromise(false);\n      var NULL = valuePromise(null);\n      var UNDEFINED = valuePromise(undefined);\n      var ZERO = valuePromise(0);\n      var EMPTYSTRING = valuePromise('');\n\n      function valuePromise(value) {\n        var p = new Promise(Promise._61);\n        p._81 = 1;\n        p._65 = value;\n        return p;\n      }\n\n      Promise.resolve = function (value) {\n        if (value instanceof Promise) return value;\n        if (value === null) return NULL;\n        if (value === undefined) return UNDEFINED;\n        if (value === true) return TRUE;\n        if (value === false) return FALSE;\n        if (value === 0) return ZERO;\n        if (value === '') return EMPTYSTRING;\n\n        if (typeof value === 'object' || typeof value === 'function') {\n          try {\n            var then = value.then;\n\n            if (typeof then === 'function') {\n              return new Promise(then.bind(value));\n            }\n          } catch (ex) {\n            return new Promise(function (resolve, reject) {\n              reject(ex);\n            });\n          }\n        }\n\n        return valuePromise(value);\n      };\n\n      Promise.all = function (arr) {\n        var args = Array.prototype.slice.call(arr);\n        return new Promise(function (resolve, reject) {\n          if (args.length === 0) return resolve([]);\n          var remaining = args.length;\n\n          function res(i, val) {\n            if (val && (typeof val === 'object' || typeof val === 'function')) {\n              if (val instanceof Promise && val.then === Promise.prototype.then) {\n                while (val._81 === 3) {\n                  val = val._65;\n                }\n\n                if (val._81 === 1) return res(i, val._65);\n                if (val._81 === 2) reject(val._65);\n                val.then(function (val) {\n                  res(i, val);\n                }, reject);\n                return;\n              } else {\n                var then = val.then;\n\n                if (typeof then === 'function') {\n                  var p = new Promise(then.bind(val));\n                  p.then(function (val) {\n                    res(i, val);\n                  }, reject);\n                  return;\n                }\n              }\n            }\n\n            args[i] = val;\n\n            if (--remaining === 0) {\n              resolve(args);\n            }\n          }\n\n          for (var i = 0; i < args.length; i++) {\n            res(i, args[i]);\n          }\n        });\n      };\n\n      Promise.reject = function (value) {\n        return new Promise(function (resolve, reject) {\n          reject(value);\n        });\n      };\n\n      Promise.race = function (values) {\n        return new Promise(function (resolve, reject) {\n          values.forEach(function (value) {\n            Promise.resolve(value).then(resolve, reject);\n          });\n        });\n      };\n      /* Prototype Methods */\n\n\n      Promise.prototype['catch'] = function (onRejected) {\n        return this.then(null, onRejected);\n      };\n      /***/\n\n    },\n    /* 31 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      var Promise = __webpack_require__(8);\n\n      var DEFAULT_WHITELIST = [ReferenceError, TypeError, RangeError];\n      var enabled = false;\n      exports.disable = disable;\n\n      function disable() {\n        enabled = false;\n        Promise._10 = null;\n        Promise._97 = null;\n      }\n\n      exports.enable = enable;\n\n      function enable(options) {\n        options = options || {};\n        if (enabled) disable();\n        enabled = true;\n        var id = 0;\n        var displayId = 0;\n        var rejections = {};\n\n        Promise._10 = function (promise) {\n          if (promise._81 === 2 && // IS REJECTED\n          rejections[promise._72]) {\n            if (rejections[promise._72].logged) {\n              onHandled(promise._72);\n            } else {\n              clearTimeout(rejections[promise._72].timeout);\n            }\n\n            delete rejections[promise._72];\n          }\n        };\n\n        Promise._97 = function (promise, err) {\n          if (promise._45 === 0) {\n            // not yet handled\n            promise._72 = id++;\n            rejections[promise._72] = {\n              displayId: null,\n              error: err,\n              timeout: setTimeout(onUnhandled.bind(null, promise._72), // For reference errors and type errors, this almost always\n              // means the programmer made a mistake, so log them after just\n              // 100ms\n              // otherwise, wait 2 seconds to see if they get handled\n              matchWhitelist(err, DEFAULT_WHITELIST) ? 100 : 2000),\n              logged: false\n            };\n          }\n        };\n\n        function onUnhandled(id) {\n          if (options.allRejections || matchWhitelist(rejections[id].error, options.whitelist || DEFAULT_WHITELIST)) {\n            rejections[id].displayId = displayId++;\n\n            if (options.onUnhandled) {\n              rejections[id].logged = true;\n              options.onUnhandled(rejections[id].displayId, rejections[id].error);\n            } else {\n              rejections[id].logged = true;\n              logError(rejections[id].displayId, rejections[id].error);\n            }\n          }\n        }\n\n        function onHandled(id) {\n          if (rejections[id].logged) {\n            if (options.onHandled) {\n              options.onHandled(rejections[id].displayId, rejections[id].error);\n            } else if (!rejections[id].onUnhandled) {\n              console.warn('Promise Rejection Handled (id: ' + rejections[id].displayId + '):');\n              console.warn('  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' + rejections[id].displayId + '.');\n            }\n          }\n        }\n      }\n\n      function logError(id, error) {\n        console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n        var errStr = (error && (error.stack || error)) + '';\n        errStr.split('\\n').forEach(function (line) {\n          console.warn('  ' + line);\n        });\n      }\n\n      function matchWhitelist(error, list) {\n        return list.some(function (cls) {\n          return error instanceof cls;\n        });\n      }\n      /***/\n\n    },\n    /* 32 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      /**\n       * Copyright 2013-present, Facebook, Inc.\n       * All rights reserved.\n       *\n       * This source code is licensed under the BSD-style license found in the\n       * LICENSE file in the root directory of this source tree. An additional grant\n       * of patent rights can be found in the PATENTS file in the same directory.\n       */\n      'use strict';\n\n      var emptyFunction = __webpack_require__(26);\n\n      var invariant = __webpack_require__(27);\n\n      var ReactPropTypesSecret = __webpack_require__(33);\n\n      module.exports = function () {\n        function shim(props, propName, componentName, location, propFullName, secret) {\n          if (secret === ReactPropTypesSecret) {\n            // It is still safe when called from React.\n            return;\n          }\n\n          invariant(false, 'Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');\n        }\n\n        ;\n        shim.isRequired = shim;\n\n        function getShim() {\n          return shim;\n        }\n\n        ; // Important!\n        // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n\n        var ReactPropTypes = {\n          array: shim,\n          bool: shim,\n          func: shim,\n          number: shim,\n          object: shim,\n          string: shim,\n          symbol: shim,\n          any: shim,\n          arrayOf: getShim,\n          element: shim,\n          instanceOf: getShim,\n          node: shim,\n          objectOf: getShim,\n          oneOf: getShim,\n          oneOfType: getShim,\n          shape: getShim\n        };\n        ReactPropTypes.checkPropTypes = emptyFunction;\n        ReactPropTypes.PropTypes = ReactPropTypes;\n        return ReactPropTypes;\n      };\n      /***/\n\n    },\n    /* 33 */\n\n    /***/\n    function (module, exports) {\n      /**\n       * Copyright 2013-present, Facebook, Inc.\n       * All rights reserved.\n       *\n       * This source code is licensed under the BSD-style license found in the\n       * LICENSE file in the root directory of this source tree. An additional grant\n       * of patent rights can be found in the PATENTS file in the same directory.\n       */\n      'use strict';\n\n      var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n      module.exports = ReactPropTypesSecret;\n      /***/\n    },\n    /* 34 */\n\n    /***/\n    function (module, exports) {\n      module.exports = function (module) {\n        if (!module.webpackPolyfill) {\n          module.deprecate = function () {};\n\n          module.paths = []; // module.parent = undefined by default\n\n          module.children = [];\n          module.webpackPolyfill = 1;\n        }\n\n        return module;\n      };\n      /***/\n\n    },\n    /* 35 */\n\n    /***/\n    function (module, exports) {\n      (function (self) {\n        'use strict';\n\n        if (self.fetch) {\n          return;\n        }\n\n        var support = {\n          searchParams: 'URLSearchParams' in self,\n          iterable: 'Symbol' in self && 'iterator' in Symbol,\n          blob: 'FileReader' in self && 'Blob' in self && function () {\n            try {\n              new Blob();\n              return true;\n            } catch (e) {\n              return false;\n            }\n          }(),\n          formData: 'FormData' in self,\n          arrayBuffer: 'ArrayBuffer' in self\n        };\n\n        function normalizeName(name) {\n          if (typeof name !== 'string') {\n            name = String(name);\n          }\n\n          if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n            throw new TypeError('Invalid character in header field name');\n          }\n\n          return name.toLowerCase();\n        }\n\n        function normalizeValue(value) {\n          if (typeof value !== 'string') {\n            value = String(value);\n          }\n\n          return value;\n        } // Build a destructive iterator for the value list\n\n\n        function iteratorFor(items) {\n          var iterator = {\n            next: function next() {\n              var value = items.shift();\n              return {\n                done: value === undefined,\n                value: value\n              };\n            }\n          };\n\n          if (support.iterable) {\n            iterator[Symbol.iterator] = function () {\n              return iterator;\n            };\n          }\n\n          return iterator;\n        }\n\n        function Headers(headers) {\n          this.map = {};\n\n          if (headers instanceof Headers) {\n            headers.forEach(function (value, name) {\n              this.append(name, value);\n            }, this);\n          } else if (headers) {\n            Object.getOwnPropertyNames(headers).forEach(function (name) {\n              this.append(name, headers[name]);\n            }, this);\n          }\n        }\n\n        Headers.prototype.append = function (name, value) {\n          name = normalizeName(name);\n          value = normalizeValue(value);\n          var list = this.map[name];\n\n          if (!list) {\n            list = [];\n            this.map[name] = list;\n          }\n\n          list.push(value);\n        };\n\n        Headers.prototype['delete'] = function (name) {\n          delete this.map[normalizeName(name)];\n        };\n\n        Headers.prototype.get = function (name) {\n          var values = this.map[normalizeName(name)];\n          return values ? values[0] : null;\n        };\n\n        Headers.prototype.getAll = function (name) {\n          return this.map[normalizeName(name)] || [];\n        };\n\n        Headers.prototype.has = function (name) {\n          return this.map.hasOwnProperty(normalizeName(name));\n        };\n\n        Headers.prototype.set = function (name, value) {\n          this.map[normalizeName(name)] = [normalizeValue(value)];\n        };\n\n        Headers.prototype.forEach = function (callback, thisArg) {\n          Object.getOwnPropertyNames(this.map).forEach(function (name) {\n            this.map[name].forEach(function (value) {\n              callback.call(thisArg, value, name, this);\n            }, this);\n          }, this);\n        };\n\n        Headers.prototype.keys = function () {\n          var items = [];\n          this.forEach(function (value, name) {\n            items.push(name);\n          });\n          return iteratorFor(items);\n        };\n\n        Headers.prototype.values = function () {\n          var items = [];\n          this.forEach(function (value) {\n            items.push(value);\n          });\n          return iteratorFor(items);\n        };\n\n        Headers.prototype.entries = function () {\n          var items = [];\n          this.forEach(function (value, name) {\n            items.push([name, value]);\n          });\n          return iteratorFor(items);\n        };\n\n        if (support.iterable) {\n          Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n        }\n\n        function consumed(body) {\n          if (body.bodyUsed) {\n            return Promise.reject(new TypeError('Already read'));\n          }\n\n          body.bodyUsed = true;\n        }\n\n        function fileReaderReady(reader) {\n          return new Promise(function (resolve, reject) {\n            reader.onload = function () {\n              resolve(reader.result);\n            };\n\n            reader.onerror = function () {\n              reject(reader.error);\n            };\n          });\n        }\n\n        function readBlobAsArrayBuffer(blob) {\n          var reader = new FileReader();\n          reader.readAsArrayBuffer(blob);\n          return fileReaderReady(reader);\n        }\n\n        function readBlobAsText(blob) {\n          var reader = new FileReader();\n          reader.readAsText(blob);\n          return fileReaderReady(reader);\n        }\n\n        function Body() {\n          this.bodyUsed = false;\n\n          this._initBody = function (body) {\n            this._bodyInit = body;\n\n            if (typeof body === 'string') {\n              this._bodyText = body;\n            } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n              this._bodyBlob = body;\n            } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n              this._bodyFormData = body;\n            } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n              this._bodyText = body.toString();\n            } else if (!body) {\n              this._bodyText = '';\n            } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {// Only support ArrayBuffers for POST method.\n              // Receiving ArrayBuffers happens via Blobs, instead.\n            } else {\n              throw new Error('unsupported BodyInit type');\n            }\n\n            if (!this.headers.get('content-type')) {\n              if (typeof body === 'string') {\n                this.headers.set('content-type', 'text/plain;charset=UTF-8');\n              } else if (this._bodyBlob && this._bodyBlob.type) {\n                this.headers.set('content-type', this._bodyBlob.type);\n              } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n                this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n              }\n            }\n          };\n\n          if (support.blob) {\n            this.blob = function () {\n              var rejected = consumed(this);\n\n              if (rejected) {\n                return rejected;\n              }\n\n              if (this._bodyBlob) {\n                return Promise.resolve(this._bodyBlob);\n              } else if (this._bodyFormData) {\n                throw new Error('could not read FormData body as blob');\n              } else {\n                return Promise.resolve(new Blob([this._bodyText]));\n              }\n            };\n\n            this.arrayBuffer = function () {\n              return this.blob().then(readBlobAsArrayBuffer);\n            };\n\n            this.text = function () {\n              var rejected = consumed(this);\n\n              if (rejected) {\n                return rejected;\n              }\n\n              if (this._bodyBlob) {\n                return readBlobAsText(this._bodyBlob);\n              } else if (this._bodyFormData) {\n                throw new Error('could not read FormData body as text');\n              } else {\n                return Promise.resolve(this._bodyText);\n              }\n            };\n          } else {\n            this.text = function () {\n              var rejected = consumed(this);\n              return rejected ? rejected : Promise.resolve(this._bodyText);\n            };\n          }\n\n          if (support.formData) {\n            this.formData = function () {\n              return this.text().then(decode);\n            };\n          }\n\n          this.json = function () {\n            return this.text().then(JSON.parse);\n          };\n\n          return this;\n        } // HTTP methods whose capitalization should be normalized\n\n\n        var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n        function normalizeMethod(method) {\n          var upcased = method.toUpperCase();\n          return methods.indexOf(upcased) > -1 ? upcased : method;\n        }\n\n        function Request(input, options) {\n          options = options || {};\n          var body = options.body;\n\n          if (Request.prototype.isPrototypeOf(input)) {\n            if (input.bodyUsed) {\n              throw new TypeError('Already read');\n            }\n\n            this.url = input.url;\n            this.credentials = input.credentials;\n\n            if (!options.headers) {\n              this.headers = new Headers(input.headers);\n            }\n\n            this.method = input.method;\n            this.mode = input.mode;\n\n            if (!body) {\n              body = input._bodyInit;\n              input.bodyUsed = true;\n            }\n          } else {\n            this.url = input;\n          }\n\n          this.credentials = options.credentials || this.credentials || 'omit';\n\n          if (options.headers || !this.headers) {\n            this.headers = new Headers(options.headers);\n          }\n\n          this.method = normalizeMethod(options.method || this.method || 'GET');\n          this.mode = options.mode || this.mode || null;\n          this.referrer = null;\n\n          if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n            throw new TypeError('Body not allowed for GET or HEAD requests');\n          }\n\n          this._initBody(body);\n        }\n\n        Request.prototype.clone = function () {\n          return new Request(this);\n        };\n\n        function decode(body) {\n          var form = new FormData();\n          body.trim().split('&').forEach(function (bytes) {\n            if (bytes) {\n              var split = bytes.split('=');\n              var name = split.shift().replace(/\\+/g, ' ');\n              var value = split.join('=').replace(/\\+/g, ' ');\n              form.append(decodeURIComponent(name), decodeURIComponent(value));\n            }\n          });\n          return form;\n        }\n\n        function headers(xhr) {\n          var head = new Headers();\n          var pairs = (xhr.getAllResponseHeaders() || '').trim().split('\\n');\n          pairs.forEach(function (header) {\n            var split = header.trim().split(':');\n            var key = split.shift().trim();\n            var value = split.join(':').trim();\n            head.append(key, value);\n          });\n          return head;\n        }\n\n        Body.call(Request.prototype);\n\n        function Response(bodyInit, options) {\n          if (!options) {\n            options = {};\n          }\n\n          this.type = 'default';\n          this.status = options.status;\n          this.ok = this.status >= 200 && this.status < 300;\n          this.statusText = options.statusText;\n          this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers);\n          this.url = options.url || '';\n\n          this._initBody(bodyInit);\n        }\n\n        Body.call(Response.prototype);\n\n        Response.prototype.clone = function () {\n          return new Response(this._bodyInit, {\n            status: this.status,\n            statusText: this.statusText,\n            headers: new Headers(this.headers),\n            url: this.url\n          });\n        };\n\n        Response.error = function () {\n          var response = new Response(null, {\n            status: 0,\n            statusText: ''\n          });\n          response.type = 'error';\n          return response;\n        };\n\n        var redirectStatuses = [301, 302, 303, 307, 308];\n\n        Response.redirect = function (url, status) {\n          if (redirectStatuses.indexOf(status) === -1) {\n            throw new RangeError('Invalid status code');\n          }\n\n          return new Response(null, {\n            status: status,\n            headers: {\n              location: url\n            }\n          });\n        };\n\n        self.Headers = Headers;\n        self.Request = Request;\n        self.Response = Response;\n\n        self.fetch = function (input, init) {\n          return new Promise(function (resolve, reject) {\n            var request;\n\n            if (Request.prototype.isPrototypeOf(input) && !init) {\n              request = input;\n            } else {\n              request = new Request(input, init);\n            }\n\n            var xhr = new XMLHttpRequest();\n\n            function responseURL() {\n              if ('responseURL' in xhr) {\n                return xhr.responseURL;\n              } // Avoid security warnings on getResponseHeader when not allowed by CORS\n\n\n              if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n                return xhr.getResponseHeader('X-Request-URL');\n              }\n\n              return;\n            }\n\n            xhr.onload = function () {\n              var options = {\n                status: xhr.status,\n                statusText: xhr.statusText,\n                headers: headers(xhr),\n                url: responseURL()\n              };\n              var body = 'response' in xhr ? xhr.response : xhr.responseText;\n              resolve(new Response(body, options));\n            };\n\n            xhr.onerror = function () {\n              reject(new TypeError('Network request failed'));\n            };\n\n            xhr.ontimeout = function () {\n              reject(new TypeError('Network request failed'));\n            };\n\n            xhr.open(request.method, request.url, true);\n\n            if (request.credentials === 'include') {\n              xhr.withCredentials = true;\n            }\n\n            if ('responseType' in xhr && support.blob) {\n              xhr.responseType = 'blob';\n            }\n\n            request.headers.forEach(function (value, name) {\n              xhr.setRequestHeader(name, value);\n            });\n            xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n          });\n        };\n\n        self.fetch.polyfill = true;\n      })(typeof self !== 'undefined' ? self : this);\n      /***/\n\n    }\n    /******/\n    ])\n  );\n});\n\n;","map":null,"metadata":{},"sourceType":"script"}