{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Jason\\\\Desktop\\\\skarpiez\\\\skarpiez\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Jason\\\\Desktop\\\\skarpiez\\\\skarpiez\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Jason\\\\Desktop\\\\skarpiez\\\\skarpiez\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Jason\\\\Desktop\\\\skarpiez\\\\skarpiez\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"C:\\\\Users\\\\Jason\\\\Desktop\\\\skarpiez\\\\skarpiez\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Jason\\\\Desktop\\\\skarpiez\\\\skarpiez\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jason\\\\Desktop\\\\skarpiez\\\\skarpiez\\\\src\\\\pages\\\\Visual.js\";\nimport React, { Component } from 'react'; // import logo from '../logo.svg';\n//import logo from './logo2.png'\n\nimport '../css/Visual.css';\nimport { Graph } from 'react-d3-graph';\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from \"react-contextmenu\";\nimport { hideContext } from \"../js/hideContext\";\nimport { unhideContext } from \"../js/hideContext\";\n\nvar fs = require('fs');\n\nvar d3 = require('d3');\n\nvar mouseX = 0;\nvar mouseY = 0; // graph payload (with minimalist structure)\n// const data = {\n//     nodes: [{ id: 'Harry', color: \"lightgreen\", size: 1200}, { id: 'Sally', size: 400, color: \"red\" }, { id: 'Alice', size: 650, color: \"blue\" }],\n//     links: [{ source: 'Harry', target: 'Sally' }, { source: 'Harry', target: 'Alice' }]\n// };\n// the graph configuration, you only need to pass down properties\n// that you want to override, otherwise default ones will be used\n\nvar myConfig = {\n  automaticRearrangeAfterDropNode: true,\n  collapsible: false,\n  directed: true,\n  // focusAnimationDuration: 0.25,\n  // focusZoom: 1,\n  highlightOpacity: 1,\n  linkHighlightBehavior: false,\n  maxZoom: 8,\n  minZoom: 0.1,\n  nodeHighlightBehavior: false,\n  panAndZoom: false,\n  staticGraph: false,\n  d3: {\n    alphaTarget: 0.05,\n    gravity: -500,\n    linkLength: 100,\n    linkStrength: 1\n  },\n  node: {\n    renderLabel: true,\n    fontSize: \"18px\",\n    // color: '#8CDCDA',\n    // size: 400,\n    svg: \"\",\n    highlightStrokeColor: 'blue'\n  },\n  link: {\n    fontWeight: \"normal\",\n    // type: \"CURVE_SMOOTH\",\n    highlightColor: 'lightblue'\n  }\n};\n\nvar file = require(\"../JSON/stuff.json\");\n\nvar flag = false;\nvar newData = {};\nvar newLinks = {};\nvar top = 5;\nexport var Visual =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Visual, _Component);\n\n  _createClass(Visual, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {// console.log(file);\n    }\n  }]);\n\n  function Visual(props) {\n    var _this;\n\n    _classCallCheck(this, Visual);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Visual).call(this, props));\n    _this.state = {\n      display: 'none',\n      spaceHovered: true,\n      nodeHovered: false,\n      modalTop: mouseY,\n      modalLeft: mouseX,\n      modalDisplay: 'none',\n      modalOpacity: 0,\n      data: {\n        nodes: [{\n          id: 'Harry',\n          color: \"lightgreen\",\n          size: 1200\n        }, {\n          id: 'Sally',\n          size: 400,\n          color: \"red\"\n        }, {\n          id: 'Alice',\n          size: 650,\n          color: \"blue\"\n        }],\n        links: [{\n          source: 'Harry',\n          target: 'Sally'\n        }, {\n          source: 'Harry',\n          target: 'Alice'\n        }]\n      } // graph event callbacks\n\n    };\n\n    _this.onClickGraph = function () {\n      hideContext(); // window.alert(`Clicked the graph background`);\n    };\n\n    _this.handleClick = function (e, data) {\n      console.log(data.foo);\n      console.log(\"HWLEALSEJSA\");\n    };\n\n    _this.onClickNode = function (nodeId) {};\n\n    _this.onRightClickNode = function (event, nodeId) {\n      unhideContext(); // window.alert(`Right clicked node ${nodeId}`);\n    };\n\n    _this.onMouseOverNode = function (nodeId) {// this.setState({\n      //     spaceHovered: false,\n      //     nodeHovered: true,\n      // })\n      // console.log(file);\n      // window.alert(`Mouse over node ${nodeId}`);\n    };\n\n    _this.onMouseOutNode = function (nodeId) {// this.setState({\n      //     nodeHovered: false,\n      //     spaceHovered: true,\n      // })\n    };\n\n    _this.onClickLink = function (source, target) {// window.alert(`Clicked link between ${source} and ${target}`);\n    };\n\n    _this.onRightClickLink = function (event, source, target) {// window.alert(`Right clicked link between ${source} and ${target}`);\n    };\n\n    _this.onMouseOverLink = function (source, target) {// window.alert(`Mouse over in link between ${source} and ${target}`);\n    };\n\n    _this.onMouseOutLink = function (source, target) {// window.alert(`Mouse out link between ${source} and ${target}`);\n    };\n\n    return _this;\n  }\n\n  _createClass(Visual, [{\n    key: \"render\",\n    value: function render(state) {\n      var _ref;\n\n      return React.createElement(\"div\", {\n        onMouseMove: function onMouseMove(e) {\n          mouseX = e.clientX;\n          mouseY = e.clientY;\n          console.log(mouseX);\n          console.log(mouseY);\n        },\n        className: \"well\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(ContextMenuTrigger, {\n        id: \"some1\",\n        disable: !this.state.spaceHovered,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(ContextMenuTrigger, {\n        id: \"some\",\n        disable: !this.state.nodeHovered,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(Graph, {\n        id: \"graph-id\" // id is mandatory, if no id is defined rd3g will throw an error\n        ,\n        className: \"some\",\n        data: this.state.data,\n        config: myConfig,\n        onClickNode: this.onClickNode,\n        onRightClickNode: this.onRightClickNode,\n        onClickGraph: this.onClickGraph,\n        onClickLink: this.onClickLink,\n        onRightClickLink: this.onRightClickLink,\n        onMouseOverNode: this.onMouseOverNode,\n        onMouseOutNode: this.onMouseOutNode,\n        onMouseOverLink: this.onMouseOverLink,\n        onMouseOutLink: this.onMouseOutLink,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }), \";\")), React.createElement(\"div\", {\n        style: (_ref = {\n          position: \"absolute\",\n          top: this.state.modalTop,\n          right: 0,\n          left: this.state.modalLeft\n        }, _defineProperty(_ref, \"right\", 0), _defineProperty(_ref, \"width\", 200), _defineProperty(_ref, \"height\", 200), _defineProperty(_ref, \"display\", this.state.modalDisplay), _defineProperty(_ref, \"backgroundColor\", \"yellow\"), _defineProperty(_ref, \"opacity\", this.state.modalOpacity), _ref),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }), React.createElement(ContextMenu, {\n        id: \"some\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        data: {\n          foo: 'bar'\n        },\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, \"ContextMenu Item 1SAP\"), React.createElement(MenuItem, {\n        data: {\n          foo: 'bar'\n        },\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"ContextMenu Item 2\"), React.createElement(MenuItem, {\n        divider: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }), React.createElement(MenuItem, {\n        data: {\n          foo: 'bar'\n        },\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"ContextMenu Item 3\")), React.createElement(ContextMenu, {\n        id: \"some1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        data: {\n          foo: 'bar'\n        },\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"ContextMenu Item 1FART\"), React.createElement(MenuItem, {\n        data: {\n          foo: 'bar'\n        },\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, \"ContextMenu Item 2\"), React.createElement(MenuItem, {\n        divider: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }), React.createElement(MenuItem, {\n        data: {\n          foo: 'bar'\n        },\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, \"ContextMenu Item 3\")));\n    }\n  }]);\n\n  return Visual;\n}(Component); // const myConfig = {\n//         \"automaticRearrangeAfterDropNode\": true,\n//         \"collapsible\": false,\n//         \"directed\": true,\n//         \"focusAnimationDuration\": 0.75,\n//         \"focusZoom\": 1,\n//         \"highlightDegree\": 1,\n//         \"highlightOpacity\": 1,\n//         \"linkHighlightBehavior\": false,\n//         \"maxZoom\": 8,\n//         \"minZoom\": 0.1,\n//         \"nodeHighlightBehavior\": false,\n//         \"panAndZoom\": false,\n//         \"staticGraph\": false,\n//         \"d3\": {\n//           \"alphaTarget\": 0.05,\n//           \"gravity\": -100,\n//           \"linkLength\": 100,\n//           \"linkStrength\": 1\n//         },\n//         \"node\": {\n//           \"color\": \"#d3d3d3\",\n//           \"fontColor\": \"black\",\n//           \"fontSize\": 8,\n//           \"fontWeight\": \"normal\",\n//           \"highlightColor\": \"SAME\",\n//           \"highlightFontSize\": 8,\n//           \"highlightFontWeight\": \"normal\",\n//           \"highlightStrokeColor\": \"SAME\",\n//           \"highlightStrokeWidth\": \"SAME\",\n//           \"labelProperty\": \"id\",\n//           \"mouseCursor\": \"pointer\",\n//           \"opacity\": 1,\n//           \"renderLabel\": true,\n//           \"size\": 200,\n//           \"strokeColor\": \"none\",\n//           \"strokeWidth\": 1.5,\n//           \"svg\": \"\",\n//           \"symbolType\": \"circle\"\n//         },\n//         \"link\": {\n//           \"color\": \"#d3d3d3\",\n//           \"fontColor\": \"black\",\n//           \"fontSize\": 8,\n//           \"fontWeight\": \"normal\",\n//           \"highlightColor\": \"#d3d3d3\",\n//           \"highlightFontSize\": 8,\n//           \"highlightFontWeight\": \"normal\",\n//           \"labelProperty\": \"label\",\n//           \"mouseCursor\": \"pointer\",\n//           \"opacity\": 1,\n//           \"renderLabel\": false,\n//           \"semanticStrokeWidth\": false,\n//           \"strokeWidth\": 1.5\n//         }\n// }\n// if(this.state.modalDisplay === 'none'){\n//     this.setState({\n//         modalTop: mouseY,\n//         modalLeft: mouseX,\n//         modalDisplay: '',\n//         modalOpacity: 1,\n//     })\n// }\n// else{\n//     this.setState({\n//         modalTop: mouseY,\n//         modalLeft: mouseX,\n//         modalDisplay: 'none',\n//         modalOpacity: 0,\n//     })\n// }\n// if(top != 0){\n//     var link = { source: \"\", target: \"\" };\n//     if(!flag){\n//         newData = {\n//             nodes: [{ id: 'Harry', color: \"lightgreen\", size: 1200}, { id: 'Sally', size: 400, color: \"red\" }, { id: 'Alice', size: 650, color: \"blue\" }, { id: 'Jason', size: 950, color: \"yellow\" }],\n//             links: [{ source: 'Harry', target: 'Sally' }, { source: 'Harry', target: 'Alice' }, { source: 'Jason', target: 'Sally'}]\n//         }\n//         flag = true;\n//     }\n//     else{\n//         var x = Math.floor(Math.random() * 4) + 1\n//         var y = Math.floor(Math.random() * 4) + 1\n//         var obj = { id: 'Harry', color: \"lightgreen\", size: 1200}\n//         if(x === 1){ link.source='Vibekatcher'; obj={ id: \"Vibekatcher\", size: 800 }} else if(x === 2) { link.source='Jdaflame'; obj={ id: \"Jdaflame\", size: 800 }} else if(x === 3) { link.source='Yoozer'; obj={ id: \"Yoozer\", size: 400 }} else if(x === 4){ link.source='Future'; obj={ id: \"Future\", size: 500 }}\n//         if(y === 1){ link.target='Sally'; obj.color = \"blue\" } else if(y === 2) {link.target='Harry';   obj.color = \"green\"} else if(y === 3) {link.target='Alice';   obj.color = \"yellow\"} else if(y === 4){link.target='Jason';   obj.color = \"red\"}\n//         //console.log(obj);\n//         newData.nodes.push(obj);\n//         newData.links.push(link);\n//     }\n//     console.log(newData.nodes);\n//     // var newData = {\n//     //     nodes: [{ id: 'Harry', color: \"lightgreen\", size: 1200}, { id: 'Sally', size: 400, color: \"red\" }, { id: 'Alice', size: 650, color: \"blue\" }, { id: 'Jason', size: 950, color: \"yellow\" }],\n//     //     links: [{ source: 'Harry', target: 'Sally' }, { source: 'Harry', target: 'Alice' }, { source: 'Jason', target: 'Sally'}]\n//     // }\n//     this.setState({\n//         data: newData,\n//         links: newLinks\n//     })\n//     console.log(this.state.modalTop + \"hello\");\n//     console.log(this.state.modalLeft + \"hello\");\n//     top--;\n// }\n// modalStyle.left = mouseX;\n// modalStyle.top = mouseY;\n// console.log(modalStyle.left);\n// console.log(modalStyle.top);\n// console.log(event.clientX);\n// window.alert(`Clicked node ${nodeId}`);","map":{"version":3,"sources":["C:\\Users\\Jason\\Desktop\\skarpiez\\skarpiez\\src\\pages\\Visual.js"],"names":["React","Component","Graph","ContextMenu","MenuItem","ContextMenuTrigger","hideContext","unhideContext","fs","require","d3","mouseX","mouseY","myConfig","automaticRearrangeAfterDropNode","collapsible","directed","highlightOpacity","linkHighlightBehavior","maxZoom","minZoom","nodeHighlightBehavior","panAndZoom","staticGraph","alphaTarget","gravity","linkLength","linkStrength","node","renderLabel","fontSize","svg","highlightStrokeColor","link","fontWeight","highlightColor","file","flag","newData","newLinks","top","Visual","props","state","display","spaceHovered","nodeHovered","modalTop","modalLeft","modalDisplay","modalOpacity","data","nodes","id","color","size","links","source","target","onClickGraph","handleClick","e","console","log","foo","onClickNode","nodeId","onRightClickNode","event","onMouseOverNode","onMouseOutNode","onClickLink","onRightClickLink","onMouseOverLink","onMouseOutLink","clientX","clientY","position","right","left"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;AACA;;AACA,OAAO,mBAAP;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,kBAAhC,QAA0D,mBAA1D;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,SAASC,aAAT,QAA8B,mBAA9B;;AAGA,IAAIC,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAhB;;AACA,IAAIC,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAhB;;AAEA,IAAIE,MAAM,GAAG,CAAb;AACA,IAAIC,MAAM,GAAG,CAAb,C,CACA;AAEA;AACA;AACA;AACA;AAEA;AACA;;AACA,IAAMC,QAAQ,GAAG;AACTC,EAAAA,+BAA+B,EAAE,IADxB;AAETC,EAAAA,WAAW,EAAE,KAFJ;AAGTC,EAAAA,QAAQ,EAAE,IAHD;AAIT;AACA;AACAC,EAAAA,gBAAgB,EAAE,CANT;AAOTC,EAAAA,qBAAqB,EAAE,KAPd;AAQTC,EAAAA,OAAO,EAAE,CARA;AASTC,EAAAA,OAAO,EAAE,GATA;AAUTC,EAAAA,qBAAqB,EAAE,KAVd;AAWTC,EAAAA,UAAU,EAAE,KAXH;AAYTC,EAAAA,WAAW,EAAE,KAZJ;AAabb,EAAAA,EAAE,EAAE;AACAc,IAAAA,WAAW,EAAE,IADb;AAEAC,IAAAA,OAAO,EAAE,CAAC,GAFV;AAGAC,IAAAA,UAAU,EAAE,GAHZ;AAIAC,IAAAA,YAAY,EAAE;AAJd,GAbS;AAmBbC,EAAAA,IAAI,EAAE;AACFC,IAAAA,WAAW,EAAE,IADX;AAEFC,IAAAA,QAAQ,EAAE,MAFR;AAGF;AACA;AACAC,IAAAA,GAAG,EAAE,EALH;AAMFC,IAAAA,oBAAoB,EAAE;AANpB,GAnBO;AA2BbC,EAAAA,IAAI,EAAE;AACFC,IAAAA,UAAU,EAAE,QADV;AAEF;AACAC,IAAAA,cAAc,EAAE;AAHd;AA3BO,CAAjB;;AAkCA,IAAMC,IAAI,GAAG3B,OAAO,CAAC,oBAAD,CAApB;;AACA,IAAI4B,IAAI,GAAG,KAAX;AACA,IAAIC,OAAO,GAAG,EAAd;AACA,IAAIC,QAAQ,GAAG,EAAf;AAEA,IAAIC,GAAG,GAAG,CAAV;AAEA,WAAaC,MAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,wCAEuB,CACf;AACH;AAJL;;AAMI,kBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,gFAAMA,KAAN;AADc,UAIlBC,KAJkB,GAIV;AACJC,MAAAA,OAAO,EAAE,MADL;AAEJC,MAAAA,YAAY,EAAE,IAFV;AAGJC,MAAAA,WAAW,EAAE,KAHT;AAIJC,MAAAA,QAAQ,EAAEnC,MAJN;AAKJoC,MAAAA,SAAS,EAAErC,MALP;AAMJsC,MAAAA,YAAY,EAAE,MANV;AAOJC,MAAAA,YAAY,EAAE,CAPV;AAQJC,MAAAA,IAAI,EAAE;AACFC,QAAAA,KAAK,EAAE,CAAC;AAAEC,UAAAA,EAAE,EAAE,OAAN;AAAeC,UAAAA,KAAK,EAAE,YAAtB;AAAoCC,UAAAA,IAAI,EAAE;AAA1C,SAAD,EAAkD;AAAEF,UAAAA,EAAE,EAAE,OAAN;AAAeE,UAAAA,IAAI,EAAE,GAArB;AAA0BD,UAAAA,KAAK,EAAE;AAAjC,SAAlD,EAA4F;AAAED,UAAAA,EAAE,EAAE,OAAN;AAAeE,UAAAA,IAAI,EAAE,GAArB;AAA0BD,UAAAA,KAAK,EAAE;AAAjC,SAA5F,CADL;AAEFE,QAAAA,KAAK,EAAE,CAAC;AAAEC,UAAAA,MAAM,EAAE,OAAV;AAAmBC,UAAAA,MAAM,EAAE;AAA3B,SAAD,EAAuC;AAAED,UAAAA,MAAM,EAAE,OAAV;AAAmBC,UAAAA,MAAM,EAAE;AAA3B,SAAvC;AAFL,OARF,CAcR;;AAdQ,KAJU;;AAAA,UAmBlBC,YAnBkB,GAmBH,YAAM;AACjBrD,MAAAA,WAAW,GADM,CAEjB;AACH,KAtBiB;;AAAA,UAwBlBsD,WAxBkB,GAwBJ,UAACC,CAAD,EAAIV,IAAJ,EAAa;AACvBW,MAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAI,CAACa,GAAjB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACH,KA3BiB;;AAAA,UA+BlBE,WA/BkB,GA+BJ,UAACC,MAAD,EAAY,CAEzB,CAjCiB;;AAAA,UAmClBC,gBAnCkB,GAmCC,UAACC,KAAD,EAAQF,MAAR,EAAmB;AAClC3D,MAAAA,aAAa,GADqB,CAElC;AACH,KAtCiB;;AAAA,UAwClB8D,eAxCkB,GAwCA,UAACH,MAAD,EAAY,CAC1B;AACA;AACA;AACA;AAED;AACC;AACH,KAhDiB;;AAAA,UAkDlBI,cAlDkB,GAkDD,UAACJ,MAAD,EAAY,CACzB;AACA;AACA;AACA;AACH,KAvDiB;;AAAA,UAyDlBK,WAzDkB,GAyDJ,UAASd,MAAT,EAAiBC,MAAjB,EAAyB,CACnC;AACH,KA3DiB;;AAAA,UA6DlBc,gBA7DkB,GA6DC,UAASJ,KAAT,EAAgBX,MAAhB,EAAwBC,MAAxB,EAAgC,CAC/C;AACH,KA/DiB;;AAAA,UAiElBe,eAjEkB,GAiEA,UAAShB,MAAT,EAAiBC,MAAjB,EAAyB,CACvC;AACH,KAnEiB;;AAAA,UAqElBgB,cArEkB,GAqED,UAASjB,MAAT,EAAiBC,MAAjB,EAAyB,CACtC;AACH,KAvEiB;;AAAA;AAEjB;;AARL;AAAA;AAAA,2BA+EWf,KA/EX,EA+EkB;AAAA;;AAEV,aACQ;AAAK,QAAA,WAAW,EAAE,qBAASkB,CAAT,EAAY;AAC1BlD,UAAAA,MAAM,GAAGkD,CAAC,CAACc,OAAX;AACA/D,UAAAA,MAAM,GAAGiD,CAAC,CAACe,OAAX;AACAd,UAAAA,OAAO,CAACC,GAAR,CAAYpD,MAAZ;AACAmD,UAAAA,OAAO,CAACC,GAAR,CAAYnD,MAAZ;AACH,SALD;AAKE,QAAA,SAAS,EAAC,MALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOJ,oBAAC,kBAAD;AAAoB,QAAA,EAAE,EAAC,OAAvB;AAA+B,QAAA,OAAO,EAAE,CAAC,KAAK+B,KAAL,CAAWE,YAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,kBAAD;AAAoB,QAAA,EAAE,EAAC,MAAvB;AAA8B,QAAA,OAAO,EAAE,CAAC,KAAKF,KAAL,CAAWG,WAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AACI,QAAA,EAAE,EAAC,UADP,CACkB;AADlB;AAEI,QAAA,SAAS,EAAC,MAFd;AAGI,QAAA,IAAI,EAAE,KAAKH,KAAL,CAAWQ,IAHrB;AAII,QAAA,MAAM,EAAEtC,QAJZ;AAKI,QAAA,WAAW,EAAE,KAAKoD,WALtB;AAMI,QAAA,gBAAgB,EAAE,KAAKE,gBAN3B;AAOI,QAAA,YAAY,EAAE,KAAKR,YAPvB;AAQI,QAAA,WAAW,EAAE,KAAKY,WARtB;AASI,QAAA,gBAAgB,EAAE,KAAKC,gBAT3B;AAUI,QAAA,eAAe,EAAE,KAAKH,eAV1B;AAWI,QAAA,cAAc,EAAE,KAAKC,cAXzB;AAYI,QAAA,eAAe,EAAE,KAAKG,eAZ1B;AAaI,QAAA,cAAc,EAAE,KAAKC,cAbzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,MADA,CAPI,EAyBA;AAAK,QAAA,KAAK;AACNG,UAAAA,QAAQ,EAAE,UADJ;AAENrC,UAAAA,GAAG,EAAE,KAAKG,KAAL,CAAWI,QAFV;AAGN+B,UAAAA,KAAK,EAAE,CAHD;AAINC,UAAAA,IAAI,EAAE,KAAKpC,KAAL,CAAWK;AAJX,0CAKC,CALD,kCAMC,GAND,mCAOE,GAPF,oCAQG,KAAKL,KAAL,CAAWM,YARd,4CASW,QATX,oCAUG,KAAKN,KAAL,CAAWO,YAVd,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAzBA,EAsCI,oBAAC,WAAD;AAAa,QAAA,EAAE,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAE;AAACc,UAAAA,GAAG,EAAE;AAAN,SAAhB;AAA8B,QAAA,OAAO,EAAE,KAAKJ,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,EAII,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAE;AAACI,UAAAA,GAAG,EAAE;AAAN,SAAhB;AAA8B,QAAA,OAAO,EAAE,KAAKJ,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAJJ,EAOI,oBAAC,QAAD;AAAU,QAAA,OAAO,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,EAQI,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAE;AAACI,UAAAA,GAAG,EAAE;AAAN,SAAhB;AAA8B,QAAA,OAAO,EAAE,KAAKJ,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BARJ,CAtCJ,EAmDI,oBAAC,WAAD;AAAa,QAAA,EAAE,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAE;AAACI,UAAAA,GAAG,EAAE;AAAN,SAAhB;AAA8B,QAAA,OAAO,EAAE,KAAKJ,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,EAII,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAE;AAACI,UAAAA,GAAG,EAAE;AAAN,SAAhB;AAA8B,QAAA,OAAO,EAAE,KAAKJ,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAJJ,EAOI,oBAAC,QAAD;AAAU,QAAA,OAAO,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,EAQI,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAE;AAACI,UAAAA,GAAG,EAAE;AAAN,SAAhB;AAA8B,QAAA,OAAO,EAAE,KAAKJ,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BARJ,CAnDJ,CADR;AAoEH;AArJL;;AAAA;AAAA,EAA4B3D,SAA5B,E,CAwsourcesContent":["import React, { Component } from 'react';\r\n// import logo from '../logo.svg';\r\n//import logo from './logo2.png'\r\nimport '../css/Visual.css';\r\nimport { Graph } from 'react-d3-graph';\r\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from \"react-contextmenu\";\r\nimport { hideContext } from \"../js/hideContext\";\r\nimport { unhideContext } from \"../js/hideContext\";\r\n\r\n\r\nvar fs = require('fs');\r\nvar d3 = require('d3');\r\n \r\nvar mouseX = 0;\r\nvar mouseY = 0;\r\n// graph payload (with minimalist structure)\r\n\r\n// const data = {\r\n//     nodes: [{ id: 'Harry', color: \"lightgreen\", size: 1200}, { id: 'Sally', size: 400, color: \"red\" }, { id: 'Alice', size: 650, color: \"blue\" }],\r\n//     links: [{ source: 'Harry', target: 'Sally' }, { source: 'Harry', target: 'Alice' }]\r\n// };\r\n \r\n// the graph configuration, you only need to pass down properties\r\n// that you want to override, otherwise default ones will be used\r\nconst myConfig = {\r\n        automaticRearrangeAfterDropNode: true,\r\n        collapsible: false,\r\n        directed: true,\r\n        // focusAnimationDuration: 0.25,\r\n        // focusZoom: 1,\r\n        highlightOpacity: 1,\r\n        linkHighlightBehavior: false,\r\n        maxZoom: 8,\r\n        minZoom: 0.1,\r\n        nodeHighlightBehavior: false,\r\n        panAndZoom: false,\r\n        staticGraph: false,\r\n    d3: {\r\n        alphaTarget: 0.05,\r\n        gravity: -500,\r\n        linkLength: 100,\r\n        linkStrength: 1\r\n    },\r\n    node: {\r\n        renderLabel: true,\r\n        fontSize: \"18px\",\r\n        // color: '#8CDCDA',\r\n        // size: 400,\r\n        svg: \"\",\r\n        highlightStrokeColor: 'blue'\r\n    },\r\n    link: {\r\n        fontWeight: \"normal\",\r\n        // type: \"CURVE_SMOOTH\",\r\n        highlightColor: 'lightblue'\r\n    },\r\n};\r\n\r\nconst file = require(\"../JSON/stuff.json\");\r\nvar flag = false;\r\nvar newData = {};\r\nvar newLinks = {};\r\n\r\nvar top = 5;\r\n\r\nexport class Visual extends Component {\r\n    \r\n    componentDidMount(){\r\n        // console.log(file);\r\n    }\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    state = {\r\n        display: 'none',\r\n        spaceHovered: true,\r\n        nodeHovered: false,\r\n        modalTop: mouseY,\r\n        modalLeft: mouseX,\r\n        modalDisplay: 'none',\r\n        modalOpacity: 0,\r\n        data: {\r\n            nodes: [{ id: 'Harry', color: \"lightgreen\", size: 1200}, { id: 'Sally', size: 400, color: \"red\" }, { id: 'Alice', size: 650, color: \"blue\" }],\r\n            links: [{ source: 'Harry', target: 'Sally' }, { source: 'Harry', target: 'Alice' }]\r\n        }\r\n    }\r\n\r\n    // graph event callbacks\r\n    onClickGraph = () => {\r\n        hideContext();\r\n        // window.alert(`Clicked the graph background`);\r\n    };\r\n\r\n    handleClick = (e, data) => {\r\n        console.log(data.foo);\r\n        console.log(\"HWLEALSEJSA\");\r\n    }\r\n\r\n    \r\n    \r\n    onClickNode = (nodeId) => {\r\n\r\n    };\r\n    \r\n    onRightClickNode = (event, nodeId) => {\r\n        unhideContext();\r\n        // window.alert(`Right clicked node ${nodeId}`);\r\n    };\r\n    \r\n    onMouseOverNode = (nodeId) => {\r\n        // this.setState({\r\n        //     spaceHovered: false,\r\n        //     nodeHovered: true,\r\n        // })\r\n\r\n       // console.log(file);\r\n        // window.alert(`Mouse over node ${nodeId}`);\r\n    };\r\n    \r\n    onMouseOutNode = (nodeId) => {\r\n        // this.setState({\r\n        //     nodeHovered: false,\r\n        //     spaceHovered: true,\r\n        // })\r\n    };\r\n    \r\n    onClickLink = function(source, target) {\r\n        // window.alert(`Clicked link between ${source} and ${target}`);\r\n    };\r\n    \r\n    onRightClickLink = function(event, source, target) {\r\n        // window.alert(`Right clicked link between ${source} and ${target}`);\r\n    };\r\n    \r\n    onMouseOverLink = function(source, target) {\r\n        // window.alert(`Mouse over in link between ${source} and ${target}`);\r\n    };\r\n    \r\n    onMouseOutLink = function(source, target) {\r\n        // window.alert(`Mouse out link between ${source} and ${target}`);\r\n    };\r\n\r\n    render(state) {\r\n\r\n        return (\r\n                <div onMouseMove={function(e) {\r\n                    mouseX = e.clientX;\r\n                    mouseY = e.clientY;\r\n                    console.log(mouseX);\r\n                    console.log(mouseY);\r\n                }}className=\"well\">\r\n            \r\n            <ContextMenuTrigger id=\"some1\" disable={!this.state.spaceHovered}>\r\n            <ContextMenuTrigger id=\"some\" disable={!this.state.nodeHovered}>\r\n                <Graph\r\n                    id=\"graph-id\" // id is mandatory, if no id is defined rd3g will throw an error\r\n                    className=\"some\"\r\n                    data={this.state.data}\r\n                    config={myConfig}\r\n                    onClickNode={this.onClickNode}\r\n                    onRightClickNode={this.onRightClickNode}\r\n                    onClickGraph={this.onClickGraph}\r\n                    onClickLink={this.onClickLink}\r\n                    onRightClickLink={this.onRightClickLink}\r\n                    onMouseOverNode={this.onMouseOverNode}\r\n                    onMouseOutNode={this.onMouseOutNode}\r\n                    onMouseOverLink={this.onMouseOverLink}\r\n                    onMouseOutLink={this.onMouseOutLink}\r\n                />;\r\n                </ContextMenuTrigger></ContextMenuTrigger>\r\n                <div style={{    \r\n                    position: \"absolute\",\r\n                    top: this.state.modalTop,\r\n                    right: 0,\r\n                    left: this.state.modalLeft,\r\n                    right: 0,\r\n                    width: 200,\r\n                    height: 200,\r\n                    display: this.state.modalDisplay,\r\n                    backgroundColor: \"yellow\",\r\n                    opacity: this.state.modalOpacity,\r\n                    }}/>\r\n\r\n                    <ContextMenu id=\"some\">\r\n                        <MenuItem data={{foo: 'bar'}} onClick={this.handleClick}>\r\n                        ContextMenu Item 1SAP\r\n                        </MenuItem>\r\n                        <MenuItem data={{foo: 'bar'}} onClick={this.handleClick}>\r\n                        ContextMenu Item 2\r\n                        </MenuItem>\r\n                        <MenuItem divider />\r\n                        <MenuItem data={{foo: 'bar'}} onClick={this.handleClick}>\r\n                        ContextMenu Item 3\r\n                        </MenuItem>\r\n                    </ContextMenu>\r\n\r\n                    <ContextMenu id=\"some1\">\r\n                        <MenuItem data={{foo: 'bar'}} onClick={this.handleClick}>\r\n                        ContextMenu Item 1FART\r\n                        </MenuItem>\r\n                        <MenuItem data={{foo: 'bar'}} onClick={this.handleClick}>\r\n                        ContextMenu Item 2\r\n                        </MenuItem>\r\n                        <MenuItem divider />\r\n                        <MenuItem data={{foo: 'bar'}} onClick={this.handleClick}>\r\n                        ContextMenu Item 3\r\n                        </MenuItem>\r\n                    </ContextMenu>\r\n\r\n                    </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n// const myConfig = {\r\n    \r\n//         \"automaticRearrangeAfterDropNode\": true,\r\n//         \"collapsible\": false,\r\n//         \"directed\": true,\r\n//         \"focusAnimationDuration\": 0.75,\r\n//         \"focusZoom\": 1,\r\n//         \"highlightDegree\": 1,\r\n//         \"highlightOpacity\": 1,\r\n//         \"linkHighlightBehavior\": false,\r\n//         \"maxZoom\": 8,\r\n//         \"minZoom\": 0.1,\r\n//         \"nodeHighlightBehavior\": false,\r\n//         \"panAndZoom\": false,\r\n//         \"staticGraph\": false,\r\n//         \"d3\": {\r\n//           \"alphaTarget\": 0.05,\r\n//           \"gravity\": -100,\r\n//           \"linkLength\": 100,\r\n//           \"linkStrength\": 1\r\n//         },\r\n//         \"node\": {\r\n//           \"color\": \"#d3d3d3\",\r\n//           \"fontColor\": \"black\",\r\n//           \"fontSize\": 8,\r\n//           \"fontWeight\": \"normal\",\r\n//           \"highlightColor\": \"SAME\",\r\n//           \"highlightFontSize\": 8,\r\n//           \"highlightFontWeight\": \"normal\",\r\n//           \"highlightStrokeColor\": \"SAME\",\r\n//           \"highlightStrokeWidth\": \"SAME\",\r\n//           \"labelProperty\": \"id\",\r\n//           \"mouseCursor\": \"pointer\",\r\n//           \"opacity\": 1,\r\n//           \"renderLabel\": true,\r\n//           \"size\": 200,\r\n//           \"strokeColor\": \"none\",\r\n//           \"strokeWidth\": 1.5,\r\n//           \"svg\": \"\",\r\n//           \"symbolType\": \"circle\"\r\n//         },\r\n//         \"link\": {\r\n//           \"color\": \"#d3d3d3\",\r\n//           \"fontColor\": \"black\",\r\n//           \"fontSize\": 8,\r\n//           \"fontWeight\": \"normal\",\r\n//           \"highlightColor\": \"#d3d3d3\",\r\n//           \"highlightFontSize\": 8,\r\n//           \"highlightFontWeight\": \"normal\",\r\n//           \"labelProperty\": \"label\",\r\n//           \"mouseCursor\": \"pointer\",\r\n//           \"opacity\": 1,\r\n//           \"renderLabel\": false,\r\n//           \"semanticStrokeWidth\": false,\r\n//           \"strokeWidth\": 1.5\r\n//         }\r\n// }\r\n\r\n        // if(this.state.modalDisplay === 'none'){\r\n        //     this.setState({\r\n        //         modalTop: mouseY,\r\n        //         modalLeft: mouseX,\r\n        //         modalDisplay: '',\r\n        //         modalOpacity: 1,\r\n        //     })\r\n        // }\r\n        // else{\r\n        //     this.setState({\r\n        //         modalTop: mouseY,\r\n        //         modalLeft: mouseX,\r\n        //         modalDisplay: 'none',\r\n        //         modalOpacity: 0,\r\n        //     })\r\n        // }\r\n        \r\n        // if(top != 0){\r\n        //     var link = { source: \"\", target: \"\" };\r\n        //     if(!flag){\r\n        //         newData = {\r\n        //             nodes: [{ id: 'Harry', color: \"lightgreen\", size: 1200}, { id: 'Sally', size: 400, color: \"red\" }, { id: 'Alice', size: 650, color: \"blue\" }, { id: 'Jason', size: 950, color: \"yellow\" }],\r\n        //             links: [{ source: 'Harry', target: 'Sally' }, { source: 'Harry', target: 'Alice' }, { source: 'Jason', target: 'Sally'}]\r\n        //         }\r\n        //         flag = true;\r\n        //     }\r\n        //     else{\r\n        //         var x = Math.floor(Math.random() * 4) + 1\r\n        //         var y = Math.floor(Math.random() * 4) + 1\r\n        //         var obj = { id: 'Harry', color: \"lightgreen\", size: 1200}\r\n        //         if(x === 1){ link.source='Vibekatcher'; obj={ id: \"Vibekatcher\", size: 800 }} else if(x === 2) { link.source='Jdaflame'; obj={ id: \"Jdaflame\", size: 800 }} else if(x === 3) { link.source='Yoozer'; obj={ id: \"Yoozer\", size: 400 }} else if(x === 4){ link.source='Future'; obj={ id: \"Future\", size: 500 }}\r\n        //         if(y === 1){ link.target='Sally'; obj.color = \"blue\" } else if(y === 2) {link.target='Harry';   obj.color = \"green\"} else if(y === 3) {link.target='Alice';   obj.color = \"yellow\"} else if(y === 4){link.target='Jason';   obj.color = \"red\"}\r\n                \r\n        //         //console.log(obj);\r\n        //         newData.nodes.push(obj);\r\n        //         newData.links.push(link);\r\n    \r\n                \r\n        //     }\r\n    \r\n        //     console.log(newData.nodes);\r\n        //     // var newData = {\r\n        //     //     nodes: [{ id: 'Harry', color: \"lightgreen\", size: 1200}, { id: 'Sally', size: 400, color: \"red\" }, { id: 'Alice', size: 650, color: \"blue\" }, { id: 'Jason', size: 950, color: \"yellow\" }],\r\n        //     //     links: [{ source: 'Harry', target: 'Sally' }, { source: 'Harry', target: 'Alice' }, { source: 'Jason', target: 'Sally'}]\r\n        //     // }\r\n    \r\n        //     this.setState({\r\n        //         data: newData,\r\n        //         links: newLinks\r\n        //     })\r\n    \r\n        //     console.log(this.state.modalTop + \"hello\");\r\n        //     console.log(this.state.modalLeft + \"hello\");\r\n        //     top--;\r\n        // }\r\n\r\n\r\n        // modalStyle.left = mouseX;\r\n        // modalStyle.top = mouseY;\r\n        // console.log(modalStyle.left);\r\n        // console.log(modalStyle.top);\r\n        // console.log(event.clientX);\r\n        // window.alert(`Clicked node ${nodeId}`);"]},"metadata":{},"sourceType":"module"}