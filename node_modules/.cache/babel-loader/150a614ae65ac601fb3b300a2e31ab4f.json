{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Jason\\\\Desktop\\\\skarpiez\\\\skarpiez\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Jason\\\\Desktop\\\\skarpiez\\\\skarpiez\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Jason\\\\Desktop\\\\skarpiez\\\\skarpiez\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Jason\\\\Desktop\\\\skarpiez\\\\skarpiez\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"C:\\\\Users\\\\Jason\\\\Desktop\\\\skarpiez\\\\skarpiez\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Jason\\\\Desktop\\\\skarpiez\\\\skarpiez\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jason\\\\Desktop\\\\skarpiez\\\\skarpiez\\\\src\\\\pages\\\\Visual.js\";\nimport React, { Component, ReactDOM } from 'react';\nimport logo from \"../logo.svg\"; //import logo from './logo2.png'\n\nimport '../css/Visual.css';\nimport { Graph } from 'react-d3-graph';\n\nvar fs = require('fs');\n\nvar d3 = require('d3');\n\nvar mouseX = 0;\nvar mouseY = 0; // graph payload (with minimalist structure)\n// const data = {\n//     nodes: [{ id: 'Harry', color: \"lightgreen\", size: 1200}, { id: 'Sally', size: 400, color: \"red\" }, { id: 'Alice', size: 650, color: \"blue\" }],\n//     links: [{ source: 'Harry', target: 'Sally' }, { source: 'Harry', target: 'Alice' }]\n// };\n// the graph configuration, you only need to pass down properties\n// that you want to override, otherwise default ones will be used\n\nvar myConfig = {\n  automaticRearrangeAfterDropNode: true,\n  collapsible: false,\n  directed: true,\n  focusAnimationDuration: 0.25,\n  focusZoom: 1,\n  highlightOpacity: 1,\n  linkHighlightBehavior: false,\n  maxZoom: 8,\n  minZoom: 0.1,\n  nodeHighlightBehavior: false,\n  panAndZoom: false,\n  staticGraph: false,\n  d3: {\n    alphaTarget: 0.05,\n    gravity: -500,\n    linkLength: 100,\n    linkStrength: 1\n  },\n  node: {\n    renderLabel: true,\n    fontSize: \"18px\",\n    // color: '#8CDCDA',\n    // size: 400,\n    svg: \"\",\n    highlightStrokeColor: 'blue'\n  },\n  link: {\n    fontWeight: \"normal\",\n    // type: \"CURVE_SMOOTH\",\n    highlightColor: 'lightblue'\n  }\n};\n\nvar file = require(\"../JSON/stuff.json\");\n\nvar flag = false;\nvar newData = {};\nvar newLinks = {};\nvar top = 5;\nexport var Visual =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Visual, _Component);\n\n  _createClass(Visual, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {// console.log(file);\n    }\n  }]);\n\n  function Visual(props) {\n    var _this;\n\n    _classCallCheck(this, Visual);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Visual).call(this, props));\n    _this.state = {\n      modalTop: mouseY,\n      modalLeft: mouseX,\n      modalDisplay: 'none',\n      modalOpacity: 0,\n      data: {\n        nodes: [{\n          id: 'Harry',\n          color: \"lightgreen\",\n          size: 1200\n        }, {\n          id: 'Sally',\n          size: 400,\n          color: \"red\"\n        }, {\n          id: 'Alice',\n          size: 650,\n          color: \"blue\"\n        }],\n        links: [{\n          source: 'Harry',\n          target: 'Sally'\n        }, {\n          source: 'Harry',\n          target: 'Alice'\n        }]\n      } // graph event callbacks\n\n    };\n\n    _this.onClickGraph = function () {// window.alert(`Clicked the graph background`);\n    };\n\n    _this.onClickNode = function (nodeId) {\n      if (_this.state.modalDisplay === 'none') {\n        _this.setState({\n          modalTop: mouseY,\n          modalLeft: mouseX,\n          modalDisplay: '',\n          modalOpacity: 1\n        });\n      } else {\n        _this.setState({\n          modalTop: mouseY,\n          modalLeft: mouseX,\n          modalDisplay: 'none',\n          modalOpacity: 0\n        });\n      } // if(top != 0){\n      //     var link = { source: \"\", target: \"\" };\n      //     if(!flag){\n      //         newData = {\n      //             nodes: [{ id: 'Harry', color: \"lightgreen\", size: 1200}, { id: 'Sally', size: 400, color: \"red\" }, { id: 'Alice', size: 650, color: \"blue\" }, { id: 'Jason', size: 950, color: \"yellow\" }],\n      //             links: [{ source: 'Harry', target: 'Sally' }, { source: 'Harry', target: 'Alice' }, { source: 'Jason', target: 'Sally'}]\n      //         }\n      //         flag = true;\n      //     }\n      //     else{\n      //         var x = Math.floor(Math.random() * 4) + 1\n      //         var y = Math.floor(Math.random() * 4) + 1\n      //         var obj = { id: 'Harry', color: \"lightgreen\", size: 1200}\n      //         if(x === 1){ link.source='Vibekatcher'; obj={ id: \"Vibekatcher\", size: 800 }} else if(x === 2) { link.source='Jdaflame'; obj={ id: \"Jdaflame\", size: 800 }} else if(x === 3) { link.source='Yoozer'; obj={ id: \"Yoozer\", size: 400 }} else if(x === 4){ link.source='Future'; obj={ id: \"Future\", size: 500 }}\n      //         if(y === 1){ link.target='Sally'; obj.color = \"blue\" } else if(y === 2) {link.target='Harry';   obj.color = \"green\"} else if(y === 3) {link.target='Alice';   obj.color = \"yellow\"} else if(y === 4){link.target='Jason';   obj.color = \"red\"}\n      //         //console.log(obj);\n      //         newData.nodes.push(obj);\n      //         newData.links.push(link);\n      //     }\n      //     console.log(newData.nodes);\n      //     // var newData = {\n      //     //     nodes: [{ id: 'Harry', color: \"lightgreen\", size: 1200}, { id: 'Sally', size: 400, color: \"red\" }, { id: 'Alice', size: 650, color: \"blue\" }, { id: 'Jason', size: 950, color: \"yellow\" }],\n      //     //     links: [{ source: 'Harry', target: 'Sally' }, { source: 'Harry', target: 'Alice' }, { source: 'Jason', target: 'Sally'}]\n      //     // }\n      //     this.setState({\n      //         data: newData,\n      //         links: newLinks\n      //     })\n      //     console.log(this.state.modalTop + \"hello\");\n      //     console.log(this.state.modalLeft + \"hello\");\n      //     top--;\n      // }\n      // modalStyle.left = mouseX;\n      // modalStyle.top = mouseY;\n      // console.log(modalStyle.left);\n      // console.log(modalStyle.top);\n      // console.log(event.clientX);\n      // window.alert(`Clicked node ${nodeId}`);\n\n    };\n\n    _this.onRightClickNode = function (event, nodeId) {//console.log(data2);\n      // window.alert(`Right clicked node ${nodeId}`);\n    };\n\n    _this.onMouseOverNode = function (nodeId) {\n      console.log(file); // window.alert(`Mouse over node ${nodeId}`);\n    };\n\n    _this.onMouseOutNode = function (nodeId) {// window.alert(`Mouse out node ${nodeId}`);\n    };\n\n    _this.onClickLink = function (source, target) {// window.alert(`Clicked link between ${source} and ${target}`);\n    };\n\n    _this.onRightClickLink = function (event, source, target) {// window.alert(`Right clicked link between ${source} and ${target}`);\n    };\n\n    _this.onMouseOverLink = function (source, target) {// window.alert(`Mouse over in link between ${source} and ${target}`);\n    };\n\n    _this.onMouseOutLink = function (source, target) {// window.alert(`Mouse out link between ${source} and ${target}`);\n    };\n\n    return _this;\n  }\n\n  _createClass(Visual, [{\n    key: \"handleClick\",\n    value: function handleClick(e, data) {\n      console.log(data.foo);\n    }\n  }, {\n    key: \"render\",\n    value: function render(state) {\n      var _ref;\n\n      return React.createElement(\"div\", {\n        onMouseMove: function onMouseMove(e) {\n          mouseX = e.clientX;\n          mouseY = e.clientY;\n          console.log(mouseX);\n          console.log(mouseY);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(Graph, {\n        id: \"graph-id\" // id is mandatory, if no id is defined rd3g will throw an error\n        ,\n        data: this.state.data,\n        config: myConfig,\n        onClickNode: this.onClickNode,\n        onRightClickNode: this.onRightClickNode,\n        onClickGraph: this.onClickGraph,\n        onClickLink: this.onClickLink,\n        onRightClickLink: this.onRightClickLink,\n        onMouseOverNode: this.onMouseOverNode,\n        onMouseOutNode: this.onMouseOutNode,\n        onMouseOverLink: this.onMouseOverLink,\n        onMouseOutLink: this.onMouseOutLink,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }), \";\", React.createElement(\"div\", {\n        style: (_ref = {\n          position: \"absolute\",\n          top: this.state.modalTop,\n          right: 0,\n          left: this.state.modalLeft\n        }, _defineProperty(_ref, \"right\", 0), _defineProperty(_ref, \"width\", 200), _defineProperty(_ref, \"height\", 200), _defineProperty(_ref, \"display\", this.state.modalDisplay), _defineProperty(_ref, \"backgroundColor\", \"yellow\"), _defineProperty(_ref, \"opacity\", this.state.modalOpacity), _ref),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Visual;\n}(Component); // const myConfig = {\n//         \"automaticRearrangeAfterDropNode\": true,\n//         \"collapsible\": false,\n//         \"directed\": true,\n//         \"focusAnimationDuration\": 0.75,\n//         \"focusZoom\": 1,\n//         \"highlightDegree\": 1,\n//         \"highlightOpacity\": 1,\n//         \"linkHighlightBehavior\": false,\n//         \"maxZoom\": 8,\n//         \"minZoom\": 0.1,\n//         \"nodeHighlightBehavior\": false,\n//         \"panAndZoom\": false,\n//         \"staticGraph\": false,\n//         \"d3\": {\n//           \"alphaTarget\": 0.05,\n//           \"gravity\": -100,\n//           \"linkLength\": 100,\n//           \"linkStrength\": 1\n//         },\n//         \"node\": {\n//           \"color\": \"#d3d3d3\",\n//           \"fontColor\": \"black\",\n//           \"fontSize\": 8,\n//           \"fontWeight\": \"normal\",\n//           \"highlightColor\": \"SAME\",\n//           \"highlightFontSize\": 8,\n//           \"highlightFontWeight\": \"normal\",\n//           \"highlightStrokeColor\": \"SAME\",\n//           \"highlightStrokeWidth\": \"SAME\",\n//           \"labelProperty\": \"id\",\n//           \"mouseCursor\": \"pointer\",\n//           \"opacity\": 1,\n//           \"renderLabel\": true,\n//           \"size\": 200,\n//           \"strokeColor\": \"none\",\n//           \"strokeWidth\": 1.5,\n//           \"svg\": \"\",\n//           \"symbolType\": \"circle\"\n//         },\n//         \"link\": {\n//           \"color\": \"#d3d3d3\",\n//           \"fontColor\": \"black\",\n//           \"fontSize\": 8,\n//           \"fontWeight\": \"normal\",\n//           \"highlightColor\": \"#d3d3d3\",\n//           \"highlightFontSize\": 8,\n//           \"highlightFontWeight\": \"normal\",\n//           \"labelProperty\": \"label\",\n//           \"mouseCursor\": \"pointer\",\n//           \"opacity\": 1,\n//           \"renderLabel\": false,\n//           \"semanticStrokeWidth\": false,\n//           \"strokeWidth\": 1.5\n//         }\n// }","map":{"version":3,"sources":["C:\\Users\\Jason\\Desktop\\skarpiez\\skarpiez\\src\\pages\\Visual.js"],"names":["React","Component","ReactDOM","Graph","fs","require","d3","mouseX","mouseY","myConfig","automaticRearrangeAfterDropNode","collapsible","directed","focusAnimationDuration","focusZoom","highlightOpacity","linkHighlightBehavior","maxZoom","minZoom","nodeHighlightBehavior","panAndZoom","staticGraph","alphaTarget","gravity","linkLength","linkStrength","node","renderLabel","fontSize","svg","highlightStrokeColor","link","fontWeight","highlightColor","file","flag","newData","newLinks","top","Visual","props","state","modalTop","modalLeft","modalDisplay","modalOpacity","data","nodes","id","color","size","links","source","target","onClickGraph","onClickNode","nodeId","setState","onRightClickNode","event","onMouseOverNode","console","log","onMouseOutNode","onClickLink","onRightClickLink","onMouseOverLink","onMouseOutLink","e","foo","clientX","clientY","position","right","left"],"mappings":"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","sourcesContent":["import React, { Component, ReactDOM } from 'react';\r\nimport logo from '../logo.svg';\r\n//import logo from './logo2.png'\r\nimport '../css/Visual.css';\r\nimport { Graph } from 'react-d3-graph';\r\n\r\n\r\nvar fs = require('fs');\r\nvar d3 = require('d3');\r\n \r\nvar mouseX = 0;\r\nvar mouseY = 0;\r\n// graph payload (with minimalist structure)\r\n\r\n// const data = {\r\n//     nodes: [{ id: 'Harry', color: \"lightgreen\", size: 1200}, { id: 'Sally', size: 400, color: \"red\" }, { id: 'Alice', size: 650, color: \"blue\" }],\r\n//     links: [{ source: 'Harry', target: 'Sally' }, { source: 'Harry', target: 'Alice' }]\r\n// };\r\n \r\n// the graph configuration, you only need to pass down properties\r\n// that you want to override, otherwise default ones will be used\r\nconst myConfig = {\r\n        automaticRearrangeAfterDropNode: true,\r\n        collapsible: false,\r\n        directed: true,\r\n        focusAnimationDuration: 0.25,\r\n        focusZoom: 1,\r\n        highlightOpacity: 1,\r\n        linkHighlightBehavior: false,\r\n        maxZoom: 8,\r\n        minZoom: 0.1,\r\n        nodeHighlightBehavior: false,\r\n        panAndZoom: false,\r\n        staticGraph: false,\r\n    d3: {\r\n        alphaTarget: 0.05,\r\n        gravity: -500,\r\n        linkLength: 100,\r\n        linkStrength: 1\r\n    },\r\n    node: {\r\n        renderLabel: true,\r\n        fontSize: \"18px\",\r\n        // color: '#8CDCDA',\r\n        // size: 400,\r\n        svg: \"\",\r\n        highlightStrokeColor: 'blue'\r\n    },\r\n    link: {\r\n        fontWeight: \"normal\",\r\n        // type: \"CURVE_SMOOTH\",\r\n        highlightColor: 'lightblue'\r\n    },\r\n};\r\n\r\nconst file = require(\"../JSON/stuff.json\");\r\nvar flag = false;\r\nvar newData = {};\r\nvar newLinks = {};\r\n\r\nvar top = 5;\r\n\r\nexport class Visual extends Component {\r\n    \r\n    componentDidMount(){\r\n        // console.log(file);\r\n    }\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    state = {\r\n        modalTop: mouseY,\r\n        modalLeft: mouseX,\r\n        modalDisplay: 'none',\r\n        modalOpacity: 0,\r\n        data: {\r\n            nodes: [{ id: 'Harry', color: \"lightgreen\", size: 1200}, { id: 'Sally', size: 400, color: \"red\" }, { id: 'Alice', size: 650, color: \"blue\" }],\r\n            links: [{ source: 'Harry', target: 'Sally' }, { source: 'Harry', target: 'Alice' }]\r\n        }\r\n    }\r\n\r\n    // graph event callbacks\r\n    onClickGraph = function() {\r\n        // window.alert(`Clicked the graph background`);\r\n    };\r\n\r\n    handleClick(e, data) {\r\n        console.log(data.foo);\r\n    }\r\n\r\n    \r\n    \r\n    onClickNode = (nodeId) => {\r\n\r\n        if(this.state.modalDisplay === 'none'){\r\n            this.setState({\r\n                modalTop: mouseY,\r\n                modalLeft: mouseX,\r\n                modalDisplay: '',\r\n                modalOpacity: 1,\r\n            })\r\n        }\r\n        else{\r\n            this.setState({\r\n                modalTop: mouseY,\r\n                modalLeft: mouseX,\r\n                modalDisplay: 'none',\r\n                modalOpacity: 0,\r\n            })\r\n        }\r\n        // if(top != 0){\r\n        //     var link = { source: \"\", target: \"\" };\r\n        //     if(!flag){\r\n        //         newData = {\r\n        //             nodes: [{ id: 'Harry', color: \"lightgreen\", size: 1200}, { id: 'Sally', size: 400, color: \"red\" }, { id: 'Alice', size: 650, color: \"blue\" }, { id: 'Jason', size: 950, color: \"yellow\" }],\r\n        //             links: [{ source: 'Harry', target: 'Sally' }, { source: 'Harry', target: 'Alice' }, { source: 'Jason', target: 'Sally'}]\r\n        //         }\r\n        //         flag = true;\r\n        //     }\r\n        //     else{\r\n        //         var x = Math.floor(Math.random() * 4) + 1\r\n        //         var y = Math.floor(Math.random() * 4) + 1\r\n        //         var obj = { id: 'Harry', color: \"lightgreen\", size: 1200}\r\n        //         if(x === 1){ link.source='Vibekatcher'; obj={ id: \"Vibekatcher\", size: 800 }} else if(x === 2) { link.source='Jdaflame'; obj={ id: \"Jdaflame\", size: 800 }} else if(x === 3) { link.source='Yoozer'; obj={ id: \"Yoozer\", size: 400 }} else if(x === 4){ link.source='Future'; obj={ id: \"Future\", size: 500 }}\r\n        //         if(y === 1){ link.target='Sally'; obj.color = \"blue\" } else if(y === 2) {link.target='Harry';   obj.color = \"green\"} else if(y === 3) {link.target='Alice';   obj.color = \"yellow\"} else if(y === 4){link.target='Jason';   obj.color = \"red\"}\r\n                \r\n        //         //console.log(obj);\r\n        //         newData.nodes.push(obj);\r\n        //         newData.links.push(link);\r\n    \r\n                \r\n        //     }\r\n    \r\n        //     console.log(newData.nodes);\r\n        //     // var newData = {\r\n        //     //     nodes: [{ id: 'Harry', color: \"lightgreen\", size: 1200}, { id: 'Sally', size: 400, color: \"red\" }, { id: 'Alice', size: 650, color: \"blue\" }, { id: 'Jason', size: 950, color: \"yellow\" }],\r\n        //     //     links: [{ source: 'Harry', target: 'Sally' }, { source: 'Harry', target: 'Alice' }, { source: 'Jason', target: 'Sally'}]\r\n        //     // }\r\n    \r\n        //     this.setState({\r\n        //         data: newData,\r\n        //         links: newLinks\r\n        //     })\r\n    \r\n        //     console.log(this.state.modalTop + \"hello\");\r\n        //     console.log(this.state.modalLeft + \"hello\");\r\n        //     top--;\r\n        // }\r\n\r\n\r\n        // modalStyle.left = mouseX;\r\n        // modalStyle.top = mouseY;\r\n        // console.log(modalStyle.left);\r\n        // console.log(modalStyle.top);\r\n        // console.log(event.clientX);\r\n        // window.alert(`Clicked node ${nodeId}`);\r\n    };\r\n    \r\n    onRightClickNode = function(event, nodeId) {\r\n        //console.log(data2);\r\n        // window.alert(`Right clicked node ${nodeId}`);\r\n    };\r\n    \r\n    onMouseOverNode = function(nodeId) {\r\n        console.log(file);\r\n        // window.alert(`Mouse over node ${nodeId}`);\r\n    };\r\n    \r\n    onMouseOutNode = function(nodeId) {\r\n        // window.alert(`Mouse out node ${nodeId}`);\r\n    };\r\n    \r\n    onClickLink = function(source, target) {\r\n        // window.alert(`Clicked link between ${source} and ${target}`);\r\n    };\r\n    \r\n    onRightClickLink = function(event, source, target) {\r\n        // window.alert(`Right clicked link between ${source} and ${target}`);\r\n    };\r\n    \r\n    onMouseOverLink = function(source, target) {\r\n        // window.alert(`Mouse over in link between ${source} and ${target}`);\r\n    };\r\n    \r\n    onMouseOutLink = function(source, target) {\r\n        // window.alert(`Mouse out link between ${source} and ${target}`);\r\n    };\r\n\r\n\r\n\r\n    render(state) {\r\n\r\n        return (\r\n            <div onMouseMove={function(e){\r\n                mouseX = e.clientX;\r\n                mouseY = e.clientY;\r\n                console.log(mouseX);\r\n                console.log(mouseY);\r\n            }}>\r\n                <Graph\r\n                    id=\"graph-id\" // id is mandatory, if no id is defined rd3g will throw an error\r\n                    data={this.state.data}\r\n                    config={myConfig}\r\n                    onClickNode={this.onClickNode}\r\n                    onRightClickNode={this.onRightClickNode}\r\n                    onClickGraph={this.onClickGraph}\r\n                    onClickLink={this.onClickLink}\r\n                    onRightClickLink={this.onRightClickLink}\r\n                    onMouseOverNode={this.onMouseOverNode}\r\n                    onMouseOutNode={this.onMouseOutNode}\r\n                    onMouseOverLink={this.onMouseOverLink}\r\n                    onMouseOutLink={this.onMouseOutLink}\r\n                />;\r\n                <div style={{    \r\n                    position: \"absolute\",\r\n                    top: this.state.modalTop,\r\n                    right: 0,\r\n                    left: this.state.modalLeft,\r\n                    right: 0,\r\n                    width: 200,\r\n                    height: 200,\r\n                    display: this.state.modalDisplay,\r\n                    backgroundColor: \"yellow\",\r\n                    opacity: this.state.modalOpacity,\r\n                    }}/>\r\n\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\n// const myConfig = {\r\n    \r\n//         \"automaticRearrangeAfterDropNode\": true,\r\n//         \"collapsible\": false,\r\n//         \"directed\": true,\r\n//         \"focusAnimationDuration\": 0.75,\r\n//         \"focusZoom\": 1,\r\n//         \"highlightDegree\": 1,\r\n//         \"highlightOpacity\": 1,\r\n//         \"linkHighlightBehavior\": false,\r\n//         \"maxZoom\": 8,\r\n//         \"minZoom\": 0.1,\r\n//         \"nodeHighlightBehavior\": false,\r\n//         \"panAndZoom\": false,\r\n//         \"staticGraph\": false,\r\n//         \"d3\": {\r\n//           \"alphaTarget\": 0.05,\r\n//           \"gravity\": -100,\r\n//           \"linkLength\": 100,\r\n//           \"linkStrength\": 1\r\n//         },\r\n//         \"node\": {\r\n//           \"color\": \"#d3d3d3\",\r\n//           \"fontColor\": \"black\",\r\n//           \"fontSize\": 8,\r\n//           \"fontWeight\": \"normal\",\r\n//           \"highlightColor\": \"SAME\",\r\n//           \"highlightFontSize\": 8,\r\n//           \"highlightFontWeight\": \"normal\",\r\n//           \"highlightStrokeColor\": \"SAME\",\r\n//           \"highlightStrokeWidth\": \"SAME\",\r\n//           \"labelProperty\": \"id\",\r\n//           \"mouseCursor\": \"pointer\",\r\n//           \"opacity\": 1,\r\n//           \"renderLabel\": true,\r\n//           \"size\": 200,\r\n//           \"strokeColor\": \"none\",\r\n//           \"strokeWidth\": 1.5,\r\n//           \"svg\": \"\",\r\n//           \"symbolType\": \"circle\"\r\n//         },\r\n//         \"link\": {\r\n//           \"color\": \"#d3d3d3\",\r\n//           \"fontColor\": \"black\",\r\n//           \"fontSize\": 8,\r\n//           \"fontWeight\": \"normal\",\r\n//           \"highlightColor\": \"#d3d3d3\",\r\n//           \"highlightFontSize\": 8,\r\n//           \"highlightFontWeight\": \"normal\",\r\n//           \"labelProperty\": \"label\",\r\n//           \"mouseCursor\": \"pointer\",\r\n//           \"opacity\": 1,\r\n//           \"renderLabel\": false,\r\n//           \"semanticStrokeWidth\": false,\r\n//           \"strokeWidth\": 1.5\r\n//         }\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}