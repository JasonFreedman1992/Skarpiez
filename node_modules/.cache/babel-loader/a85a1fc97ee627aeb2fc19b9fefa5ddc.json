{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Jason\\\\Desktop\\\\skarpiez\\\\skarpiez\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Jason\\\\Desktop\\\\skarpiez\\\\skarpiez\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Jason\\\\Desktop\\\\skarpiez\\\\skarpiez\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Jason\\\\Desktop\\\\skarpiez\\\\skarpiez\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Jason\\\\Desktop\\\\skarpiez\\\\skarpiez\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Jason\\\\Desktop\\\\skarpiez\\\\skarpiez\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jason\\\\Desktop\\\\skarpiez\\\\skarpiez\\\\src\\\\pages\\\\Visual.js\";\nimport React, { Component, ReactDOM } from 'react';\nimport logo from \"../logo.svg\"; //import logo from './logo2.png'\n\nimport '../css/Visual.css';\nimport * as vis from 'react-vis-force';\nimport { Graph } from 'react-d3-graph';\n\nvar fs = require('fs');\n\nvar d3 = require('d3');\n\nvar mouseX = 0;\nvar mouseY = 0; // graph payload (with minimalist structure)\n\nvar data = {\n  nodes: [{\n    id: 'Harry',\n    color: \"lightgreen\",\n    size: 1200\n  }, {\n    id: 'Sally',\n    size: 400,\n    color: \"red\"\n  }, {\n    id: 'Alice',\n    size: 650,\n    color: \"blue\"\n  }],\n  links: [{\n    source: 'Harry',\n    target: 'Sally'\n  }, {\n    source: 'Harry',\n    target: 'Alice'\n  }]\n}; // the graph configuration, you only need to pass down properties\n// that you want to override, otherwise default ones will be used\n\nvar myConfig = {\n  automaticRearrangeAfterDropNode: true,\n  collapsible: false,\n  directed: true,\n  focusAnimationDuration: 0.25,\n  focusZoom: 1,\n  highlightOpacity: 1,\n  linkHighlightBehavior: false,\n  maxZoom: 8,\n  minZoom: 0.1,\n  nodeHighlightBehavior: false,\n  panAndZoom: false,\n  staticGraph: false,\n  d3: {\n    alphaTarget: 0.05,\n    gravity: -500,\n    linkLength: 100,\n    linkStrength: 1\n  },\n  node: {\n    renderLabel: true,\n    fontSize: \"18px\",\n    // color: '#8CDCDA',\n    // size: 400,\n    svg: \"\",\n    highlightStrokeColor: 'blue'\n  },\n  link: {\n    fontWeight: \"normal\",\n    // type: \"CURVE_SMOOTH\",\n    highlightColor: 'lightblue'\n  }\n};\n\nvar data2 = require('../JSON/stuff.json');\n\nexport var Visual =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Visual, _Component);\n\n  function Visual(props) {\n    var _this;\n\n    _classCallCheck(this, Visual);\n\n    data2 = JSON.parse(data2);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Visual).call(this, props));\n    _this.state = {\n      modalTop: mouseY,\n      modalLeft: mouseX,\n      modalDisplay: 'none',\n      modalOpacity: 0 // graph event callbacks\n\n    };\n\n    _this.onClickGraph = function () {// window.alert(`Clicked the graph background`);\n    };\n\n    _this.onClickNode = function (nodeId) {\n      if (_this.state.modalDisplay === 'none') {\n        _this.setState({\n          modalTop: mouseY,\n          modalLeft: mouseX,\n          modalDisplay: '',\n          modalOpacity: 1\n        });\n      } else {\n        _this.setState({\n          modalTop: mouseY,\n          modalLeft: mouseX,\n          modalDisplay: 'none',\n          modalOpacity: 0\n        });\n      }\n\n      console.log(_this.state.modalTop + \"hello\");\n      console.log(_this.state.modalLeft + \"hello\"); // modalStyle.left = mouseX;\n      // modalStyle.top = mouseY;\n      // console.log(modalStyle.left);\n      // console.log(modalStyle.top);\n      // console.log(event.clientX);\n      // window.alert(`Clicked node ${nodeId}`);\n    };\n\n    _this.onRightClickNode = function (event, nodeId) {\n      console.log(data2); // window.alert(`Right clicked node ${nodeId}`);\n    };\n\n    _this.onMouseOverNode = function (nodeId) {// window.alert(`Mouse over node ${nodeId}`);\n    };\n\n    _this.onMouseOutNode = function (nodeId) {// window.alert(`Mouse out node ${nodeId}`);\n    };\n\n    _this.onClickLink = function (source, target) {// window.alert(`Clicked link between ${source} and ${target}`);\n    };\n\n    _this.onRightClickLink = function (event, source, target) {// window.alert(`Right clicked link between ${source} and ${target}`);\n    };\n\n    _this.onMouseOverLink = function (source, target) {// window.alert(`Mouse over in link between ${source} and ${target}`);\n    };\n\n    _this.onMouseOutLink = function (source, target) {// window.alert(`Mouse out link between ${source} and ${target}`);\n    };\n\n    return _this;\n  }\n\n  _createClass(Visual, [{\n    key: \"render\",\n    value: function render(state) {\n      var _ref;\n\n      return React.createElement(\"div\", {\n        onMouseMove: function onMouseMove(e) {\n          mouseX = e.clientX;\n          mouseY = e.clientY;\n          console.log(mouseX);\n          console.log(mouseY);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(Graph, {\n        id: \"graph-id\" // id is mandatory, if no id is defined rd3g will throw an error\n        ,\n        data: data,\n        config: myConfig,\n        onClickNode: this.onClickNode,\n        onRightClickNode: this.onRightClickNode,\n        onClickGraph: this.onClickGraph,\n        onClickLink: this.onClickLink,\n        onRightClickLink: this.onRightClickLink,\n        onMouseOverNode: this.onMouseOverNode,\n        onMouseOutNode: this.onMouseOutNode,\n        onMouseOverLink: this.onMouseOverLink,\n        onMouseOutLink: this.onMouseOutLink,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), \";\", React.createElement(\"div\", {\n        style: (_ref = {\n          position: \"absolute\",\n          top: this.state.modalTop,\n          right: 0,\n          left: this.state.modalLeft\n        }, _defineProperty(_ref, \"right\", 0), _defineProperty(_ref, \"width\", 200), _defineProperty(_ref, \"height\", 200), _defineProperty(_ref, \"display\", this.state.modalDisplay), _defineProperty(_ref, \"backgroundColor\", \"yellow\"), _defineProperty(_ref, \"opacity\", this.state.modalOpacity), _ref),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Visual;\n}(Component); // const myConfig = {\n//         \"automaticRearrangeAfterDropNode\": true,\n//         \"collapsible\": false,\n//         \"directed\": true,\n//         \"focusAnimationDuration\": 0.75,\n//         \"focusZoom\": 1,\n//         \"highlightDegree\": 1,\n//         \"highlightOpacity\": 1,\n//         \"linkHighlightBehavior\": false,\n//         \"maxZoom\": 8,\n//         \"minZoom\": 0.1,\n//         \"nodeHighlightBehavior\": false,\n//         \"panAndZoom\": false,\n//         \"staticGraph\": false,\n//         \"d3\": {\n//           \"alphaTarget\": 0.05,\n//           \"gravity\": -100,\n//           \"linkLength\": 100,\n//           \"linkStrength\": 1\n//         },\n//         \"node\": {\n//           \"color\": \"#d3d3d3\",\n//           \"fontColor\": \"black\",\n//           \"fontSize\": 8,\n//           \"fontWeight\": \"normal\",\n//           \"highlightColor\": \"SAME\",\n//           \"highlightFontSize\": 8,\n//           \"highlightFontWeight\": \"normal\",\n//           \"highlightStrokeColor\": \"SAME\",\n//           \"highlightStrokeWidth\": \"SAME\",\n//           \"labelProperty\": \"id\",\n//           \"mouseCursor\": \"pointer\",\n//           \"opacity\": 1,\n//           \"renderLabel\": true,\n//           \"size\": 200,\n//           \"strokeColor\": \"none\",\n//           \"strokeWidth\": 1.5,\n//           \"svg\": \"\",\n//           \"symbolType\": \"circle\"\n//         },\n//         \"link\": {\n//           \"color\": \"#d3d3d3\",\n//           \"fontColor\": \"black\",\n//           \"fontSize\": 8,\n//           \"fontWeight\": \"normal\",\n//           \"highlightColor\": \"#d3d3d3\",\n//           \"highlightFontSize\": 8,\n//           \"highlightFontWeight\": \"normal\",\n//           \"labelProperty\": \"label\",\n//           \"mouseCursor\": \"pointer\",\n//           \"opacity\": 1,\n//           \"renderLabel\": false,\n//           \"semanticStrokeWidth\": false,\n//           \"strokeWidth\": 1.5\n//         }\n// }","map":{"version":3,"sources":["C:\\Users\\Jason\\Desktop\\skarpiez\\skarpiez\\src\\pages\\Visual.js"],"names":["React","Component","ReactDOM","vis","Graph","fs","require","d3","mouseX","mouseY","data","nodes","id","color","size","links","source","target","myConfig","automaticRearrangeAfterDropNode","collapsible","directed","focusAnimationDuration","focusZoom","highlightOpacity","linkHighlightBehavior","maxZoom","minZoom","nodeHighlightBehavior","panAndZoom","staticGraph","alphaTarget","gravity","linkLength","linkStrength","node","renderLabel","fontSize","svg","highlightStrokeColor","link","fontWeight","highlightColor","data2","Visual","props","JSON","parse","state","modalTop","modalLeft","modalDisplay","modalOpacity","onClickGraph","onClickNode","nodeId","setState","console","log","onRightClickNode","event","onMouseOverNode","onMouseOutNode","onClickLink","onRightClickLink","onMouseOverLink","onMouseOutLink","e","clientX","clientY","position","top","right","left"],"mappings":"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","sourcesContent":["import React, { Component, ReactDOM } from 'react';\r\nimport logo from '../logo.svg';\r\n//import logo from './logo2.png'\r\nimport '../css/Visual.css';\r\nimport  * as vis from 'react-vis-force';\r\nimport { Graph } from 'react-d3-graph';\r\nvar fs = require('fs');\r\nvar d3 = require('d3');\r\n\r\n \r\nvar mouseX = 0;\r\nvar mouseY = 0;\r\n// graph payload (with minimalist structure)\r\n\r\nconst data = {\r\n    nodes: [{ id: 'Harry', color: \"lightgreen\", size: 1200}, { id: 'Sally', size: 400, color: \"red\" }, { id: 'Alice', size: 650, color: \"blue\" }],\r\n    links: [{ source: 'Harry', target: 'Sally' }, { source: 'Harry', target: 'Alice' }]\r\n};\r\n \r\n// the graph configuration, you only need to pass down properties\r\n// that you want to override, otherwise default ones will be used\r\nconst myConfig = {\r\n        automaticRearrangeAfterDropNode: true,\r\n        collapsible: false,\r\n        directed: true,\r\n        focusAnimationDuration: 0.25,\r\n        focusZoom: 1,\r\n        highlightOpacity: 1,\r\n        linkHighlightBehavior: false,\r\n        maxZoom: 8,\r\n        minZoom: 0.1,\r\n        nodeHighlightBehavior: false,\r\n        panAndZoom: false,\r\n        staticGraph: false,\r\n    d3: {\r\n        alphaTarget: 0.05,\r\n        gravity: -500,\r\n        linkLength: 100,\r\n        linkStrength: 1\r\n    },\r\n    node: {\r\n        renderLabel: true,\r\n        fontSize: \"18px\",\r\n        // color: '#8CDCDA',\r\n        // size: 400,\r\n        svg: \"\",\r\n        highlightStrokeColor: 'blue'\r\n    },\r\n    link: {\r\n        fontWeight: \"normal\",\r\n        // type: \"CURVE_SMOOTH\",\r\n        highlightColor: 'lightblue'\r\n    },\r\n};\r\n\r\nvar data2 = require('../JSON/stuff.json');\r\n\r\nexport class Visual extends Component {\r\n    \r\n\r\n    constructor(props){\r\n        data2 = JSON.parse(data2);\r\n        super(props);\r\n    }\r\n\r\n    state = {\r\n        modalTop: mouseY,\r\n        modalLeft: mouseX,\r\n        modalDisplay: 'none',\r\n        modalOpacity: 0,\r\n    }\r\n\r\n    // graph event callbacks\r\n    onClickGraph = function() {\r\n        // window.alert(`Clicked the graph background`);\r\n    };\r\n    \r\n    onClickNode = (nodeId) => {\r\n\r\n        if(this.state.modalDisplay === 'none'){\r\n            this.setState({\r\n                modalTop: mouseY,\r\n                modalLeft: mouseX,\r\n                modalDisplay: '',\r\n                modalOpacity: 1,\r\n            })\r\n        }\r\n        else{\r\n            this.setState({\r\n                modalTop: mouseY,\r\n                modalLeft: mouseX,\r\n                modalDisplay: 'none',\r\n                modalOpacity: 0,\r\n            })\r\n        }\r\n\r\n        console.log(this.state.modalTop + \"hello\");\r\n        console.log(this.state.modalLeft + \"hello\");\r\n\r\n        // modalStyle.left = mouseX;\r\n        // modalStyle.top = mouseY;\r\n        // console.log(modalStyle.left);\r\n        // console.log(modalStyle.top);\r\n        // console.log(event.clientX);\r\n        // window.alert(`Clicked node ${nodeId}`);\r\n    };\r\n    \r\n    onRightClickNode = function(event, nodeId) {\r\n        console.log(data2);\r\n        // window.alert(`Right clicked node ${nodeId}`);\r\n    };\r\n    \r\n    onMouseOverNode = function(nodeId) {\r\n        // window.alert(`Mouse over node ${nodeId}`);\r\n    };\r\n    \r\n    onMouseOutNode = function(nodeId) {\r\n        // window.alert(`Mouse out node ${nodeId}`);\r\n    };\r\n    \r\n    onClickLink = function(source, target) {\r\n        // window.alert(`Clicked link between ${source} and ${target}`);\r\n    };\r\n    \r\n    onRightClickLink = function(event, source, target) {\r\n        // window.alert(`Right clicked link between ${source} and ${target}`);\r\n    };\r\n    \r\n    onMouseOverLink = function(source, target) {\r\n        // window.alert(`Mouse over in link between ${source} and ${target}`);\r\n    };\r\n    \r\n    onMouseOutLink = function(source, target) {\r\n        // window.alert(`Mouse out link between ${source} and ${target}`);\r\n    };\r\n\r\n\r\n\r\n    render(state) {\r\n\r\n        return (\r\n            <div onMouseMove={function(e){\r\n                mouseX = e.clientX;\r\n                mouseY = e.clientY;\r\n                console.log(mouseX);\r\n                console.log(mouseY);\r\n            }}>\r\n                <Graph\r\n                    id=\"graph-id\" // id is mandatory, if no id is defined rd3g will throw an error\r\n                    data={data}\r\n                    config={myConfig}\r\n                    onClickNode={this.onClickNode}\r\n                    onRightClickNode={this.onRightClickNode}\r\n                    onClickGraph={this.onClickGraph}\r\n                    onClickLink={this.onClickLink}\r\n                    onRightClickLink={this.onRightClickLink}\r\n                    onMouseOverNode={this.onMouseOverNode}\r\n                    onMouseOutNode={this.onMouseOutNode}\r\n                    onMouseOverLink={this.onMouseOverLink}\r\n                    onMouseOutLink={this.onMouseOutLink}\r\n                />;\r\n                <div style={{    \r\n                    position: \"absolute\",\r\n                    top: this.state.modalTop,\r\n                    right: 0,\r\n                    left: this.state.modalLeft,\r\n                    right: 0,\r\n                    width: 200,\r\n                    height: 200,\r\n                    display: this.state.modalDisplay,\r\n                    backgroundColor: \"yellow\",\r\n                    opacity: this.state.modalOpacity,\r\n                    }}/>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\n// const myConfig = {\r\n    \r\n//         \"automaticRearrangeAfterDropNode\": true,\r\n//         \"collapsible\": false,\r\n//         \"directed\": true,\r\n//         \"focusAnimationDuration\": 0.75,\r\n//         \"focusZoom\": 1,\r\n//         \"highlightDegree\": 1,\r\n//         \"highlightOpacity\": 1,\r\n//         \"linkHighlightBehavior\": false,\r\n//         \"maxZoom\": 8,\r\n//         \"minZoom\": 0.1,\r\n//         \"nodeHighlightBehavior\": false,\r\n//         \"panAndZoom\": false,\r\n//         \"staticGraph\": false,\r\n//         \"d3\": {\r\n//           \"alphaTarget\": 0.05,\r\n//           \"gravity\": -100,\r\n//           \"linkLength\": 100,\r\n//           \"linkStrength\": 1\r\n//         },\r\n//         \"node\": {\r\n//           \"color\": \"#d3d3d3\",\r\n//           \"fontColor\": \"black\",\r\n//           \"fontSize\": 8,\r\n//           \"fontWeight\": \"normal\",\r\n//           \"highlightColor\": \"SAME\",\r\n//           \"highlightFontSize\": 8,\r\n//           \"highlightFontWeight\": \"normal\",\r\n//           \"highlightStrokeColor\": \"SAME\",\r\n//           \"highlightStrokeWidth\": \"SAME\",\r\n//           \"labelProperty\": \"id\",\r\n//           \"mouseCursor\": \"pointer\",\r\n//           \"opacity\": 1,\r\n//           \"renderLabel\": true,\r\n//           \"size\": 200,\r\n//           \"strokeColor\": \"none\",\r\n//           \"strokeWidth\": 1.5,\r\n//           \"svg\": \"\",\r\n//           \"symbolType\": \"circle\"\r\n//         },\r\n//         \"link\": {\r\n//           \"color\": \"#d3d3d3\",\r\n//           \"fontColor\": \"black\",\r\n//           \"fontSize\": 8,\r\n//           \"fontWeight\": \"normal\",\r\n//           \"highlightColor\": \"#d3d3d3\",\r\n//           \"highlightFontSize\": 8,\r\n//           \"highlightFontWeight\": \"normal\",\r\n//           \"labelProperty\": \"label\",\r\n//           \"mouseCursor\": \"pointer\",\r\n//           \"opacity\": 1,\r\n//           \"renderLabel\": false,\r\n//           \"semanticStrokeWidth\": false,\r\n//           \"strokeWidth\": 1.5\r\n//         }\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}