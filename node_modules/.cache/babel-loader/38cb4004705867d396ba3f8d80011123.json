{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Jason\\\\Desktop\\\\skarpiez\\\\skarpiez\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Jason\\\\Desktop\\\\skarpiez\\\\skarpiez\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Jason\\\\Desktop\\\\skarpiez\\\\skarpiez\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"C:\\\\Users\\\\Jason\\\\Desktop\\\\skarpiez\\\\skarpiez\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Jason\\\\Desktop\\\\skarpiez\\\\skarpiez\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jason\\\\Desktop\\\\skarpiez\\\\skarpiez\\\\src\\\\pages\\\\Visual.js\";\nimport React, { Component, ReactDOM } from 'react';\nimport logo from \"../logo.svg\"; //import logo from './logo2.png'\n\nimport '../css/Visual.css';\nimport * as vis from 'react-vis-force';\nimport { Graph } from 'react-d3-graph'; // graph payload (with minimalist structure)\n\nvar data = {\n  nodes: [{\n    id: 'Harry'\n  }, {\n    id: 'Sally'\n  }, {\n    id: 'Alice'\n  }],\n  links: [{\n    source: 'Harry',\n    target: 'Sally'\n  }, {\n    source: 'Harry',\n    target: 'Alice'\n  }]\n}; // the graph configuration, you only need to pass down properties\n// that you want to override, otherwise default ones will be used\n\nvar myConfig = {\n  focusZoom: 1,\n  directed: true,\n  nodeHighlightBehavior: true,\n  staticGraph: false,\n  node: {\n    fontSize: \"18px\",\n    color: '#8CDCDA',\n    size: 400,\n    highlightStrokeColor: 'blue'\n  },\n  link: {\n    // type: \"CURVE_SMOOTH\",\n    highlightColor: 'lightblue'\n  }\n}; // graph event callbacks\n\nvar onClickGraph = function onClickGraph() {// window.alert(`Clicked the graph background`);\n};\n\nvar onClickNode = function onClickNode(nodeId) {// window.alert(`Clicked node ${nodeId}`);\n};\n\nvar onRightClickNode = function onRightClickNode(event, nodeId) {// window.alert(`Right clicked node ${nodeId}`);\n};\n\nvar onMouseOverNode = function onMouseOverNode(nodeId) {// window.alert(`Mouse over node ${nodeId}`);\n};\n\nvar onMouseOutNode = function onMouseOutNode(nodeId) {// window.alert(`Mouse out node ${nodeId}`);\n};\n\nvar onClickLink = function onClickLink(source, target) {// window.alert(`Clicked link between ${source} and ${target}`);\n};\n\nvar onRightClickLink = function onRightClickLink(event, source, target) {// window.alert(`Right clicked link between ${source} and ${target}`);\n};\n\nvar onMouseOverLink = function onMouseOverLink(source, target) {// window.alert(`Mouse over in link between ${source} and ${target}`);\n};\n\nvar onMouseOutLink = function onMouseOutLink(source, target) {// window.alert(`Mouse out link between ${source} and ${target}`);\n};\n\nexport var Visual =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Visual, _Component);\n\n  _createClass(Visual, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {// fetch('https://github.com/vasturiano/react-force-graph/blob/master/example/datasets/miserables.json').then(res => res.json()).then(p_data => {\n      //     data = p_data;\n      // })\n    }\n  }]);\n\n  function Visual(props) {\n    _classCallCheck(this, Visual);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Visual).call(this, props));\n  }\n\n  _createClass(Visual, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Graph, {\n        id: \"graph-id\" // id is mandatory, if no id is defined rd3g will throw an error\n        ,\n        data: data,\n        config: myConfig,\n        onClickNode: onClickNode,\n        onRightClickNode: onRightClickNode,\n        onClickGraph: onClickGraph,\n        onClickLink: onClickLink,\n        onRightClickLink: onRightClickLink,\n        onMouseOverNode: onMouseOverNode,\n        onMouseOutNode: onMouseOutNode,\n        onMouseOverLink: onMouseOverLink,\n        onMouseOutLink: onMouseOutLink,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), \";\");\n    }\n  }]);\n\n  return Visual;\n}(Component);","map":{"version":3,"sources":["C:\\Users\\Jason\\Desktop\\skarpiez\\skarpiez\\src\\pages\\Visual.js"],"names":["React","Component","ReactDOM","vis","Graph","data","nodes","id","links","source","target","myConfig","focusZoom","directed","nodeHighlightBehavior","staticGraph","node","fontSize","color","size","highlightStrokeColor","link","highlightColor","onClickGraph","onClickNode","nodeId","onRightClickNode","event","onMouseOverNode","onMouseOutNode","onClickLink","onRightClickLink","onMouseOverLink","onMouseOutLink","Visual","props"],"mappings":"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","sourcesContent":["import React, { Component, ReactDOM } from 'react';\r\nimport logo from '../logo.svg';\r\n//import logo from './logo2.png'\r\nimport '../css/Visual.css';\r\nimport  * as vis from 'react-vis-force';\r\n\r\nimport { Graph } from 'react-d3-graph';\r\n \r\n// graph payload (with minimalist structure)\r\nconst data = {\r\n    nodes: [{ id: 'Harry' }, { id: 'Sally' }, { id: 'Alice' }],\r\n    links: [{ source: 'Harry', target: 'Sally' }, { source: 'Harry', target: 'Alice' }]\r\n};\r\n \r\n// the graph configuration, you only need to pass down properties\r\n// that you want to override, otherwise default ones will be used\r\nconst myConfig = {\r\n    focusZoom: 1,\r\n    directed: true,\r\n    nodeHighlightBehavior: true,\r\n    staticGraph: false,\r\n    node: {\r\n        fontSize: \"18px\",\r\n        color: '#8CDCDA',\r\n        size: 400,\r\n        highlightStrokeColor: 'blue'\r\n    },\r\n    link: {\r\n        // type: \"CURVE_SMOOTH\",\r\n        highlightColor: 'lightblue'\r\n    }\r\n};\r\n \r\n// graph event callbacks\r\nconst onClickGraph = function() {\r\n    // window.alert(`Clicked the graph background`);\r\n};\r\n \r\nconst onClickNode = function(nodeId) {\r\n    // window.alert(`Clicked node ${nodeId}`);\r\n};\r\n \r\nconst onRightClickNode = function(event, nodeId) {\r\n    // window.alert(`Right clicked node ${nodeId}`);\r\n};\r\n \r\nconst onMouseOverNode = function(nodeId) {\r\n    // window.alert(`Mouse over node ${nodeId}`);\r\n};\r\n \r\nconst onMouseOutNode = function(nodeId) {\r\n    // window.alert(`Mouse out node ${nodeId}`);\r\n};\r\n \r\nconst onClickLink = function(source, target) {\r\n    // window.alert(`Clicked link between ${source} and ${target}`);\r\n};\r\n \r\nconst onRightClickLink = function(event, source, target) {\r\n    // window.alert(`Right clicked link between ${source} and ${target}`);\r\n};\r\n \r\nconst onMouseOverLink = function(source, target) {\r\n    // window.alert(`Mouse over in link between ${source} and ${target}`);\r\n};\r\n \r\nconst onMouseOutLink = function(source, target) {\r\n    // window.alert(`Mouse out link between ${source} and ${target}`);\r\n};\r\n\r\n\r\n\r\n\r\nexport class Visual extends Component {\r\n\r\n    componentDidMount(){\r\n        // fetch('https://github.com/vasturiano/react-force-graph/blob/master/example/datasets/miserables.json').then(res => res.json()).then(p_data => {\r\n        //     data = p_data;\r\n        // })\r\n        \r\n\r\n        \r\n    }\r\n\r\n    \r\n    \r\n    constructor(props){\r\n\r\n        super(props);\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Graph\r\n                    id=\"graph-id\" // id is mandatory, if no id is defined rd3g will throw an error\r\n                    data={data}\r\n                    config={myConfig}\r\n                    onClickNode={onClickNode}\r\n                    onRightClickNode={onRightClickNode}\r\n                    onClickGraph={onClickGraph}\r\n                    onClickLink={onClickLink}\r\n                    onRightClickLink={onRightClickLink}\r\n                    onMouseOverNode={onMouseOverNode}\r\n                    onMouseOutNode={onMouseOutNode}\r\n                    onMouseOverLink={onMouseOverLink}\r\n                    onMouseOutLink={onMouseOutLink}\r\n                />;\r\n          </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}